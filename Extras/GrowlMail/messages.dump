Last login: Tue Jul 27 10:28:14 on ttyp1
Welcome to Darwin!
~> cd Desktop/
~/Desktop> ls
Clean
GPGME-0.4.6
GPGMEProxyServer
GPGMail-1.0.2
GPGMail-sources.dmg
GPGPreferences
Icon?
We've never heard any other .textClipping
class-dump
class-dump-3.0.dmg
contactListPrefs.nib
~/Desktop> ./class-dump /System/Library/Frameworks/Message.framework/Versions/B/Message 
2004-07-27 10:28:49.218 class-dump[19580] Warning: Types have different number of members.  This is bad. (2 vs 4)
2004-07-27 10:28:49.219 class-dump[19580] {_CommandStackEntry=^{?}@} vs {_CommandStackEntry=@I@^{_CommandStackEntry}}
2004-07-27 10:28:49.221 class-dump[19580] Warning: Types have different number of members.  This is bad. (2 vs 4)
2004-07-27 10:28:49.222 class-dump[19580] {_CommandStackEntry=^{?}@} vs {_CommandStackEntry=@"NSString"I@^{_CommandStackEntry}}
2004-07-27 10:28:49.224 class-dump[19580] Warning: Types have different number of members.  This is bad. (2 vs 4)
2004-07-27 10:28:49.225 class-dump[19580] {_CommandStackEntry=^{?}@} vs {_CommandStackEntry=@"NSString"I@^{_CommandStackEntry}}
/*
 *     Generated by class-dump 3.0.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004 by Steve Nygard.
 */

struct CGImage;

struct EnrichedState {
    unsigned int excerptLevel:8;
    unsigned int alignment:4;
    unsigned int bold:1;
    unsigned int italic:1;
    unsigned int fixed:1;
    unsigned int underline:1;
    unsigned int fontDelta:16;
    id fontFamily;
    id color;
};

struct KClientPrincipalOpaque;

struct KClientSessionOpaque;

struct OpaqueSecCertificateRef;

struct OpaqueSecKeychainItemRef;

struct OpaqueSecPolicyRef;

struct OpaqueSecTrustRef;

struct SecCmsSignerInfoStr;

struct _CommandStackEntry {
    struct {
    } *_field1;
    id _field2;
};

struct _MessageSortingInformation {
    char _field1;
    char _field2;
    id _field3;
};

struct _NSPoint {
    float _field1;
    float _field2;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _NSRect {
    struct _NSPoint _field1;
    struct _NSSize _field2;
};

struct _NSSize {
    float _field1;
    float _field2;
};

struct _NSZone;

struct __CFArray;

struct __CFDictionary;

struct __CFReadStream;

struct __CFSet;

struct __CFString;

struct __CFTree;

struct __CFWriteStream;

struct __SCDynamicStore;

struct __SKDocument;

struct __SKIndex;

struct _opaque_pthread_cond_t {
    long sig;
    char opaque[24];
};

struct _opaque_pthread_t {
    long _field1;
    struct _pthread_handler_rec *_field2;
    char _field3[596];
};

struct _pthread_handler_rec;

typedef struct {
    int _field1;
    id _field2;
    id _field3;
    unsigned int _field4;
} CDAnonymousStruct5;

typedef struct {
    id _field1;
    id _field2;
    struct __CFDictionary *_field3;
    struct __CFDictionary *_field4;
    struct __CFDictionary *_field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    id _field9;
} CDAnonymousStruct7;

typedef struct {
    int version;
    int count;
    int timeStamp;
    float tocHeight;
    unsigned int sortOrder;
    unsigned int sortedAscending;
    int unused1;
    int unused2;
} CDAnonymousStruct4;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
} CDAnonymousStruct1;

typedef struct {
    unsigned short buffer[64];
    struct __CFString *theString;
    unsigned short *directBuffer;
    struct {
        int location;
        int length;
    } rangeToBuffer;
    int bufferedRangeStart;
    int bufferedRangeEnd;
} CDAnonymousStruct6;

typedef struct {
    id _field1;
    id _field2;
    char _field3;
    id _field4;
    id _field5;
    id _field6;
    unsigned int _field7;
    id _field8;
} CDAnonymousStruct3;

typedef struct {
    id _field1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :2;
} CDAnonymousStruct2;

union _IMAPResponseData {
    struct {
        int responseCode;
        id responseInfoAndOrUserData;
    } basic;
    NSArray *capabilities;
    unsigned int number;
    NSArray *flags;
    struct {
        NSString *mailboxName;
        NSDictionary *entries;
    } status;
    NSArray *searchResults;
    struct {
        unsigned long mailboxAttributes;
        id separatorAndOrMboxName;
    } list;
    struct {
        unsigned long number;
        NSDictionary *results;
    } fetch;
    struct {
        NSString *name;
        NSArray *parameters;
    } other;
};

/*
 * File: /System/Library/Frameworks/Message.framework/Versions/B/Message
 */

@protocol ABImageClient <NSObject>
- (void)consumeImageData:(id)fp8 forTag:(int)fp12;
@end

@protocol IMAPMailboxListFilter
- (void)filterMailboxList:(id)fp8 forMailbox:(id)fp12 options:(int)fp16;
@end

@protocol NSCoding
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)fp8;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)fp8;
@end

@protocol NSObject
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)fp8;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12 withObject:(id)fp16;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)fp8;
- (BOOL)isMemberOfClass:(Class)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (BOOL)respondsToSelector:(SEL)fp8;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned int)retainCount;
- (id)description;
@end

@protocol SASLSecurityLayer <NSObject>
- (unsigned int)encryptionBufferSize;
- (id)createDecryptedDataForBytes:(const char *)fp8 length:(unsigned int)fp12;
- (id)createEncryptedDataForBytes:(const char *)fp8 length:(unsigned int)fp12;
@end

@interface NSPrivateMessageClassForFindingBundle : NSObject
{
}

@end

@interface MessageStore : NSObject
{
    struct {
        unsigned int isReadOnly:1;
        unsigned int hasUnsavedChangesToMessageData:1;
        unsigned int hasUnsavedChangesToIndex:1;
        unsigned int indexIsValid:1;
        unsigned int haveOpenLockFile:1;
        unsigned int rebuildingTOC:1;
        unsigned int compacting:1;
        unsigned int cancelInvalidation:1;
        unsigned int forceInvalidation:1;
        unsigned int isWritingChangesToDisk:1;
        unsigned int isTryingToClose:1;
        unsigned int reserved:21;
    } _flags;
    MailboxUid *_mailboxUid;
    MailAccount *_account;
    MboxIndex *_index;
    NSMutableArray *_allMessages;
    NSMutableArray *_messagesToBeAddedToIndex;
    NSMutableArray *_messagesToBeRemovedFromIndex;
    unsigned int _allMessagesSize;
    unsigned int _deletedMessagesSize;
    unsigned int _deletedMessageCount;
    unsigned int _unreadMessageCount;
    id _updateIndexMonitor;
    int _state;
    ObjectCache *_headerDataCache;
    ObjectCache *_headerCache;
    ObjectCache *_bodyDataCache;
    ObjectCache *_bodyCache;
    NSTimer *_timer;
    NSMutableSet *_uniqueStrings;
    double timeOfLastAutosaveOperation;
}

+ (void)initialize;
+ (unsigned int)numberOfCurrentlyOpenStores;
+ (id)descriptionOfOpenStores;
+ (id)currentlyAvailableStoreForUid:(id)fp8;
+ (id)currentlyAvailableStoresForAccount:(id)fp8;
+ (id)registerAvailableStore:(id)fp8;
+ (void)removeStoreFromCache:(id)fp8;
+ (BOOL)createEmptyStoreIfNeededForPath:(id)fp8;
+ (BOOL)createEmptyStoreForPath:(id)fp8;
+ (BOOL)storeAtPathIsWritable:(id)fp8;
+ (BOOL)cheapStoreAtPathIsEmpty:(id)fp8;
+ (int)copyMessages:(id)fp8 toMailboxUid:(id)fp12 shouldDelete:(BOOL)fp16;
- (void)release;
- (id)initWithMailboxUid:(id)fp8 readOnly:(BOOL)fp12;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)openAsynchronouslyUpdatingIndex:(BOOL)fp8 andOtherMetadata:(BOOL)fp12;
- (void)openAsynchronously;
- (void)openSynchronously;
- (void)openSynchronouslyUpdatingIndex:(BOOL)fp8 andOtherMetadata:(BOOL)fp12;
- (void)updateMetadataAsynchronously;
- (void)updateMetadata;
- (void)didOpen;
- (void)writeUpdatedMessageDataToDisk;
- (void)invalidateSavingChanges:(BOOL)fp8;
- (id)account;
- (id)mailboxUid;
- (BOOL)isOpened;
- (id)storePathRelativeToAccount;
- (id)displayName;
- (const char *)displayNameForLogging;
- (BOOL)isReadOnly;
- (id)description;
- (BOOL)isTrash;
- (BOOL)isDrafts;
- (void)messageFlagsDidChange:(id)fp8 flags:(id)fp12;
- (void)structureDidChange;
- (void)messagesWereAdded:(id)fp8;
- (void)messagesWereCompacted:(id)fp8;
- (void)updateUserInfoToLatestValues;
- (unsigned int)totalMessageSize;
- (void)deletedCount:(unsigned int *)fp8 andSize:(unsigned int *)fp12;
- (unsigned int)totalCount;
- (unsigned int)unreadCount;
- (unsigned int)indexOfMessage:(id)fp8;
- (id)copyOfAllMessages;
- (id)mutableCopyOfAllMessages;
- (void)addMessagesToAllMessages:(id)fp8;
- (void)addMessageToAllMessages:(id)fp8;
- (void)insertMessageToAllMessages:(id)fp8 atIndex:(unsigned int)fp12;
- (id)_defaultRouterDestination;
- (id)routeMessages:(id)fp8;
- (id)finishRoutingMessages:(id)fp8 routed:(id)fp12;
- (BOOL)canRebuild;
- (void)rebuildTableOfContentsAsynchronously;
- (BOOL)canCompact;
- (void)doCompact;
- (void)deleteMessagesOlderThanNumberOfDays:(int)fp8 compact:(BOOL)fp12;
- (void)deleteMessages:(id)fp8 moveToTrash:(BOOL)fp12;
- (void)undeleteMessages:(id)fp8;
- (void)deleteLastMessageWithHeader:(id)fp8 forHeaderKey:(id)fp12 compactWhenDone:(BOOL)fp16;
- (BOOL)allowsAppend;
- (int)undoAppendOfMessageIDs:(id)fp8;
- (int)appendMessages:(id)fp8 unsuccessfulOnes:(id)fp12 newMessageIDs:(id)fp16;
- (int)appendMessages:(id)fp8 unsuccessfulOnes:(id)fp12;
- (id)messageWithValue:(id)fp8 forHeader:(id)fp12 options:(unsigned int)fp16;
- (id)messageForMessageID:(id)fp8;
- (void)_setHeaderDataInCache:(id)fp8 forMessage:(id)fp12;
- (id)headerDataForMessage:(id)fp8;
- (id)bodyDataForMessage:(id)fp8;
- (id)fullBodyDataForMessage:(id)fp8;
- (id)bodyForMessage:(id)fp8 fetchIfNotAvailable:(BOOL)fp12;
- (id)headersForMessage:(id)fp8;
- (id)dataForMimePart:(id)fp8;
- (BOOL)hasCachedDataForMimePart:(id)fp8;
- (id)uniquedString:(id)fp8;
- (id)colorForMessage:(id)fp8;
- (BOOL)_shouldChangeComponentMessageFlags;
- (id)setFlagsFromDictionary:(id)fp8 forMessages:(id)fp12;
- (id)setFlagsFromDictionary:(id)fp8 forMessage:(id)fp12;
- (void)setFlag:(id)fp8 state:(BOOL)fp12 forMessages:(id)fp16;
- (void)setColor:(id)fp8 highlightTextOnly:(BOOL)fp12 forMessages:(id)fp16;
- (void)messageColorsNeedToBeReevaluated;
- (void)startSynchronization;
- (id)performBruteForceSearchWithString:(id)fp8 options:(int)fp12;
- (char *)createSerialNumberStringFrom:(char *)fp8 colorCode:(unsigned short)fp12;
- (id)_getSerialNumberString;
- (void)setNumberOfAttachments:(unsigned int)fp8 isSigned:(BOOL)fp12 isEncrypted:(BOOL)fp16 forMessage:(id)fp20;
- (void)updateNumberOfAttachmentsForMessages:(id)fp8;
- (void)updateMessageColorsSynchronouslyForMessages:(id)fp8;
- (void)updateMessageColorsAsynchronouslyForMessages:(id)fp8;
- (void)setJunkMailLevel:(int)fp8 forMessages:(id)fp12;
- (void)setJunkMailLevel:(int)fp8 forMessages:(id)fp12 trainJunkMailDatabase:(BOOL)fp16;
- (id)status;
- (void)fetchSynchronously;
- (BOOL)setPreferredEncoding:(unsigned long)fp8 forMessage:(id)fp12;
- (void)suggestSortOrder:(id)fp8 ascending:(BOOL)fp12;
- (id)sortOrder;
- (BOOL)isSortedAscending;

@end

@interface MessageStore (MessageFrameworkOnly)
+ (void)_autosaveMessageStore:(void *)fp8;
- (void)_cancelAutosave;
- (void)_setNeedsAutosave;
- (id)_fetchHeaderDataForMessage:(id)fp8;
- (id)_fetchBodyDataForMessage:(id)fp8 andHeaderDataIfReadilyAvailable:(id *)fp12;
- (id)_fetchBodyForMessage:(id)fp8;
- (BOOL)_shouldCallCompactWhenClosing;
- (void)_compactMessageAtIndex:(unsigned int)fp8;
- (BOOL)_isReadyToBeInvalidated;
- (void)_saveChanges;
- (void)_invalidate;
- (void)_invalidateInBackground;
- (void)_countUnreadAndDeleted;
- (void)_cleanUpStaleAttachments;
- (id)_lockFilePath;
- (BOOL)_acquireLockFile:(id)fp8;
- (void)_removeLockFile:(id)fp8;
- (void)_flushAllCaches;
- (void)_flushAllMessageData;
- (void)_rebuildTableOfContentsSynchronously;
- (id)_setOrGetBody:(id)fp8 forMessage:(id)fp12;
- (void)updateMessageColorsSynchronouslyForMessages:(id)fp8 postingNotification:(BOOL)fp12;
@end

@interface NSDataMessageStore : MessageStore
{
    NSData *_data;
}

- (id)initWithData:(id)fp8;
- (void)dealloc;
- (id)storePath;
- (id)headerDataForMessage:(id)fp8;
- (id)bodyDataForMessage:(id)fp8;
- (id)_setOrGetBody:(id)fp8 forMessage:(id)fp12;

@end

@interface MessageRouter : NSObject
{
    MessageStore *_store;
    NSMutableArray *_queuedMessages;
    NSConditionLock *_queuedMessagesFull;
    NSConditionLock *_queuedMessagesEmpty;
    unsigned int _bytesInQueue;
    BOOL _routingThreadShouldQuit;
    unsigned int _numMessagesRoutedSoFar;
}

+ (void)initialize;
+ (BOOL)_hasColorRules;
+ (int)colorChangeCounter;
+ (void)setColorChangeCounter:(int)fp8;
+ (void)enqueueColorRulesDidChange;
+ (BOOL)_colorRuleExistsAfterRule:(id)fp8;
+ (BOOL)colorsUpdateDynamically;
+ (void)ruleAffectingColorsDidChange:(id)fp8;
+ (void)ruleDidChange;
+ (void)mailboxWillBeRenamedOrInvalidated;
+ (void)_mailboxBecameInvalid:(id)fp8;
+ (void)_mailboxWasRenamed:(id)fp8;
+ (id)defaultAppleEmailAddresses;
+ (id)_defaultSortRules;
+ (id)sortRulesPath;
+ (id)_sortRulesFromDictionaryRepresentations:(id)fp8;
+ (id)_sortRuleDictionaryRepresentations;
+ (void)_setupSortRules;
+ (void)writeRulesToDisk;
+ (id)rules;
+ (unsigned int)numberOfRules;
+ (id)ruleAtIndex:(int)fp8;
+ (void)removeRuleAtIndex:(int)fp8;
+ (void)insertRule:(id)fp8 atIndex:(int)fp12;
+ (void)addRule:(id)fp8;
+ (void)removeRule:(id)fp8;
+ (id)headersRequiredForRouting;
+ (void)headersRequiredForRoutingDidChange;
+ (void)putRulesThatWantsToHandleMessage:(id)fp8 intoArray:(id)fp12 colorRulesOnly:(BOOL)fp16;
+ (id)colorForMessage:(id)fp8 highlightTextUsingColor:(char *)fp12;
+ (int)junkMailTrainingBalance;
+ (void)incrementJunkMailTrainingDebtBy:(int)fp8;
+ (int)junkMailTrainingDebt;
+ (void)incrementJunkMailTrainingCreditBy:(int)fp8;
+ (int)junkMailTrainingCredit;
+ (void)resetJunkMailTrainingBalance;
+ (void)noteJunkMailboxHasBeenViewed;
+ (BOOL)junkMailboxHasBeenViewedRecently;
+ (int)junkMailBehavior;
+ (void)setJunkMailBehavior:(int)fp8;
+ (void)evaluateJunkMailBehaviorFromRules;
+ (void)reevaluateJunkMessagesInMailboxes:(id)fp8;
+ (id)junkMailRule;
+ (void)setJunkMailRule:(id)fp8;
+ (void)useJunkMailHeaderFlags:(BOOL)fp8;
+ (BOOL)isUsingJunkMailHeaderFlags;
+ (id)junkMailHeaderFlags;
- (BOOL)_routeMessagesIndividually;
- (id)routeMessages:(id)fp8 fromStores:(id)fp12;
- (void)asynchronouslyRouteMessages:(id)fp8;
- (void)routeQueuedMessages;
- (void)waitForRoutingToFinish;
- (void)setStore:(id)fp8;
- (void)dealloc;

@end

@interface MessageRule : NSObject <NSCopying>
{
    NSString *_ruleName;
    NSMutableArray *_criteria;
    MailboxUid *_destinationMailbox;
    NSString *_destinationMailboxPath;
    NSString *_soundPath;
    NSString *_speechAlert;
    NSArray *_recipients;
    int _autoResponseType;
    NSString *_responseMessage;
    NSColor *_color;
    NSString *_appleScriptPath;
    unsigned int _flags;
    unsigned int _isActive:1;
    unsigned int _shouldTransferMessage:1;
    unsigned int _shouldCopyMessage:1;
    unsigned int _allCriteriaMustBeSatisfied:1;
    unsigned int _shouldStopEvaluatingRules:1;
    unsigned int _highlightTextUsingColor:1;
    unsigned int _shouldNotifyUser:1;
    NSDictionary *_otherInfo;
    MailboxUid *_copyDestinationMailbox;
    NSString *_copyDestinationMailboxPath;
    unsigned short _version;
    BOOL _isJunkMailRule;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)description;
- (id)initWithRule:(id)fp8;
- (id)initWithDictionaryRepresentation:(id)fp8;
- (id)dictionaryRepresentation;
- (void)_updateDefaultAppleEmailAddressRule;
- (void)_appendMessages:(id)fp8 fromSourceStore:(id)fp12 toDestinationMailbox:(id)fp16 destinationStores:(id)fp20 rejectedMessages:(id)fp24 messagesToBeDeleted:(id)fp28;
- (void)performActionsOnMessages:(id)fp8 destinationStores:(id)fp12 rejectedMessages:(id)fp16 messagesToBeDeleted:(id)fp20;
- (void)_performAutoResponseActionOnMessages:(id)fp8;
- (void)_performAppleScriptActionWithMessages:(id)fp8;
- (void)addHeadersRequiredForRoutingToArray:(id)fp8;
- (BOOL)doesMessageSatisfyCriteria:(id)fp8;
- (BOOL)isValid:(id)fp8;
- (id)ruleName;
- (void)setRuleName:(id)fp8;
- (unsigned short)version;
- (void)setVersion;
- (void)clearVersion;
- (BOOL)isTerminalAction;
- (void)setIsJunkMailRule:(BOOL)fp8;
- (BOOL)isJunkMailRule;
- (BOOL)hasJunkMailCriterion;
- (BOOL)isActive;
- (void)setIsActive:(BOOL)fp8;
- (BOOL)allCriteriaMustBeSatisfied;
- (void)setAllCriteriaMustBeSatisfied:(BOOL)fp8;
- (id)criteria;
- (void)setCriteria:(id)fp8;
- (BOOL)shouldTransferMessage;
- (void)setShouldTransferMessage:(BOOL)fp8;
- (BOOL)shouldCopyMessage;
- (void)setShouldCopyMessage:(BOOL)fp8;
- (id)_destinationMailbox:(id)fp8 withPath:(id)fp12 setUsingSelector:(SEL)fp16 createIfNeeded:(BOOL)fp20;
- (void)_setDestinationIvar:(id *)fp8 toDestinationMailbox:(id)fp12 destinationPathIvar:(id *)fp16;
- (id)_destinationMailboxCreateIfNeeded:(BOOL)fp8;
- (id)destinationMailbox;
- (void)setDestinationMailbox:(id)fp8;
- (id)_copyDestinationMailboxCreateIfNeeded:(BOOL)fp8;
- (id)copyDestinationMailbox;
- (void)setCopyDestinationMailbox:(id)fp8;
- (id)appleScriptDestinationMailbox;
- (id)appleScriptCopyDestinationMailbox;
- (void)_evaluateIfNeeded:(id)fp8 andSetUsingSelector:(SEL)fp12;
- (void)setAppleScriptCopyDestinationMailbox:(id)fp8;
- (void)setAppleScriptDestinationMailbox:(id)fp8;
- (unsigned long)flagsToApply;
- (void)setFlagsToApply:(unsigned long)fp8;
- (id)appleScriptPath;
- (void)setAppleScriptPath:(id)fp8;
- (id)color;
- (void)setColor:(id)fp8;
- (BOOL)highlightTextUsingColor;
- (void)setHighlightTextUsingColor:(BOOL)fp8;
- (BOOL)affectsColorEvaluation;
- (int)autoResponseType;
- (void)setAutoResponseType:(int)fp8;
- (id)autoResponseRecipients;
- (void)setAutoResponseRecipients:(id)fp8;
- (id)responseMessage;
- (void)setResponseMessage:(id)fp8;
- (id)soundPath;
- (void)setSoundPath:(id)fp8;
- (id)speechAlert;
- (void)setSpeechAlert:(id)fp8;
- (BOOL)shouldStopEvaluatingRules;
- (void)setShouldStopEvaluatingRules:(BOOL)fp8;
- (BOOL)shouldNotifyUser;
- (void)setShouldNotifyUser:(BOOL)fp8;
- (void)updateToNewestVersion;
- (id)objectSpecifier;

@end

@interface MessageRule (Applescript)
- (void)updateIsActive;
- (int)actionColorMessage;
- (void)setActionColorMessage:(int)fp8;
- (int)highlightColorValue:(id)fp8;
- (BOOL)actionDeleteMessage;
- (void)setActionDeleteMessage:(BOOL)fp8;
- (id)actionForwardToAddress;
- (void)setActionForwardToAddress:(id)fp8;
- (id)actionForwardText;
- (void)setActionForwardText:(id)fp8;
- (BOOL)actionMarkAsFlagged;
- (void)setActionMarkAsFlagged:(BOOL)fp8;
- (BOOL)actionMarkAsRead;
- (void)setActionMarkAsRead:(BOOL)fp8;
- (id)actionPlaySound;
- (void)setActionPlaySound:(id)fp8;
- (id)actionRedirectToAddress;
- (void)setActionRedirectToAddress:(id)fp8;
- (id)actionReplyText;
- (void)setActionReplyText:(id)fp8;
- (id)actionRunApplescript;
- (void)setActionRunApplescript:(id)fp8;
- (id)ruleDescription;
- (void)setRuleDescription:(id)fp8;
- (void)insertInCriteria:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInCriteria:(id)fp8;
- (void)removeFromCriteriaAtIndex:(unsigned int)fp8;
- (void)setAddress:(id)fp8 forResponseType:(int)fp12;
@end

@interface MessageRuleCriterion : NSObject
{
    NSString *_criterionIdentifier;
    NSString *_expression;
    int _qualifier;
    MessageRule *_rule;
    NSString *_groupUniqueId;
}

+ (void)initialize;
+ (id)criteriaFromDefaultsArray:(id)fp8;
+ (id)defaultsArrayFromCriteria:(id)fp8;
+ (void)_updateAddressComments:(id)fp8;
+ (int)criterionTypeForString:(id)fp8;
+ (id)stringForCriterionType:(int)fp8;
- (id)initWithCriterion:(id)fp8 expression:(id)fp12;
- (void)setMessageRule:(id)fp8;
- (id)initWithDictionary:(id)fp8;
- (void)dealloc;
- (BOOL)isEqual:(id)fp8;
- (id)description;
- (id)dictionaryRepresentation;
- (int)criterionType;
- (void)setCriterionType:(int)fp8;
- (id)criterionIdentifier;
- (void)setCriterionIdentifier:(id)fp8;
- (id)_qualifierString;
- (int)qualifier;
- (void)setQualifier:(int)fp8;
- (id)expression;
- (void)setExpression:(id)fp8;
- (id)groupUniqueId;
- (void)setGroupUniqueId:(id)fp8;
- (id)_headersRequiredForEvaluation;
- (void)addHeadersRequiredForRoutingToArray:(id)fp8;
- (BOOL)_evaluateDateCriterion:(id)fp8;
- (BOOL)_evaluateHeaderCriterion:(id)fp8;
- (BOOL)_evaluateBodyCriterion:(id)fp8;
- (BOOL)_evaluateAddressBookCriterion:(id)fp8;
- (BOOL)_doesGroup:(id)fp8 containSender:(id)fp12;
- (BOOL)_evaluateMemberOfGroupCriterion:(id)fp8;
- (BOOL)_evaluateAccountCriterion:(id)fp8;
- (BOOL)_evaluateAddressHistoryCriterion:(id)fp8;
- (BOOL)_evaluateFullNameCriterion:(id)fp8;
- (BOOL)_evaluateJunkMailCriterion:(id)fp8;
- (BOOL)doesMessageSatisfyCriterion:(id)fp8;
- (int)messageRuleQualifierForString:(id)fp8;
- (id)stringForMessageRuleQualifier:(int)fp8;
- (BOOL)hasExpression;
- (BOOL)hasQualifier;
- (id)objectSpecifier;

@end

@interface MessageRuleCriterion (ApplescriptRuleCriterion)
- (int)ruleType;
- (void)setRuleType:(int)fp8;
- (id)ruleHeader;
- (void)setRuleHeader:(id)fp8;
- (int)ruleQualifier;
- (void)setRuleQualifier:(int)fp8;
- (id)ruleExpression;
- (void)setRuleExpression:(id)fp8;
@end

@interface ExchangeConnection : IMAPConnection
{
}

- (id)_fetchArgumentForMessageUidsAndFlags;
- (id)_fetchArgumentForMessageSkeletons;
- (BOOL)_isFetchResultValid:(id)fp8;

@end

@interface IMAPConnection : Connection
{
    id _delegate;
    id _mailboxListFilter;
    unsigned int _delegateShouldHandleUntaggedResponse:1;
    unsigned int _delegateDidReceiveResponse:1;
    unsigned int _delegateDidFinishSelect:1;
    unsigned int _delegateDidDisconnect:1;
    unsigned int _serverStartTLS:1;
    unsigned int _serverLiteralPlus:1;
    unsigned int _serverUidPlus:1;
    unsigned int _serverChildren:1;
    unsigned int _serverIdle:1;
    unsigned int _serverNamespace:1;
    unsigned int _serverMultiAppend:1;
    unsigned int _serverUnselect:1;
    unsigned int _connectionState:4;
    NSString *_separatorChar;
    NSString *_serverPathPrefix;
    NSString *_selectedMailbox;
    NSMutableSet *_capabilities;
    unsigned int _commandNumber;
    NSMutableData *_data;
    NSLock *_lock;
    unsigned int _readBufferSize;
    double _expirationTime;
}

+ (void)initialize;
+ (void)setReadSizeParameters;
- (id)init;
- (void)dealloc;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (id)mailboxListFilter;
- (void)setMailboxListFilter:(id)fp8;
- (BOOL)_doBasicConnectionUsingAccount:(id)fp8;
- (BOOL)connectUsingAccount:(id)fp8;
- (void)disconnectAndNotifyDelegate:(BOOL)fp8;
- (void)disconnect;
- (int)connectionState;
- (BOOL)isValid;
- (id)_responseFromSendingCommands:(CDAnonymousStruct5 *)fp8 count:(unsigned int)fp12;
- (unsigned int)_sendCommands:(CDAnonymousStruct5 *)fp8 count:(unsigned int)fp12 response:(id *)fp16;
- (void)didFinishCommands:(CDAnonymousStruct5 *)fp8 count:(unsigned int)fp12;
- (id)_copyNextServerResponseForCommand:(CDAnonymousStruct5 *)fp8;
- (id)_copyNextTaggedOrContinuationResponseForCommand:(CDAnonymousStruct5 *)fp8;
- (id)_errorForResponse:(id)fp8 command:(int)fp12;
- (id)capabilities;
- (void)noop;
- (BOOL)authenticateUsingAccount:(id)fp8;
- (BOOL)loginWithAccount:(id)fp8 password:(id)fp12;
- (BOOL)logout;
- (id)separatorChar;
- (id)_doListCommand:(int)fp8 withReference:(id)fp12 mailboxName:(id)fp16 options:(int)fp20;
- (id)listingForMailbox:(id)fp8 options:(int)fp12;
- (id)subscribedListingForMailbox:(id)fp8 options:(int)fp12;
- (void)close;
- (void)closeAndLogout;
- (void)unselect;
- (BOOL)expunge;
- (BOOL)expungeUids:(id)fp8;
- (BOOL)supportsUidPlus;
- (void)fetchStatusForMailboxes:(id)fp8 args:(id)fp12;
- (id)statusForMailbox:(id)fp8 args:(id)fp12;
- (BOOL)examineMailbox:(id)fp8;
- (BOOL)selectMailbox:(id)fp8;
- (id)selectedMailbox;
- (BOOL)createMailbox:(id)fp8;
- (BOOL)deleteMailbox:(id)fp8;
- (BOOL)renameMailbox:(id)fp8 toMailbox:(id)fp12;
- (BOOL)_sendMailboxCommand:(int)fp8 withArguments:(id)fp12;
- (id)search:(id)fp8;
- (int)searchCount:(id)fp8;
- (BOOL)storeFlags:(id)fp8 state:(BOOL)fp12 forUids:(id)fp16;
- (BOOL)deleteMessagesOlderThanNumberOfDays:(int)fp8;
- (id)_responseFromSendingCommand:(CDAnonymousStruct5 *)fp8 andPossiblyCreateMailbox:(id)fp12;
- (BOOL)copyUids:(id)fp8 toMailboxNamed:(id)fp12 newMessageInfo:(id *)fp16;
- (BOOL)appendData:(id)fp8 toMailboxNamed:(id)fp12 flags:(id)fp16 dateReceived:(id)fp20 newMessageInfo:(id *)fp24;
- (BOOL)fetchUidsAndFlagsForUidRange:(CDAnonymousStruct1)fp8 intoArray:(id)fp16;
- (id)_headersRequiredForRouting;
- (void)fetchMessageSkeletonsForUidRange:(CDAnonymousStruct1)fp8 intoArray:(id)fp16 withHeaders:(id)fp20;
- (id)fetchHeadersForUid:(int)fp8;
- (id)fetchInternalDateForUids:(id)fp8;
- (id)fetchMessageIDHeaderForUids:(id)fp8;
- (unsigned int)readBufferSize;
- (void)setReadBufferSize:(unsigned int)fp8;
- (id)fetchRawDataForUid:(int)fp8 partNumber:(id)fp12 intoDestinationFilePath:(id)fp16 keepMessageInMemory:(BOOL)fp20 sizeHint:(unsigned int)fp24;
- (id)fetchBodyStructureForUid:(int)fp8;
- (BOOL)_doUidFetchWithRange:(CDAnonymousStruct1)fp8 arguments:(id)fp16 validateMessage:(BOOL)fp20 results:(id)fp24;
- (id)_messageSetForNumbers:(id)fp8;
- (id)_messageSetForRange:(CDAnonymousStruct1)fp8;
- (id)parenthesizedStringWithObjects:(id)fp8;
- (BOOL)authenticateUsingAccount:(id)fp8 authenticator:(id)fp12;
- (BOOL)startTLSForAccount:(id)fp8;
- (void)lock;
- (id)description;

@end

@interface IMAPConnection (MFPrivate)
- (id)_readDataOfLength:(int)fp8;
- (id)_fetchArgumentForMessageUidsAndFlags;
- (id)_fetchArgumentForMessageSkeletons;
- (BOOL)_isFetchResultValid:(id)fp8;
@end

@interface IMAPStore : MessageStore <NSCoding>
{
    NSMutableArray *_unsolicitedResponses;
    NSString *_statusMessageFormat;
    int _statusMessageCount;
    int _statusMessageMaximum;
    int _activityMonitorKey;
    unsigned int _numberOfFirstNewMessage;
    unsigned int _synchronizationState:3;
    unsigned int _supportsCustomPermanentFlags:1;
    unsigned int _updatingCache:1;
    unsigned int _updateIndex:1;
    unsigned int _updateEverythingElse:1;
    unsigned int _reserved:25;
    NSString *_mailboxName;
    NSConditionLock *_synchronizationStateLock;
    NSMutableDictionary *_headersForMessagesBeingRouted;
    NSSet *_cachedContents;
    NSDate *_cachedDirModDate;
    NSMutableDictionary *_recentFlagChangesByMessage;
}

+ (BOOL)storeAtPathIsWritable:(id)fp8;
+ (BOOL)createEmptyStoreForPath:(id)fp8;
+ (void)initialize;
- (id)initWithMailboxUid:(id)fp8 readOnly:(BOOL)fp12;
- (void)dealloc;
- (void)_copyDataFrom:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)openSynchronouslyUpdatingIndex:(BOOL)fp8 andOtherMetadata:(BOOL)fp12;
- (void)updateMetadata;
- (void)writeUpdatedMessageDataToDisk;
- (void)_invalidate;
- (BOOL)_shouldCallCompactWhenClosing;
- (void)fetchSynchronously;
- (BOOL)canRebuild;
- (void)_rebuildTableOfContentsSynchronously;
- (id)mailboxName;
- (BOOL)canCompact;
- (void)doCompact;
- (void)messagesWereCompacted:(id)fp8;
- (void)deleteMessagesOlderThanNumberOfDays:(int)fp8 compact:(BOOL)fp12;
- (BOOL)allowsAppend;
- (void)_addOfflineTransferMessages:(id)fp8;
- (id)_copyOfflineTransferMessage:(id)fp8 withUid:(unsigned int)fp12;
- (BOOL)_copyMessages:(id)fp8 toStore:(id)fp12 newMessages:(id)fp16;
- (id)_appendDataForMessage:(id)fp8;
- (void)_copyCacheFilesForMessage:(id)fp8 fromDirectory:(id)fp12 toBasePath:(id)fp16;
- (int)_doAppend:(CDAnonymousStruct3 *)fp8;
- (int)appendMessages:(id)fp8 unsuccessfulOnes:(id)fp12 newMessageIDs:(id)fp16;
- (int)undoAppendOfMessageIDs:(id)fp8;
- (void)_synchronouslyStoreFlagsFromDictionary:(id)fp8 forMessages:(id)fp12;
- (void)_setFlagsFromDictionary:(id)fp8 forMessages:(id)fp12;
- (id)setFlagsFromDictionary:(id)fp8 forMessages:(id)fp12;
- (BOOL)setPreferredEncoding:(unsigned long)fp8 forMessage:(id)fp12;
- (id)_dataForMessage:(id)fp8 readHeadersOnly:(BOOL)fp12;
- (id)_createDataFromMimePart:(id)fp8 threshold:(unsigned int)fp12;
- (id)_fetchPartialDataIfNecessaryForMessage:(id)fp8;
- (id)_fetchDataForMimePart:(id)fp8 keepInMemory:(BOOL)fp12 writeToDisk:(BOOL)fp16;
- (id)dataForMimePart:(id)fp8;
- (id)_cacheDirectoryContentsCheckingModDate:(BOOL)fp8;
- (id)_cacheDirectoryContents;
- (BOOL)hasCachedDataForMimePart:(id)fp8;
- (id)fullBodyDataForMessage:(id)fp8;
- (id)_fetchBodyDataForMessage:(id)fp8 andHeaderDataIfReadilyAvailable:(id *)fp12;
- (id)_fetchHeaderDataForMessage:(id)fp8;
- (id)headersForMessage:(id)fp8;
- (void)_setInternalDateForMessages:(id)fp8;
- (void)_fetchMessageIDHeaderForMessages:(id)fp8;
- (id)colorForMessage:(id)fp8;
- (id)messageForMessageID:(id)fp8;
- (BOOL)_allMessagesHaveDateReceived;
- (id)_messageForUid:(unsigned int)fp8;
- (id)_messageForTemporaryUid:(unsigned int)fp8;
- (id)connection;
- (BOOL)_synchronizeUidRange:(CDAnonymousStruct1)fp8 newMessages:(id)fp16 usingConnection:(id)fp20;
- (void)_synchronizeWithServerUsingConnection:(id)fp8;
- (void)connection:(id)fp8 didReceiveResponse:(id)fp12 forCommand:(CDAnonymousStruct5 *)fp16;
- (void)startSynchronization;
- (id)_uidsForMessages:(id)fp8;
- (BOOL)connection:(id)fp8 shouldHandleUntaggedResponse:(id)fp12 forCommand:(CDAnonymousStruct5 *)fp16;
- (void)connectionDidDisconnect:(id)fp8;
- (int)_numberOfNewMessagesWaitingOnConnection:(id)fp8;
- (void)_processUnsolicitedResponsesUsingConnection:(id)fp8;
- (void)_retrieveNewMessages;
- (id)routeMessages:(id)fp8;
- (void)_retrieveNewMessagesInUIDRange:(CDAnonymousStruct1)fp8 intoArray:(id)fp16 statusFormat:(id)fp20 usingConnection:(id)fp24;
- (BOOL)allowsIndexing;
- (void)_cacheMessageBodiesAsynchronously:(id)fp8;
- (void)_cacheMessageBodiesAndUpdateIndex:(id)fp8;
- (void)_cacheMessageBodiesAndUpdateIndex:(id)fp8 cacheDirectoryContents:(id)fp12;
- (id)_preferredOrderForFetchingMessageBodies:(id)fp8;
- (void)_cacheMessageBodiesToDisk:(id)fp8 cacheDirectoryContents:(id)fp12;
- (void)_cacheAttachmentPartsForMessages:(id)fp8 cacheDirectoryContents:(id)fp12;
- (void)_updateCacheDirectoryAndIndexDoTheseFirst:(id)fp8;
- (BOOL)hasValidCacheFileForMessage:(id)fp8;
- (BOOL)hasValidCacheFileForUid:(int)fp8;
- (void)setUid:(unsigned int)fp8 forMessageWithTemporaryUid:(unsigned int)fp12;
- (void)removeCachedFiles:(id)fp8;
- (void)_synchronizationCompleted;
- (void)waitForSynchronizationToComplete;

@end

@interface IMAPMessage : Message <NSCoding>
{
    unsigned int _size;
    struct {
        unsigned int isRich:1;
        unsigned int isHTML:1;
        unsigned int hasTemporaryUid:1;
        unsigned int partsHaveBeenCached:1;
        unsigned int isPartial:1;
        unsigned int hasCustomEncoding:1;
        unsigned int reserved:26;
    } _imapFlags;
    unsigned int _uid;
}

+ (void)initialize;
- (id)initWithFlags:(unsigned long)fp8 size:(unsigned int)fp12 uid:(unsigned long)fp16;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (unsigned int)messageSize;
- (id)messageID;
- (int)compareByNumberWithMessage:(id)fp8;
- (unsigned long)uid;
- (void)setUid:(unsigned long)fp8;
- (BOOL)isPartial;
- (void)setIsPartial:(BOOL)fp8;
- (BOOL)isMessageContentsLocallyAvailable;
- (BOOL)partsHaveBeenCached;
- (void)setPartsHaveBeenCached:(BOOL)fp8;
- (void)setPreferredEncoding:(unsigned long)fp8;
- (BOOL)hasTemporaryUid;
- (void)setHasTemporaryUid:(BOOL)fp8;

@end

@interface NSString (IMAPNameEncoding)
- (id)encodedIMAPMailboxName;
- (id)decodedIMAPMailboxName;
@end

@interface IMAPOfflineCopyOnStupidServerOperation : IMAPOperation
{
    struct __CFArray *messageIds;
    struct __CFArray *internalDates;
}

- (void)serializeIntoData:(id)fp8;
- (unsigned char)_magic;
- (void)_deserializeOpSpecificValuesFromData:(id)fp8 cursor:(unsigned int *)fp12;
- (void)dealloc;
- (BOOL)getMessageId:(id *)fp8 andInternalDate:(id *)fp12 forDestinationUid:(unsigned int)fp16;
- (void)setMessageId:(id)fp8 andInternalDate:(id)fp12 forMessageWithSourceUid:(unsigned int)fp16;
- (void)expungeTemporaryUid:(unsigned int)fp8;
- (unsigned int)approximateSize;

@end

@interface IMAPOperation : NSObject
{
    unsigned int _type:8;
    unsigned int _temporaryUids:1;
    NSString *_mailboxName;
    union {
        struct {
            NSArray *trueFlags;
            NSArray *falseFlags;
            struct __CFArray *uids;
        } store;
        struct {
            unsigned int uid;
            NSArray *flags;
            int internalDate;
            unsigned int size;
        } append;
        struct {
            struct __CFArray *srcUids;
            struct __CFArray *dstUids;
            NSString *destinationMailbox;
        } copy;
    } _opSpecific;
}

+ (id)deserializeFromData:(id)fp8 cursor:(unsigned int *)fp12;
- (unsigned char)_magic;
- (void)_deserializeOpSpecificValuesFromData:(id)fp8 cursor:(unsigned int *)fp12;
- (void)serializeIntoData:(id)fp8;
- (id)initWithMailboxToCreate:(id)fp8;
- (id)initWithMailboxToDelete:(id)fp8;
- (id)initWithFlagsToSet:(id)fp8 flagsToClear:(id)fp12 forUids:(id)fp16 inMailbox:(id)fp20;
- (id)initWithUidsToCopy:(id)fp8 fromMailbox:(id)fp12 toMailbox:(id)fp16 firstNewUid:(unsigned int)fp20;
- (id)initWithAppendedUid:(unsigned int)fp8 approximateSize:(unsigned int)fp12 flags:(id)fp16 internalDate:(id)fp20 mailbox:(id)fp24;
- (void)dealloc;
- (BOOL)isSourceOfTemporaryUid:(unsigned int)fp8;
- (BOOL)actsOnTemporaryUid:(unsigned int)fp8;
- (void)expungeTemporaryUid:(unsigned int)fp8;
- (unsigned int)firstTemporaryUid;
- (unsigned int)lastTemporaryUid;
- (int)operationType;
- (id)mailboxName;
- (unsigned int)approximateSize;
- (BOOL)usesRealUids;
- (void)setUsesRealUids:(BOOL)fp8;
- (id)flagsToSet;
- (id)flagsToClear;
- (id)uids;
- (id)flags;
- (id)internalDate;
- (unsigned int)uid;
- (id)sourceUids;
- (id)destinationUids;
- (id)destinationMailbox;
- (unsigned int)sourceUidForTemporaryUid:(unsigned int)fp8;
- (BOOL)getMessageId:(id *)fp8 andInternalDate:(id *)fp12 forDestinationUid:(unsigned int)fp16;
- (void)setMessageId:(id)fp8 andInternalDate:(id)fp12 forMessageWithSourceUid:(unsigned int)fp16;
- (id)description;

@end

@interface IMAPOperationCache : NSObject
{
    IMAPAccount *_account;
    NSFileHandle *_handle;
    NSMutableArray *_ops;
    unsigned int _lastUid;
    unsigned int _lastSave;
    unsigned int _lastUidValidity;
}

- (id)initWithIMAPAccount:(id)fp8;
- (void)dealloc;
- (id)account;
- (void)createMailbox:(id)fp8;
- (void)deleteMailbox:(id)fp8;
- (void)setFlags:(id)fp8 andClearFlags:(id)fp12 forMessages:(id)fp16;
- (void)setFlags:(id)fp8 andClearFlags:(id)fp12 forUids:(id)fp16 forMailbox:(id)fp20;
- (unsigned int)firstUidForCopyingMessages:(id)fp8 toMailbox:(id)fp12;
- (unsigned int)uidForAppendingMessageData:(id)fp8 withFlags:(id)fp12 andInternalDate:(id)fp16 toMailbox:(id)fp20;
- (void)expungeTemporaryUid:(unsigned int)fp8;
- (void)saveChanges;
- (unsigned int)numberOfPendingChanges;
- (id)dataForTemporaryUid:(unsigned int)fp8;
- (BOOL)hasDataForTemporaryUid:(unsigned int)fp8;
- (BOOL)hasOperationsForMailbox:(id)fp8;
- (BOOL)connection:(id)fp8 shouldHandleUntaggedResponse:(id)fp12 forCommand:(CDAnonymousStruct5 *)fp16;
- (void)_performCreateOperation:(id)fp8 withContext:(CDAnonymousStruct7 *)fp12;
- (void)_performDeleteOperation:(id)fp8 withContext:(CDAnonymousStruct7 *)fp12;
- (void)_performStoreOperation:(id)fp8 withContext:(CDAnonymousStruct7 *)fp12;
- (void)_performAppendOperation:(id)fp8 withContext:(CDAnonymousStruct7 *)fp12;
- (void)_performCopyOperation:(id)fp8 withContext:(CDAnonymousStruct7 *)fp12;
- (void)performDeferredOperationsWithConnection:(id)fp8;
- (id)deferredOperations;

@end

@interface IMAPResponse : NSObject
{
    unsigned int _responseType:8;
    NSString *_tag;
    union _IMAPResponseData _data;
}

- (int)responseType;
- (void)setResponseType:(int)fp8;
- (BOOL)isUntagged;
- (BOOL)isAlertResponse;
- (id)tag;
- (void)setTag:(id)fp8;
- (void)dealloc;
- (int)responseCode;
- (id)responseInfo;
- (id)userData;
- (id)userString;
- (void)setUserData:(id)fp8 responseCode:(int)fp12 responseInfo:(id)fp16;
- (id)capabilities;
- (void)setCapabilities:(id)fp8;
- (unsigned long)number;
- (void)setNumber:(unsigned long)fp8;
- (id)flags;
- (void)setFlags:(id)fp8;
- (id)mailboxName;
- (id)statusEntries;
- (void)setMailboxName:(id)fp8 statusEntries:(id)fp12;
- (id)searchResults;
- (void)setSearchResults:(id)fp8;
- (unsigned long)mailboxAttributes;
- (id)separator;
- (void)setMailboxAttributes:(unsigned long)fp8 separator:(id)fp12 mailboxName:(id)fp16;
- (id)fetchResults;
- (void)setFetchResults:(id)fp8;
- (id)responseName;
- (id)parameters;
- (void)setResponseName:(id)fp8 parameters:(id)fp12;
- (id)description;
- (id)initWithConnection:(id)fp8;

@end

@interface POP3Connection : Connection
{
    NSMutableData *_sendBuffer;
    struct __CFDictionary *_listResults;
    int _state;
    unsigned int numberOfMessagesAvailable;
    NSData *_apopTimeStamp;
    id _delegate;
    BOOL _delegateRespondsToReceivedNumberOfBytes;
    BOOL _delegateRespondsToWillRetrieveMessageNumber;
    BOOL _delegateRespondsToDidRetrieveMessageNumber;
    BOOL _hidingPassword;
}

- (id)init;
- (void)dealloc;
- (id)capabilities;
- (id)authenticationMechanisms;
- (BOOL)_doBasicConnectionWithAccount:(id)fp8;
- (BOOL)connectUsingAccount:(id)fp8;
- (BOOL)authenticateUsingAccount:(id)fp8;
- (BOOL)authenticateUsingAccount:(id)fp8 authenticator:(id)fp12;
- (int)quit;
- (BOOL)supportsAPOP;
- (void)disableAPOP;
- (int)doStat;
- (int)list:(int)fp8;
- (int)_getListResults;
- (int)getMessageNumbers:(struct __CFArray **)fp8 andMessageIdsByNumber:(struct __CFDictionary **)fp12;
- (id)idForMessageNumber:(int)fp8;
- (id)_retrieveMessage:(unsigned long)fp8 ofSize:(unsigned int)fp12 informDelegate:(BOOL)fp16;
- (int)retr:(unsigned long)fp8;
- (int)dele:(unsigned long)fp8;
- (id)retainedMessageHeaderForMessageNumber:(unsigned long)fp8;
- (void)getTopOfMessageNumber:(unsigned long)fp8 intoMutableData:(id)fp12;
- (unsigned long)sizeOfMessageNumber:(unsigned long)fp8;
- (BOOL)messagesAvailable;
- (int)numberOfMessagesAvailable;
- (int)fetchMessages:(struct __CFArray *)fp8;
- (int)deleteMessagesOnServer:(struct __CFArray *)fp8;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (BOOL)startTLSForAccount:(id)fp8;

@end

@interface POP3Connection (PrivateCommands)
- (int)_readMultilineResponseWithMaxSize:(int)fp8 intoMutableData:(id)fp12 informDelegate:(BOOL)fp16;
- (int)_sendCommand:(const char *)fp8 withArguments:(id)fp12;
- (id)copyReplyLineData;
- (int)_getStatusFromReply;
- (int)_apopWithUsername:(id)fp8 password:(id)fp12;
- (int)_user:(id)fp8;
- (int)_pass:(id)fp8;
@end

@interface POP3FetchStore : MessageStore
{
    BOOL _currentlyFetchingMessage;
    BOOL _lastConnectionFailed;
    unsigned int _numMessagesToFetch;
    unsigned int _numMessagesFetchedSoFar;
    unsigned int _sizeOfMessageBeingFetched;
    unsigned int _numBytesReceivedSoFar;
    unsigned int _totalBytesToFetch;
    unsigned int _totalBytesReceivedSoFar;
    struct __CFDictionary *_serverMessageIdsByNumber;
    struct __CFSet *_skippedMessageIds;
    struct __CFArray *_messageNumbersToDelete;
    struct __CFDictionary *_seenMessages;
    BOOL _seenMessagesChanged;
    int _activityMonitorKey;
    double _lastBatchStartTime;
    NSLock *_activityLock;
    MessageRouter *_router;
    ActivityMonitor *_fetchingActivityMonitor;
    double _seenMessagesFileModDate;
}

- (id)initWithPOPAccount:(id)fp8;
- (void)dealloc;
- (id)mailboxUid;
- (BOOL)isOpened;
- (id)displayName;
- (void)fetchSynchronously;
- (void)deleteSeenMessagesNow;
- (double)seenMessagesFileModDate;
- (void)loadSeenMessages;
- (void)saveSeenMessages;
- (void)_removeLeftoversFromSeenMessagesUsingIDs:(struct __CFDictionary *)fp8;
- (void)_backgroundFetchFailed:(id)fp8;
- (id)_fetchHeaderDataForMessage:(id)fp8;
- (id)_fetchBodyDataForMessage:(id)fp8 andHeaderDataIfReadilyAvailable:(id *)fp12;
- (id)messageForMessageID:(id)fp8;
- (void)connection:(id)fp8 receivedNumberOfBytes:(int)fp12;
- (int)connection:(id)fp8 willRetrieveMessageNumber:(unsigned int)fp12 header:(id)fp16 size:(unsigned int)fp20;
- (id)_defaultRouterDestination;
- (void)writeUpdatedMessageDataToDisk;
- (void)messagesWereRouted:(id)fp8;
- (void)cancel;
- (void)waitForRoutingToFinish;
- (void)connection:(id)fp8 didRetrieveData:(id)fp12 forMessageNumber:(unsigned int)fp16;
- (void)messageFlagsDidChange:(id)fp8 flags:(id)fp12;

@end

@interface POPMessage : Message
{
    int _messageNumber;
    NSString *_messageID;
    NSData *_messageData;
}

- (id)initWithPOP3FetchStore:(id)fp8;
- (void)dealloc;
- (int)messageNumber;
- (void)setMessageNumber:(int)fp8;
- (id)messageData;
- (void)setMessageData:(id)fp8;
- (unsigned int)messageSize;
- (id)messageDataIncludingFromSpace:(BOOL)fp8;
- (id)messageID;
- (void)setMessageID:(id)fp8;

@end

@interface BerkeleyMbox : MessageStore
{
    NSData *_mboxData;
    NSString *_path;
}

+ (BOOL)storeExistsForPath:(id)fp8;
+ (BOOL)storeAtPathIsWritable:(id)fp8;
+ (BOOL)createEmptyStoreForPath:(id)fp8;
- (id)initWithMailboxUid:(id)fp8 readOnly:(BOOL)fp12;
- (id)initWithPath:(id)fp8 create:(BOOL)fp12 readOnly:(BOOL)fp16 account:(id)fp20;
- (void)dealloc;
- (void)writeUpdatedMessageDataToDisk;
- (id)path;
- (id)_lockFilePath;
- (id)_mboxData;
- (void)_resetAllMessages;
- (id)_fetchHeaderDataForMessage:(id)fp8;
- (id)_fetchBodyDataForMessage:(id)fp8 andHeaderDataIfReadilyAvailable:(id *)fp12;
- (id)_constructDeletedList;
- (void)doCompact;
- (BOOL)allowsIndexing;
- (id)_defaultRouterDestination;
- (void)fetchSynchronously;

@end

@interface NeXTMbox : MessageStore
{
    NSData *_mboxData;
    TableOfContents *_toc;
    float _compactThreshold;
    unsigned int _mboxIsOnSMB:1;
    unsigned int _haveUpdatedMetadata:1;
}

+ (BOOL)storeExistsForPath:(id)fp8;
+ (BOOL)createEmptyStoreForPath:(id)fp8;
+ (BOOL)storeAtPathIsWritable:(id)fp8;
+ (BOOL)cheapStoreAtPathIsEmpty:(id)fp8;
- (id)initWithMailboxUid:(id)fp8 readOnly:(BOOL)fp12;
- (void)dealloc;
- (void)_releaseMboxData;
- (void)openSynchronouslyUpdatingIndex:(BOOL)fp8 andOtherMetadata:(BOOL)fp12;
- (void)updateMetadata;
- (id)_lockFilePath;
- (void)_invalidate;
- (void)writeUpdatedMessageDataToDisk;
- (void)_rebuildTableOfContentsSynchronously;
- (void)_flushAllMessageData;
- (void)tableOfContents:(id)fp8 loadedMessages:(id)fp12;
- (void)_resetAllMessages;
- (id)messageForMessageID:(id)fp8;
- (id)_fetchHeaderDataForMessage:(id)fp8;
- (id)_fetchBodyDataForMessage:(id)fp8 andHeaderDataIfReadilyAvailable:(id *)fp12;
- (id)setFlagsFromDictionary:(id)fp8 forMessages:(id)fp12;
- (float)compactThreshold;
- (void)setCompactThreshold:(float)fp8;
- (BOOL)canCompact;
- (void)doCompact;
- (void)_deleteAttachments:(id)fp8;
- (id)_processNeXTMailAttachmentHeaders:(id)fp8;
- (id)_appendMessage:(id)fp8 toFile:(id)fp12;
- (void)_addIDsForAppendedMessages:(id)fp8 toArray:(id)fp12;
- (int)_appendMessages:(id)fp8 successes:(id *)fp12 failures:(id *)fp16 mboxName:(id)fp20 tableOfContents:(id)fp24;
- (BOOL)allowsAppend;
- (int)appendMessages:(id)fp8 unsuccessfulOnes:(id)fp12 newMessageIDs:(id)fp16;
- (int)undoAppendOfMessageIDs:(id)fp8;
- (void)_incorporateMailFromIncoming;
- (int)_writeMessagesToIncomingMail:(id)fp8 unsuccessfulOnes:(id)fp12 newMessageIDs:(id)fp16;
- (BOOL)indexIsValid;
- (void)suggestSortOrder:(id)fp8 ascending:(BOOL)fp12;
- (id)sortOrder;
- (BOOL)isSortedAscending;

@end

@interface TableOfContents : NSObject
{
    BOOL _isValid;
    NSMutableArray *_messages;
    NSString *_path;
    NSData *_data;
    unsigned int _pos;
    CDAnonymousStruct4 _header;
    NSMutableDictionary *_messageIDMap;
    BOOL _isDirty;
}

- (BOOL)_checkHeader;
- (BOOL)loadCacheFromFileUsingUniqueStrings:(id)fp8;
- (BOOL)loadCacheFromFileUsingUniqueStrings:(id)fp8 messageStore:(id)fp12;
- (void)appendHeader:(CDAnonymousStruct4)fp8 toData:(id)fp40;
- (id)appendCachedDataToData:(id)fp8;
- (void)setTimeStamp:(long)fp8;
- (id)init;
- (id)initWithPath:(id)fp8;
- (void)dealloc;
- (BOOL)isDirty;
- (BOOL)isValid;
- (id)storePath;
- (void)rebuildCacheFromMessages:(id)fp8;
- (unsigned int)count;
- (id)messages;
- (void)removeMessage:(id)fp8;
- (void)_addMessageToMap:(id)fp8;
- (void)addMessage:(id)fp8;
- (void)addMessages:(id)fp8;
- (id)description;
- (BOOL)flushToFile;
- (id)messageForMessageID:(id)fp8;
- (id)sortOrder;
- (void)setSortOrder:(id)fp8 ascending:(BOOL)fp12;
- (BOOL)isSortedAscending;
- (BOOL)isSortedByDateReceived;
- (void)sort;

@end

@interface TOCMessage : Message
{
    struct _NSRange _mboxRange;
    NSString *_attachments;
    NSString *_messageID;
}

+ (id)messageIDForSender:(id)fp8 subject:(id)fp12 dateAsTimeInterval:(double)fp16;
- (id)initWithMessage:(id)fp8;
- (void)dealloc;
- (unsigned int)loadCachedInfoFromBytes:(const char *)fp8 length:(unsigned int)fp12 isDirty:(char *)fp16 usingUniqueStrings:(id)fp20;
- (id)cachedData;
- (struct _NSRange)mboxRange;
- (void)setMboxRange:(struct _NSRange)fp8;
- (id)attachment;
- (id)messageID;
- (int)compareByNumberWithMessage:(id)fp8;
- (unsigned int)messageSize;
- (id)description;

@end

@interface NSDate (toc_extension)
- (int)tocSillyDateInt;
@end

@interface MessageStore (Indexing)
- (BOOL)allowsIndexing;
- (BOOL)isIndexed;
- (BOOL)indexIsValid;
- (void)updateIndex;
- (id)_index;
- (void)openIndexWithWriteAccess:(BOOL)fp8;
- (void)checkForValidIndex;
- (void)closeIndex;
- (void)_fullUpdateIndexAsynchronously;
- (void)_setNeedsToUpdateIndex;
- (void)_addMessagesToIndex:(id)fp8;
- (void)_removeMessagesFromIndex:(id)fp8;
- (void)stopUpdatingIndex;
- (void)handleUpdatingFinished;
- (void)_prepareIndexForUpdate;
- (void)_updateIndex;
- (void)_fullUpdateOfIndex;
- (void)_writeUpdatedIndexToDisk;
- (id)indexedSearchFor:(id)fp8 ranks:(id *)fp12 errorString:(id *)fp16;
- (id)cheapIndexedSearchFor:(id)fp8 ranks:(id *)fp12 errorString:(id *)fp16;
- (void)invalidateIndex;
- (void)_invalidateIndex;
- (BOOL)_isUpdatingIndex;
@end

@interface MboxIndex : NSObject
{
    MessageStore *_store;
    struct __SKIndex *_skIndex;
    struct __SKDocument *_bodyParent;
    struct __SKDocument *_headerParent;
    struct {
        unsigned int isValid:1;
        unsigned int hasWriteAccess:1;
        unsigned int hasUnsavedChanges:1;
        unsigned int reserved:29;
    } _flags;
}

+ (BOOL)indexForMailboxIsValid:(id)fp8;
+ (void)setIndexForMailbox:(id)fp8 isValid:(BOOL)fp12;
+ (void)deleteIndexFilesForMailbox:(id)fp8;
+ (id)flagFilePathForMailbox:(id)fp8;
+ (id)indexFilePathForMailbox:(id)fp8;
+ (void)removeLeftoverIndexFilesForMailbox:(id)fp8;
- (id)_openVersionOfIndexPath:(id)fp8;
- (id)_validFlagFilePath;
- (void)_updateValidFlagFile;
- (BOOL)_validFlagFileState;
- (id)initWithStore:(id)fp8 writeAccess:(BOOL)fp12;
- (BOOL)isValid;
- (void)setIsValid:(BOOL)fp8;
- (BOOL)hasWriteAccess;
- (void)dealloc;
- (BOOL)update;
- (BOOL)_shouldCompact;
- (BOOL)flushToDisk;
- (BOOL)_indexString:(id)fp8 underParent:(struct __SKDocument *)fp12 forMessageId:(id)fp16;
- (void)addMessage:(id)fp8;
- (void)_removeMessageByID:(id)fp8;
- (void)removeMessage:(id)fp8;
- (unsigned int)count;
- (id)_sanitizeBooleanSearchString:(id)fp8;
- (id)messagesMatchingQuery:(id)fp8 ranks:(id *)fp12 errorString:(id *)fp16;
- (id)messageIDsMatchingQuery:(id)fp8 ranks:(id *)fp12 errorString:(id *)fp16;

@end

@interface Message : NSObject
{
    MessageStore *_store;
    unsigned int _messageFlags;
    struct {
        unsigned int colorHasBeenEvaluated:1;
        unsigned int colorWasSetManually:1;
        unsigned int redColor:8;
        unsigned int greenColor:8;
        unsigned int blueColor:8;
        unsigned int loadingBody:1;
        unsigned int unused:5;
    } _flags;
    unsigned int _preferredEncoding;
    NSString *_senderAddressComment;
    unsigned int _dateSentInterval;
    unsigned int _dateReceivedInterval;
    NSString *_subject;
    unsigned char _subjectPrefixLength;
    NSString *_to;
    NSString *_sender;
    NSData *_messageIDHeaderDigest;
    NSData *_inReplyToHeaderDigest;
}

+ (void)initialize;
+ (id)verboseVersion;
+ (id)frameworkVersion;
+ (void)setUserAgent:(id)fp8;
+ (id)userAgent;
+ (id)messageWithRFC822Data:(id)fp8;
+ (id)_filenameFromSubject:(id)fp8 inDirectory:(id)fp12 ofType:(id)fp16;
+ (id)makeUniqueAttachmentNamed:(id)fp8 inDirectory:(id)fp12;
+ (id)makeUniqueAttachmentNamed:(id)fp8 withExtension:(id)fp12 inDirectory:(id)fp16;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)messageStore;
- (void)setMessageStore:(id)fp8;
- (id)headers;
- (unsigned long)messageFlags;
- (void)setMessageFlags:(unsigned long)fp8;
- (id)messageBody;
- (id)messageBodyIfAvailable;
- (id)messageDataIncludingFromSpace:(BOOL)fp8;
- (BOOL)colorHasBeenEvaluated;
- (id)color;
- (void)setColor:(id)fp8;
- (void)setColorHasBeenEvaluated:(BOOL)fp8;
- (void)dealloc;
- (unsigned int)messageSize;
- (id)attributedString;
- (id)preferredEmailAddressToReplyWith;
- (id)messageID;
- (id)messageIDHeaderDigest;
- (void)unlockedSetMessageIDHeaderDigest:(id)fp8;
- (void)setMessageIDHeaderDigest:(id)fp8;
- (id)_messageIDHeaderDigestIvar;
- (BOOL)needsMessageIDHeader;
- (id)inReplyToHeaderDigest;
- (void)unlockedSetInReplyToHeaderDigest:(id)fp8;
- (void)setInReplyToHeaderDigest:(id)fp8;
- (id)_inReplyToHeaderDigestIvar;
- (int)compareByNumberWithMessage:(id)fp8;
- (BOOL)isMessageContentsLocallyAvailable;
- (id)headersForIndexingIncludingFullNames:(BOOL)fp8;
- (id)headersForIndexing;
- (id)headersForJunk;
- (id)stringForIndexingGettingHeadersIfAvailable:(id *)fp8 forJunk:(BOOL)fp12;
- (id)stringForIndexingGettingHeadersIfAvailable:(id *)fp8;
- (id)stringForIndexing;
- (id)stringForJunk;
- (unsigned int)numberOfAttachments;
- (int)junkMailLevel;
- (unsigned long)preferredEncoding;
- (void)setPreferredEncoding:(unsigned long)fp8;
- (id)rawSourceFromHeaders:(id)fp8 body:(id)fp12;
- (BOOL)_doesDateAppearToBeSane:(id)fp8;
- (id)_dateFromReceivedHeadersInHeaders:(id)fp8;
- (id)_dateFromDateHeaderInHeaders:(id)fp8;
- (void)_setDateReceivedFromHeaders:(id)fp8;
- (void)_setDateSentFromHeaders:(id)fp8;
- (void)loadCachedHeaderValuesFromHeaders:(id)fp8;
- (id)subjectAndPrefixLength:(unsigned int *)fp8;
- (id)subjectNotIncludingReAndFwdPrefix;
- (id)subject;
- (void)setSubject:(id)fp8;
- (id)dateReceived;
- (id)dateSent;
- (void)setDateReceivedTimeIntervalSince1970:(double)fp8;
- (double)dateReceivedAsTimeIntervalSince1970;
- (BOOL)needsDateReceived;
- (double)dateSentAsTimeIntervalSince1970;
- (void)setDateSentTimeIntervalSince1970:(double)fp8;
- (id)sender;
- (void)setSender:(id)fp8;
- (id)senderAddressComment;
- (id)to;
- (void)setTo:(id)fp8;
- (void)setMessageInfo:(id)fp8 to:(id)fp12 sender:(id)fp16 dateReceivedTimeIntervalSince1970:(double)fp20 dateSentTimeIntervalSince1970:(double)fp28 messageIDHeaderDigest:(id)fp36 inReplyToHeaderDigest:(id)fp40;
- (void)setMessageInfoFromMessage:(id)fp8;

@end

@interface MessageBody : NSObject
{
    Message *_message;
    NSString *_attachPath;
}

+ (id)defaultAttachmentDirectory;
+ (void)setDefaultAttachmentDirectory:(id)fp8;
- (id)rawData;
- (id)attributedString;
- (BOOL)isHTML;
- (BOOL)isRich;
- (void)dealloc;
- (id)stringForIndexing;
- (void)setMessage:(id)fp8;
- (id)message;
- (void)setAttachmentDirectory:(id)fp8;
- (id)attachmentDirectory;
- (void)calculateNumberOfAttachmentsIfNeeded;
- (id)attachments;
- (id)textHtmlPart;

@end

@interface MessageHeaders : NSObject <NSCopying>
{
    NSData *_data;
    unsigned int _preferredEncoding;
}

+ (id)localizedHeaders;
+ (id)localizedHeadersFromEnglishHeaders:(id)fp8;
+ (id)englishHeadersFromLocalizedHeaders:(id)fp8;
- (id)initWithHeaderData:(id)fp8 encoding:(unsigned long)fp12;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (id)mutableCopy;
- (id)headerData;
- (unsigned long)preferredEncoding;
- (void)setPreferredEncoding:(unsigned long)fp8;
- (BOOL)_isStructuredHeaderKey:(id)fp8;
- (id)attributedStringShowingHeaderDetailLevel:(int)fp8;
- (id)headersDictionaryWithHeaderDetailLevel:(int)fp8;
- (id)allHeaderKeys;
- (void)_setCapitalizedKey:(id)fp8 forKey:(id)fp12;
- (id)_capitalizedKeyForKey:(id)fp8;
- (id)_headerValueForKey:(id)fp8;
- (BOOL)hasHeaderForKey:(id)fp8;
- (id)headersForKey:(id)fp8;
- (id)firstHeaderForKey:(id)fp8;
- (id)_decodeHeaderKeysFromData:(id)fp8;
- (id)isoLatin1CharsetHint;
- (id)mailVersion;
- (void)_appendAddressList:(id)fp8 toData:(id)fp12;
- (id)encodedHeaders;
- (id)encodedHeadersIncludingFromSpace:(BOOL)fp8;
- (void)appendHeaderData:(id)fp8 andRecipients:(id)fp12;
- (id)_encodedHeadersIncludingFromSpace:(BOOL)fp8;

@end

@interface MessageFlags : NSObject <NSCoding>
{
    unsigned int realFlags;
}

- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSCoder (MFMessageFlags)
- (unsigned long)decodeMessageFlags;
@end

@interface OutgoingMessage : Message
{
    MessageBody *messageBody;
    MutableMessageHeaders *messageHeaders;
}

- (void)dealloc;
- (id)messageStore;
- (id)messageBody;
- (id)messageBodyIfAvailable;
- (id)messageDataIncludingFromSpace:(BOOL)fp8;
- (id)mutableHeaders;
- (void)setMutableHeaders:(id)fp8;
- (id)headers;

@end

@interface _OutgoingMessageBody : MessageBody
{
    NSMutableData *rawData;
}

- (void)dealloc;
- (id)mutableData;
- (id)rawData;

@end

@interface MessageWriter : NSObject
{
    unsigned int _createsMimeAlternatives:1;
    unsigned int _createsRichText:1;
    unsigned int _createsPlainTextOnly:1;
    unsigned int _allows8BitMimeParts:1;
    unsigned int _allowsBinaryMimeParts:1;
    unsigned int _allowsAppleDoubleAttachments:1;
    unsigned int _signsOutput:1;
    unsigned int _encryptsOutput:1;
    unsigned int _preferredEncoding;
}

- (id)init;
- (id)createDataForAttributedString:(id)fp8;
- (void)appendDataForMimePart:(id)fp8 toData:(id)fp12 withPartData:(id)fp16;
- (id)createBounceMessageForMessage:(id)fp8;
- (id)createMessageByRemovingAttachmentsFromMessage:(id)fp8;
- (id)createMessageWithAttributedString:(id)fp8 headers:(id)fp12;
- (id)createMessageWithHtmlString:(id)fp8 attachments:(id)fp12 headers:(id)fp16;
- (BOOL)createsMimeAlternatives;
- (void)setCreatesMimeAlternatives:(BOOL)fp8;
- (BOOL)createsPlainTextOnly;
- (void)setCreatesPlainTextOnly:(BOOL)fp8;
- (BOOL)createsRichText;
- (void)setCreatesRichText:(BOOL)fp8;
- (BOOL)allows8BitMimeParts;
- (void)setAllows8BitMimeParts:(BOOL)fp8;
- (BOOL)allowsBinaryMimeParts;
- (void)setAllowsBinaryMimeParts:(BOOL)fp8;
- (BOOL)allowsAppleDoubleAttachments;
- (void)setAllowsAppleDoubleAttachments:(BOOL)fp8;
- (unsigned long)preferredEncoding;
- (void)setPreferredEncoding:(unsigned long)fp8;
- (BOOL)signsOutput;
- (void)setSignsOutput:(BOOL)fp8;
- (BOOL)encryptsOutput;
- (void)setEncryptsOutput:(BOOL)fp8;

@end

@interface MutableMessageHeaders : MessageHeaders
{
    NSMutableDictionary *_headersAdded;
    NSMutableArray *_headersRemoved;
}

- (id)mutableCopy;
- (void)dealloc;
- (id)allHeaderKeys;
- (BOOL)hasHeaderForKey:(id)fp8;
- (id)_headerValueForKey:(id)fp8;
- (void)removeHeaderForKey:(id)fp8;
- (void)setHeader:(id)fp8 forKey:(id)fp12;
- (void)appendFromSpaceIfMissing;
- (void)_appendHeaderKey:(id)fp8 value:(id)fp12 toData:(id)fp16;
- (void)_appendAddedHeaderKey:(id)fp8 value:(id)fp12 toData:(id)fp16;
- (id)_encodedHeadersIncludingFromSpace:(BOOL)fp8;
- (void)setAddressList:(id)fp8 forKey:(id)fp12;

@end

@interface NeXTMailBody : MessageBody
{
}

+ (id)tarCommand;
+ (void)setTarCommand:(id)fp8;
+ (id)compressCommand;
+ (void)setCompressCommand:(id)fp8;
+ (id)shellCommand;
+ (void)setShellCommand:(id)fp8;
- (BOOL)deztar:(id)fp8 into:(id)fp12;
- (id)rawData;
- (id)decodeBodyIntoDirectory:(id)fp8;
- (id)attributedString;
- (BOOL)isRich;

@end

@interface NSString (shell_escape)
- (id)_fixStringForShell;
@end

@interface MimeBody : MessageBody
{
    MimePart *_topLevelPart;
    unsigned int _preferredTextEncoding;
    unsigned int _shouldDeleteAttachmentOnDealloc:1;
    unsigned int _preferredAlternative:15;
    unsigned int _numAlternatives:16;
}

+ (void)initialize;
+ (id)versionString;
+ (id)createMimeBoundary;
- (id)init;
- (void)dealloc;
- (BOOL)makeUniqueTemporaryAttachmentInDirectory:(id)fp8;
- (id)topLevelPart;
- (void)setTopLevelPart:(id)fp8;
- (unsigned long)preferredTextEncoding;
- (void)setPreferredTextEncoding:(unsigned long)fp8;
- (id)mimeType;
- (id)mimeSubtype;
- (void)calculateNumberOfAttachmentsIfNeeded;
- (id)attachments;
- (BOOL)isHTML;
- (BOOL)isRich;
- (id)attachmentDirectory;
- (id)attributedString;
- (id)stringForIndexing;
- (int)numberOfAlternatives;
- (void)setPreferredAlternative:(int)fp8;
- (int)preferredAlternative;
- (id)preferredBodyPart;
- (id)textHtmlPart;

@end

@interface MimePart : NSObject
{
    NSString *_type;
    NSString *_subtype;
    NSMutableDictionary *_bodyParameters;
    NSString *_contentTransferEncoding;
    NSMutableDictionary *_otherIvars;
    struct _NSRange _range;
    id _parentOrBody;
    MimePart *_nextPart;
}

+ (void)initialize;
- (void)dealloc;
- (id)init;
- (id)type;
- (void)setType:(id)fp8;
- (id)subtype;
- (void)setSubtype:(id)fp8;
- (id)bodyParameterForKey:(id)fp8;
- (void)setBodyParameter:(id)fp8 forKey:(id)fp12;
- (id)bodyParameterKeys;
- (id)contentTransferEncoding;
- (void)setContentTransferEncoding:(id)fp8;
- (id)disposition;
- (void)setDisposition:(id)fp8;
- (id)dispositionParameterForKey:(id)fp8;
- (void)setDispositionParameter:(id)fp8 forKey:(id)fp12;
- (id)dispositionParameterKeys;
- (id)contentDescription;
- (void)setContentDescription:(id)fp8;
- (id)contentID;
- (void)setContentID:(id)fp8;
- (id)contentLocation;
- (void)setContentLocation:(id)fp8;
- (id)languages;
- (void)setLanguages:(id)fp8;
- (id)parentPart;
- (id)firstChildPart;
- (id)nextSiblingPart;
- (id)subparts;
- (id)subpartAtIndex:(int)fp8;
- (void)setSubparts:(id)fp8;
- (void)addSubpart:(id)fp8;
- (struct _NSRange)range;
- (void)setRange:(struct _NSRange)fp8;
- (id)bodyData;
- (id)mimeBody;
- (void)setMimeBody:(id)fp8;
- (id)description;
- (id)attachmentFilename;
- (BOOL)hasCachedDataInStore;
- (unsigned int)numberOfAttachments;
- (void)getNumberOfAttachments:(unsigned int *)fp8 isSigned:(char *)fp12 isEncrypted:(char *)fp16;
- (id)attachments;
- (unsigned long)textEncoding;
- (unsigned int)approximateRawSize;
- (BOOL)isReadableText;
- (BOOL)isAttachment;
- (BOOL)isRich;
- (BOOL)isHTML;
- (BOOL)usesKnownSignatureProtocol;
- (id)attributedString;
- (id)fileWrapper;
- (void)configureFileWrapper:(id)fp8;
- (id)stringForIndexing;
- (id)startPart;
- (int)numberOfAlternatives;
- (id)alternativeAtIndex:(int)fp8;
- (id)signedData;
- (id)textHtmlPart;
- (id)decryptedMessageBody;
- (void)_setDecryptedMessageBody:(id)fp8;

@end

@interface MimePart (DecodingSupport)
- (id)_fullMimeTypeEvenInsideAppleDouble;
- (id)contentsForTextSystem;
- (id)decodeTextPlain;
- (id)decodeText;
- (id)decodeTextRichtext;
- (id)decodeTextEnriched;
- (id)decodeTextHtml;
- (id)decodeMultipart;
- (id)decodeMultipartAlternative;
- (id)decodeMultipartFolder;
- (id)decodeApplicationOctet_stream;
- (id)decodeApplicationZip;
- (id)decodeMessageDelivery_status;
- (id)decodeMessageRfc822;
- (id)decodeMessagePartial;
- (id)decodeMessageExternal_body;
- (id)decodeApplicationMac_binhex40;
- (id)decodeApplicationApplefile;
- (id)decodeMultipartAppledouble;
@end

@interface MimePart (IMAPSupport)
- (BOOL)parseIMAPPropertyList:(id)fp8;
- (id)partNumber;
@end

@interface MimePart (MessageSupport)
- (BOOL)parseMimeBody;
@end

@interface NSMutableData (MimeDataEncoding)
- (void)appendQuotedPrintableDataForHeaderBytes:(const char *)fp8 length:(unsigned int)fp12;
@end

@interface NSData (MimeDataEncoding)
+ (unsigned int)quotedPrintableLengthOfHeaderBytes:(const char *)fp8 length:(unsigned int)fp12;
- (id)decodeQuotedPrintableForText:(BOOL)fp8;
- (id)encodeQuotedPrintableForText:(BOOL)fp8;
- (id)decodeBase64;
- (BOOL)isValidBase64Data;
- (id)encodeBase64WithoutLineBreaks;
- (id)encodeBase64;
- (id)decodeModifiedBase64;
- (id)encodeModifiedBase64;
- (id)encodeBase64HeaderData;
@end

@interface MimeEnrichedReader : NSObject
{
    CDAnonymousStruct6 _inputBuffer;
    int _currentIndex;
    int _inputLength;
    unsigned int _noFillLevel:30;
    unsigned int _eatOneNewline:1;
    unsigned int _insideComment:1;
    struct __CFArray *_commandStack;
    id _outputString;
    NSMutableString *_outputBuffer;
    float _indentWidth;
}

+ (id)punctuationSet;
+ (id)parenSet;
- (void)mismatchError:(id)fp8;
- (void)dealloc;
- (void)appendStringToBuffer:(id)fp8;
- (void)resetStateWithString:(id)fp8 outputString:(id)fp12;
- (void)nowWouldBeAGoodTimeToAppendToTheAttributedString;
- (void)handleNoParameterCommand:(const CDAnonymousStruct2 *)fp8;
- (void)setupFontStackEntry:(struct _CommandStackEntry *)fp8;
- (void)setupRulerStackEntry:(struct _CommandStackEntry *)fp8;
- (void)beginCommand:(id)fp8;
- (void)endCommand:(id)fp8;
- (void)parseParameterString:(id)fp8;
- (id)currentFont;
- (id)currentParagraphStyle;
- (int)readTokenInto:(id *)fp8;
- (void)convertRichTextString:(id)fp8 intoOutputString:(id)fp12;
- (void)convertEnrichedString:(id)fp8 intoOutputString:(id)fp12;

@end

@interface NSString (MimeEnrichedReader)
+ (id)stringFromMimeEnrichedString:(id)fp8;
@end

@interface NSAttributedString (MimeEnrichedReader)
+ (id)attributedStringFromMimeRichTextString:(id)fp8 attributes:(id)fp12;
+ (id)attributedStringFromMimeEnrichedString:(id)fp8 attributes:(id)fp12;
@end

@interface MimeEnrichedWriter : NSObject
{
    NSAttributedString *_attributedString;
    NSString *_string;
    CDAnonymousStruct6 _stringBuffer;
    NSFont *_defaultFont;
    NSFont *_defaultFixedPitchFont;
    float _defaultPointSize;
    struct _CommandStackEntry *_commandStack;
    struct _CommandStackEntry *_topOfStack;
    struct EnrichedState _currentState;
    unsigned int _currentLineStart;
    unsigned int _lastSpace;
}

+ (void)initialize;
- (void)setState:(struct EnrichedState *)fp8 fromAttributes:(id)fp12;
- (void)setState:(struct EnrichedState *)fp8 fromStackEntry:(struct _CommandStackEntry *)fp12;
- (void)dealloc;
- (id)convertAttributedString:(id)fp8;
- (void)updateOutput:(id)fp8 forAttributes:(id)fp12 range:(struct _NSRange)fp16;
- (void)appendTextFromRange:(struct _NSRange)fp8 toString:(id)fp16;

@end

@interface NSAttributedString (MimeEnrichedWriter)
- (id)enrichedString;
@end

@interface NSMutableData (RFC2231Support)
- (void)appendRFC2231CompliantValue:(id)fp8 forKey:(id)fp12;
@end

@interface NSMutableDictionary (RFC2231Support)
- (void)fixupRFC2231Values;
@end

@interface NSString (MimeHeaderEncoding)
- (id)encodedHeaderData;
- (id)decodeMimeHeaderValue;
- (id)decodeMimeHeaderValueWithCharsetHint:(id)fp8;
@end

@interface NSScanner (MimePart)
- (id)scanMimeTokenUsingSeparatorType:(unsigned int)fp8;
@end

@interface MimeTextAttachment : NSTextAttachment
{
    MimePart *_mimePart;
}

- (void)dealloc;
- (id)initWithMimePart:(id)fp8;
- (id)mimePart;
- (void)setMimePart:(id)fp8;
- (unsigned int)approximateSize;
- (BOOL)isPlaceholder;
- (BOOL)hasBeenDownloaded;
- (BOOL)shouldDownloadAttachmentOnDisplay;

@end

@interface NSTextAttachment (MimeSupport)
- (unsigned int)approximateSize;
- (id)mimePart;
- (BOOL)hasBeenDownloaded;
- (BOOL)isPlaceholder;
- (id)attachmentCellWithoutForcingItToBeCreated;
- (BOOL)shouldDownloadAttachmentOnDisplay;
@end

@interface NSAttributedString (FormatFlowedSupport)
- (void)getFormatFlowedString:(id *)fp8 insertedTrailingSpaces:(char *)fp12;
@end

@interface NSString (FormatFlowedSupport)
- (id)convertFromFlowedText:(unsigned int)fp8;
@end

@interface MessageHTMLConverter : NSObject
{
    WebView *_webView;
    NSPort *_replyPort;
    unsigned int _sequenceNumber:31;
    unsigned int _outputRich:1;
    id _result;
    int _numberOfCharacters;
    int _numberOfImages;
}

+ (id)sharedInstance;
- (void)handlePortMessage:(id)fp8;
- (void)_startLoadingStringFromHTMLData:(id)fp8 textEncodingName:(id)fp12;
- (id)init;
- (id)stringFromHTMLData:(id)fp8 textEncodingName:(id)fp12 numberOfImages:(int *)fp16 numberOfCharacters:(int *)fp20;
- (id)stringFromHTMLData:(id)fp8 textEncodingName:(id)fp12;
- (id)attributedStringFromHTMLData:(id)fp8 textEncodingName:(id)fp12;
- (void)dealloc;
- (void)webView:(id)fp8 didStartProvisionalLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 locationChangeDone:(id)fp12 forDataSource:(id)fp16;
- (void)webView:(id)fp8 didFailProvisionalLoadWithError:(id)fp12 forFrame:(id)fp16;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didFailLoadWithError:(id)fp12 forFrame:(id)fp16;
- (id)webView:(id)fp8 identifierForInitialRequest:(id)fp12 fromDataSource:(id)fp16;
- (id)webView:(id)fp8 resource:(id)fp12 willSendRequest:(id)fp16 redirectResponse:(id)fp20 fromDataSource:(id)fp24;
- (void)webView:(id)fp8 decidePolicyForNavigationAction:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;

@end

@interface MessageURLProtocol : NSURLProtocol
{
}

+ (void)initialize;
+ (BOOL)canInitWithRequest:(id)fp8;
+ (id)canonicalRequestForRequest:(id)fp8;
+ (BOOL)requestIsCacheEquivalent:(id)fp8 toRequest:(id)fp12;
- (void)startLoading;
- (void)stopLoading;

@end

@interface WebMessageDocument : NSObject
{
    NSDictionary *_partsByURL;
    NSURL *_baseURL;
    MimeBody *_mimeBody;
    MimePart *_htmlPart;
    NSData *_htmlData;
    unsigned int _preferredCharset;
    unsigned int _uniqueId:30;
    unsigned int _downloadRemoteURLs:1;
    unsigned int _containsRemoteContent:1;
}

+ (id)openDocuments;
+ (id)invalidBaseURL;
+ (id)documentWithUniqueIdentifier:(unsigned int)fp8;
- (void)dealloc;
- (id)initWithMimeBody:(id)fp8;
- (id)initWithMimePart:(id)fp8;
- (id)mimePartForURL:(id)fp8;
- (id)mimeBody;
- (id)baseURL;
- (void)setPreferredEncoding:(unsigned long)fp8;
- (id)preferredCharacterSet;
- (unsigned int)uniqueIdentifier;
- (id)htmlData;
- (id)fileWrapper;
- (void)setDownloadRemoteURLs:(BOOL)fp8;
- (BOOL)downloadRemoteURLs;
- (void)setContainsRemoteContent:(BOOL)fp8;
- (BOOL)containsRemoteContent;

@end

@interface Account : NSObject
{
    NSMutableDictionary *_info;
    unsigned int _isOffline:1;
    unsigned int _willingToGoOnline:1;
    unsigned int _autosynchronizingEnabled:1;
    unsigned int _ignoreSSLCertificates:1;
    unsigned int _promptedToIgnoreSSLCertificates:1;
}

+ (void)initialize;
+ (BOOL)haveAccountsBeenConfigured;
+ (id)readAccountsUsingDefaultsKey:(id)fp8;
+ (void)saveAccounts:(id)fp8 usingDefaultsKey:(id)fp12;
+ (void)saveAccountInfoToDefaults;
+ (id)createAccountWithDictionary:(id)fp8;
+ (id)accountTypeString;
+ (BOOL)allObjectsInArrayAreOffline:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)setAutosynchronizingEnabled:(BOOL)fp8;
- (void)_queueAccountInfoDidChange;
- (id)accountInfo;
- (void)_setAccountInfo:(id)fp8;
- (void)setAccountInfo:(id)fp8;
- (id)defaultsDictionary;
- (BOOL)isActive;
- (void)setIsActive:(BOOL)fp8;
- (BOOL)canGoOffline;
- (BOOL)isOffline;
- (void)setIsOffline:(BOOL)fp8;
- (BOOL)isWillingToGoOnline;
- (void)setIsWillingToGoOnline:(BOOL)fp8;
- (id)displayName;
- (void)setDisplayName:(id)fp8;
- (id)username;
- (void)setUsername:(id)fp8;
- (id)hostname;
- (void)setHostname:(id)fp8;
- (void)setPasswordInKeychain:(id)fp8;
- (void)_removePasswordInKeychain;
- (void)setTemporaryPassword:(id)fp8;
- (void)setPassword:(id)fp8;
- (id)passwordFromStoredUserInfo;
- (id)passwordFromKeychain;
- (id)password;
- (id)promptUserForPasswordWithMessage:(id)fp8;
- (id)promptUserIfNeededForPasswordWithMessage:(id)fp8;
- (unsigned int)portNumber;
- (unsigned int)defaultPortNumber;
- (unsigned int)defaultSecurePortNumber;
- (void)setPortNumber:(unsigned int)fp8;
- (id)serviceName;
- (id)secureServiceName;
- (void)releaseAllConnections;
- (void)validateConnections;
- (BOOL)usesSSL;
- (void)setUsesSSL:(BOOL)fp8;
- (id)sslProtocolVersion;
- (void)setSSLProtocolVersion:(id)fp8;
- (void)accountInfoDidChange;
- (id)securityProtocol;
- (void)setSecurityProcol:(id)fp8;
- (id)preferredAuthScheme;
- (void)setPreferredAuthScheme:(id)fp8;
- (id)saslProfileName;
- (Class)connectionClass;
- (BOOL)requiresAuthentication;
- (id)authenticatedConnection;
- (BOOL)_shouldTryDirectSSLConnectionOnPort:(unsigned int)fp8;
- (BOOL)_shouldRetryConnectionWithoutCertificateCheckingAfterError:(id)fp8;
- (BOOL)_connectAndAuthenticate:(id)fp8;
- (BOOL)_ignoreSSLCertificates;
- (void)_setIgnoreSSLCertificates:(BOOL)fp8;

@end

@interface Account (Applescript)
- (int)accountType;
- (void)setAccountPassword:(id)fp8;
- (id)accountPassword;
- (void)setServerName:(id)fp8;
- (id)serverName;
- (void)setLoginName:(id)fp8;
- (id)loginName;
- (void)setAccountName:(id)fp8;
- (id)accountName;
- (int)customAuthentication;
- (void)setCustomAuthentication:(int)fp8;
@end

@interface ExchangeAccount : IMAPAccount
{
}

+ (id)accountTypeString;
+ (BOOL)usingActiveDirectory;
+ (id)outlookWebAccessServer;
+ (void)setOutlookWebAccessServer:(id)fp8;
+ (id)exchangeServer;
+ (void)setExchangeServer:(id)fp8;
+ (id)activeDirectoryUser;
+ (void)setActiveDirectoryUser:(id)fp8;
+ (id)activeDirectoryPassword;
+ (void)setActiveDirectoryPassword:(id)fp8;
+ (id)activeDirectoryFullName;
+ (id)activeDirectoryEmailAddress;
- (Class)connectionClass;
- (BOOL)storeDraftsOnServer;
- (BOOL)storeSentMessagesOnServer;
- (BOOL)storeJunkOnServer;
- (id)_defaultSpecialMailboxNameForType:(int)fp8;
- (void)filterMailboxList:(id)fp8 forMailbox:(id)fp12 options:(int)fp16;
- (id)_nonMailboxChildrenOfMailboxWithPath:(id)fp8 iisServer:(id)fp12;
- (void)_filterMailboxList:(id)fp8 forMailboxWithPath:(id)fp12 iisServer:(id)fp16;
- (id)hostname;
- (void)setHostname:(id)fp8;
- (id)username;
- (void)setUsername:(id)fp8;
- (id)passwordFromStoredUserInfo;
- (id)passwordFromKeychain;
- (void)setPassword:(id)fp8;
- (void)setPasswordInKeychain:(id)fp8;
- (void)_removePasswordInKeychain;
- (id)defaultsDictionary;
- (void)handleOpenMailboxError:(id)fp8;

@end

@interface MailAccount : Account
{
    NSString *_path;
    MailboxUid *_rootMailboxUid;
    struct {
        unsigned int cacheDirtyCount:16;
        unsigned int synchronizationThreadIsRunning:1;
        unsigned int backgroundFetchInProgress:1;
        unsigned int cacheHasBeenRead:1;
        unsigned int disableCacheWrite:1;
        unsigned int _UNUSED_:12;
    } _flags;
    MailboxUid *_inboxMailboxUid;
    MailboxUid *_draftsMailboxUid;
    MailboxUid *_sentMessagesMailboxUid;
    MailboxUid *_trashMailboxUid;
    MailboxUid *_junkMailboxUid;
    MFError *_lastConnectionError;
}

+ (void)initialize;
+ (BOOL)mailboxListingNotificationAreEnabled;
+ (void)disableMailboxListingNotifications;
+ (void)enableMailboxListingNotifications;
+ (BOOL)haveAccountsBeenConfigured;
+ (void)_addAccountToSortedPaths:(id)fp8;
+ (id)mailAccounts;
+ (void)setMailAccounts:(id)fp8;
+ (void)_removeAccountFromSortedPaths:(id)fp8;
+ (id)activeAccounts;
+ (void)saveAccountInfoToDefaults;
+ (id)allEmailAddressesIncludingFullUserName:(BOOL)fp8;
+ (id)_accountContainingEmailAddress:(id)fp8 matchingAddress:(id *)fp12 fullUserName:(id *)fp16;
+ (id)accountContainingEmailAddress:(id)fp8;
+ (id)accountThatMessageIsFrom:(id)fp8;
+ (id)accountThatReceivedMessage:(id)fp8 matchingEmailAddress:(id *)fp12 fullUserName:(id *)fp16;
+ (id)outboxMessageStore:(BOOL)fp8;
+ (id)specialMailboxUids;
+ (id)_specialMailboxUidsUsingSelector:(SEL)fp8;
+ (id)inboxMailboxUids;
+ (id)trashMailboxUids;
+ (id)outboxMailboxUids;
+ (id)sentMessagesMailboxUids;
+ (id)draftMailboxUids;
+ (id)junkMailboxUids;
+ (id)allMailboxUids;
+ (id)accountWithPath:(id)fp8;
+ (id)newAccountWithPath:(id)fp8;
+ (id)createAccountWithDictionary:(id)fp8;
+ (id)defaultPathForAccountWithHostname:(id)fp8 username:(id)fp12;
+ (id)defaultAccountDirectory;
+ (id)defaultPathNameForAccountWithHostname:(id)fp8 username:(id)fp12;
+ (id)defaultDeliveryAccount;
+ (BOOL)isAnyAccountOffline;
+ (BOOL)isAnyAccountOnline;
+ (void)_setOnlineStateOfAllAccountsTo:(BOOL)fp8;
+ (void)disconnectAllAccounts;
+ (void)connectAllAccounts;
+ (void)saveStateForAllAccounts;
+ (int)numberOfDaysToKeepLocalTrash;
+ (BOOL)allAccountsDeleteInPlace;
+ (void)synchronouslyEmptyMailboxUidType:(int)fp8 inAccounts:(id)fp12;
+ (void)resetAllSpecialMailboxes;
+ (id)mailboxUidForFileSystemPath:(id)fp8 create:(BOOL)fp12;
+ (void)deleteMailboxUidIfEmpty:(id)fp8;
- (void)synchronizeMailboxListAfterImport;
- (BOOL)isValidAccountWithError:(id)fp8 accountBeingEdited:(id)fp12 userCanOverride:(char *)fp16;
- (BOOL)cheapStoreAtPathIsEmpty:(id)fp8;
- (id)init;
- (id)initWithPath:(id)fp8;
- (void)dealloc;
- (id)path;
- (void)setPath:(id)fp8;
- (id)tildeAbbreviatedPath;
- (id)applescriptFullUserName;
- (void)setApplescriptFullUserName:(id)fp8;
- (id)fullUserName;
- (void)setFullUserName:(id)fp8;
- (id)deliveryAccount;
- (void)setDeliveryAccount:(id)fp8;
- (void)deliveryAccountWillBeRemoved:(id)fp8;
- (id)firstEmailAddress;
- (id)rawEmailAddresses;
- (id)emailAddresses;
- (id)applescriptEmailAddresses;
- (void)setApplescriptEmailAddresses:(id)fp8;
- (void)setEmailAddresses:(id)fp8;
- (BOOL)shouldAutoFetch;
- (void)setShouldAutoFetch:(BOOL)fp8;
- (BOOL)fileManager:(id)fp8 shouldProceedAfterError:(id)fp12;
- (void)_synchronouslyInvalidateAndDelete:(BOOL)fp8;
- (void)deleteAccount;
- (void)saveState;
- (void)releaseAllConnections;
- (void)setIsOffline:(BOOL)fp8;
- (void)setIsWillingToGoOnline:(BOOL)fp8;
- (BOOL)canFetch;
- (id)defaultsDictionary;
- (void)nowWouldBeAGoodTimeToStartBackgroundSynchronization;
- (BOOL)canAppendMessages;
- (BOOL)canBeSynchronized;
- (void)synchronizeAllMailboxes;
- (void)fetchAsynchronously;
- (void)fetchSynchronously;
- (BOOL)isFetching;
- (void)newMailHasBeenReceived;
- (id)primaryMailboxUid;
- (id)rootMailboxUid;
- (id)draftsMailboxUidCreateIfNeeded:(BOOL)fp8;
- (id)junkMailboxUidCreateIfNeeded:(BOOL)fp8;
- (id)sentMessagesMailboxUidCreateIfNeeded:(BOOL)fp8;
- (id)trashMailboxUidCreateIfNeeded:(BOOL)fp8;
- (id)allMailboxUids;
- (void)setDraftsMailboxUid:(id)fp8;
- (void)setTrashMailboxUid:(id)fp8;
- (void)setJunkMailboxUid:(id)fp8;
- (void)setSentMessagesMailboxUid:(id)fp8;
- (void)deleteMessagesFromMailboxUid:(id)fp8 olderThanNumberOfDays:(unsigned int)fp12 compact:(BOOL)fp16;
- (void)_setEmptyFrequency:(int)fp8 forKey:(id)fp12;
- (int)_emptyFrequencyForKey:(id)fp8 defaultValue:(id)fp12;
- (int)emptySentMessagesFrequency;
- (void)setEmptySentMessagesFrequency:(int)fp8;
- (int)emptyJunkFrequency;
- (void)setEmptyJunkFrequency:(int)fp8;
- (int)emptyTrashFrequency;
- (void)setEmptyTrashFrequency:(int)fp8;
- (BOOL)shouldMoveDeletedMessagesToTrash;
- (void)setShouldMoveDeletedMessagesToTrash:(BOOL)fp8;
- (void)emptySpecialMailboxesThatNeedToBeEmptiedAtQuit;
- (id)displayName;
- (id)displayNameForMailboxUid:(id)fp8;
- (BOOL)containsMailboxes;
- (void)resetSpecialMailboxes;
- (id)mailboxPathExtension;
- (BOOL)canCreateNewMailboxes;
- (BOOL)newMailboxNameIsAcceptable:(id)fp8 reasonForFailure:(id *)fp12;
- (BOOL)canMailboxBeRenamed:(id)fp8;
- (BOOL)canMailboxBeDeleted:(id)fp8;
- (id)createMailboxWithParent:(id)fp8 name:(id)fp12;
- (BOOL)renameMailbox:(id)fp8 newName:(id)fp12 parent:(id)fp16;
- (BOOL)deleteMailbox:(id)fp8;
- (void)accountInfoDidChange;
- (void)postUserInfoHasChangedForMailboxUid:(id)fp8 userInfo:(id)fp12;
- (void)setConnectionError:(id)fp8;
- (id)connectionError;
- (id)storeForMailboxUid:(id)fp8;
- (Class)storeClass;
- (void)setUnreadCount:(unsigned int)fp8 forMailbox:(id)fp12;
- (BOOL)hasUnreadMail;
- (id)mailboxUidForRelativePath:(id)fp8 create:(BOOL)fp12;
- (id)valueInMailboxesWithName:(id)fp8;
- (id)objectSpecifierForMessageStore:(id)fp8;
- (id)objectSpecifierForMailboxUid:(id)fp8;
- (id)objectSpecifier;

@end

@interface MailAccount (Internal)
+ (id)_accountWithPath:(id)fp8;
+ (void)_postMailAccountsHaveChanged;
+ (void)_setOutboxMailboxUid:(id)fp8;
+ (id)_outboxMailboxUid;
- (BOOL)_setPath:(id)fp8;
- (void)setIsActive:(BOOL)fp8;
- (void)_postMailAccountsHaveChangedIfNeeded;
- (id)_pathComponentForUidName:(id)fp8;
- (id)_uidNameForPathComponent:(id)fp8;
- (void)_readCustomInfoFromMailboxCache:(id)fp8;
- (void)_writeCustomInfoToMailboxCache:(id)fp8;
- (id)_copyMailboxUidWithParent:(id)fp8 name:(id)fp12 attributes:(unsigned int)fp16 existingMailboxUid:(id)fp20;
- (void)_synchronouslyLoadListingForParent:(id)fp8;
- (void)_loadMailboxListingIntoCache:(id)fp8 attributes:(unsigned int)fp12 parent:(id)fp16;
- (BOOL)_usesMailboxCache;
- (void)_synchronizeMailboxListWithFileSystem;
- (void)_loadEntriesFromFileSystemPath:(id)fp8 parent:(id)fp12;
- (void)_writeMailboxCacheWithPrejudice:(BOOL)fp8;
- (id)_insertMailbox:(id)fp8 intoParent:(id)fp12 withName:(id)fp16;
- (void)_setChildren:(id)fp8 forMailboxUid:(id)fp12;
- (BOOL)_deleteMailbox:(id)fp8;
- (id)description;
- (void)_fetchSynchronouslyIfNeeded;
- (void)_backgroundFetchCompleted;
- (void)_emptySpecialMailboxesIfNeeded;
- (void)_emptySpecialMailboxesIfNeededForQuit:(BOOL)fp8;
- (id)_defaultSpecialMailboxNameForType:(int)fp8;
- (void)_assignSpecialMailboxToAppropriateIvar:(id)fp8 forType:(int)fp12;
- (void)_setSpecialMailboxName:(id)fp8 forType:(int)fp12;
- (void)_setSpecialMailbox:(id)fp8 forType:(int)fp12;
- (id)_specialMailboxNameForType:(int)fp8;
- (id)_specialMailboxUidWithType:(int)fp8 create:(BOOL)fp12;
- (BOOL)_canEmptyMessagesFromMailboxUid:(id)fp8;
- (BOOL)_shouldLogDeleteActivity;
@end

@interface MailAccount (ScriptingSupport)
- (id)indicesOfObjectsByEvaluatingObjectSpecifier:(id)fp8;
- (id)mailboxes;
- (void)replaceInMailboxes:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInMailboxes:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInMailboxes:(id)fp8;
- (void)removeFromMailboxesAtIndex:(unsigned int)fp8;
- (BOOL)emptyTrashOnQuit;
- (void)setEmptyTrashOnQuit:(BOOL)fp8;
- (BOOL)emptySentMessagesOnQuit;
- (void)setEmptySentMessagesOnQuit:(BOOL)fp8;
- (BOOL)emptyJunkOnQuit;
- (void)setEmptyJunkOnQuit:(BOOL)fp8;
@end

@interface _MailboxUidEnumerator : NSEnumerator
{
    struct __CFTree *_startTree;
    struct __CFTree *_lastTree;
}

- (void)dealloc;
- (id)initWithTree:(struct __CFTree *)fp8;
- (id)nextObject;

@end

@interface MailboxUid : NSObject
{
    id _accountOrPathComponent;
    unsigned int _attributes;
    void *_tree;
    NSString *pendingNameChange;
}

+ (id)specialMailboxUids;
- (void)_postInvalidNotificationIfNeeded;
- (void)dealloc;
- (id)init;
- (id)initWithAccount:(id)fp8;
- (id)initWithName:(id)fp8 attributes:(unsigned int)fp12;
- (id)displayName;
- (void)setPendingNameChange:(id)fp8;
- (id)name;
- (void)setName:(id)fp8;
- (unsigned int)attributes;
- (void)setAttributes:(unsigned int)fp8;
- (unsigned int)unreadCount;
- (void)setUnreadCount:(unsigned int)fp8;
- (BOOL)hasChildren;
- (unsigned int)numberOfGenericChildren;
- (unsigned int)numberOfChildren;
- (id)childAtIndex:(unsigned int)fp8;
- (unsigned int)indexOfChild:(id)fp8;
- (id)childWithName:(id)fp8;
- (id)mutableCopyOfChildren;
- (BOOL)setChildren:(id)fp8;
- (id)parent;
- (void)setParent:(id)fp8;
- (void)setRepresentedAccount:(id)fp8;
- (id)representedAccount;
- (id)account;
- (id)applescriptAccount;
- (BOOL)isValid;
- (void)invalidate;
- (BOOL)isContainer;
- (BOOL)isStore;
- (BOOL)isSpecialMailboxUid;
- (id)accountRelativePath;
- (id)fullPath;
- (id)tildeAbbreviatedPath;
- (id)pathRelativeToMailbox:(id)fp8;
- (int)compareWithMailboxUid:(id)fp8;
- (int)indexToInsertChildMailboxUid:(id)fp8;
- (BOOL)isDescendantOfMailbox:(id)fp8;
- (id)depthFirstEnumerator;
- (id)description;
- (int)type;
- (void)setType:(int)fp8;
- (id)_loadUserInfo;
- (id)userInfoObjectForKey:(id)fp8;
- (void)setUserInfoObject:(id)fp8 forKey:(id)fp12;
- (BOOL)userInfoBoolForKey:(id)fp8;
- (void)setUserInfoBool:(BOOL)fp8 forKey:(id)fp12;
- (void)saveUserInfo;

@end

@interface SpecialMailboxUid : MailboxUid
{
}

+ (id)specialMailboxWithIdentifier:(id)fp8;
+ (id)specialMailboxUidForMailboxUid:(id)fp8;
+ (id)inboxMailboxUid;
+ (id)sentMessagesMailboxUid;
+ (id)draftsMailboxUid;
+ (id)junkMailboxUid;
+ (id)outboxMailboxUid;
+ (id)trashMailboxUid;
- (id)displayName;
- (id)name;
- (id)account;
- (id)children;
- (id)mutableCopyOfChildren;
- (id)childAtIndex:(unsigned int)fp8;
- (unsigned int)numberOfChildren;
- (unsigned int)numberOfGenericChildren;
- (unsigned int)unreadCount;
- (id)tildeAbbreviatedPath;
- (id)_viewerAttributesKey;
- (id)_loadUserInfo;
- (void)saveUserInfo;

@end

@interface SpecialMailboxUid (AppleScript)
+ (id)appleScriptNameForMailboxType:(int)fp8;
- (id)appleScriptKey;
- (id)objectSpecifier;
- (id)messages;
@end

@interface IMAPAccount : MailAccount <IMAPMailboxListFilter>
{
    NSString *_separatorChar;
    struct __CFArray *_lastKnownCapabilities;
    struct __CFArray *_cachedConnections;
    struct __CFArray *_mailboxesToSynchronize;
    unsigned int _readBufferSize:31;
    unsigned int _lastConnectionFailed:1;
    IMAPOperationCache *_offlineCache;
}

+ (id)accountTypeString;
- (void)_readCustomInfoFromMailboxCache:(id)fp8;
- (void)_writeCustomInfoToMailboxCache:(id)fp8;
- (void)dealloc;
- (void)saveState;
- (Class)storeClass;
- (id)mailboxPathExtension;
- (void)setDisplayName:(id)fp8;
- (unsigned int)defaultPortNumber;
- (unsigned int)defaultSecurePortNumber;
- (id)serviceName;
- (id)secureServiceName;
- (id)saslProfileName;
- (BOOL)requiresAuthentication;
- (Class)connectionClass;
- (BOOL)compactWhenClosingMailboxes;
- (void)setCompactWhenClosingMailboxes:(BOOL)fp8;
- (void)setCachePolicy:(int)fp8;
- (int)cachePolicy;
- (BOOL)cachesAllMailboxes;
- (void)setCachesAllMailboxes:(BOOL)fp8;
- (BOOL)storeDraftsOnServer;
- (void)setStoreDraftsOnServer:(BOOL)fp8;
- (BOOL)storeJunkOnServer;
- (void)setStoreJunkOnServer:(BOOL)fp8;
- (BOOL)storeSentMessagesOnServer;
- (void)setStoreSentMessagesOnServer:(BOOL)fp8;
- (BOOL)storeTrashOnServer;
- (void)setStoreTrashOnServer:(BOOL)fp8;
- (id)primaryMailboxUid;
- (void)handleAlertResponse:(id)fp8;
- (unsigned int)readBufferSize;
- (void)setReadBufferSize:(unsigned int)fp8;
- (void)_synchronizeMailboxesSynchronously;
- (void)synchronizeAllMailboxes;
- (void)_checkForNewMessagesInStore:(id)fp8 unreadCountDelta:(unsigned int)fp12;
- (unsigned int)minimumPartialDownloadSize;
- (BOOL)allowsPartialDownloads;
- (void)setAllowsPartialDownloads:(BOOL)fp8;
- (BOOL)connectAndAuthenticate:(id)fp8;
- (id)connectionForStore:(id)fp8 delegate:(id)fp12 options:(int)fp16;
- (void)handleOpenMailboxError:(id)fp8;
- (void)checkInConnection:(id)fp8;
- (void)unselectMailbox:(id)fp8;
- (void)filterMailboxList:(id)fp8 forMailbox:(id)fp12 options:(int)fp16;
- (void)_releaseAllConnectionsAndCallSuper:(BOOL)fp8;
- (void)releaseAllConnections;
- (void)_validateConnections;
- (void)validateConnections;
- (void)connectionDidDisconnect:(id)fp8;
- (BOOL)connection:(id)fp8 shouldHandleUntaggedResponse:(id)fp12 forCommand:(CDAnonymousStruct5 *)fp16;
- (void)connection:(id)fp8 didReceiveResponse:(id)fp12 forCommand:(CDAnonymousStruct5 *)fp16;
- (BOOL)canGoOffline;
- (void)setIsOffline:(BOOL)fp8;
- (void)fetchSynchronously;
- (id)separatorChar;
- (id)lastKnownCapabilities;
- (id)_listingForMailboxUid:(id)fp8 listAllChildren:(BOOL)fp12;
- (id)createMailboxWithParent:(id)fp8 name:(id)fp12;
- (BOOL)_deleteMailbox:(id)fp8;
- (void)_setSpecialMailbox:(id)fp8 forType:(int)fp12;
- (id)_specialMailboxNameForType:(int)fp8;
- (BOOL)_isMailboxTypeStoredLocally:(int)fp8;
- (id)_localMailboxNameForType:(int)fp8 usingDisplayName:(id)fp12;
- (void)_renameLocalSpecialMailboxesToName:(id)fp8;
- (id)_specialMailboxUidWithType:(int)fp8 create:(BOOL)fp12;
- (BOOL)canBeSynchronized;
- (void)nowWouldBeAGoodTimeToStartBackgroundSynchronization;
- (void)_fetchUnreadCountsForMailboxUid:(id)fp8 recursively:(BOOL)fp12 connection:(id)fp16;
- (void)_synchronizeAccountWithServer;
- (id)_copyMailboxUidWithParent:(id)fp8 name:(id)fp12 attributes:(unsigned int)fp16 existingMailboxUid:(id)fp20;
- (void)_synchronouslyLoadListingForParent:(id)fp8;
- (BOOL)renameMailbox:(id)fp8 newName:(id)fp12 parent:(id)fp16;
- (void)insertInMailboxes:(id)fp8 atIndex:(unsigned int)fp12;
- (id)_pathComponentForUidName:(id)fp8;
- (id)_uidNameForPathComponent:(id)fp8;
- (id)_nameForMailboxUid:(id)fp8;
- (id)_mailboxUidForName:(id)fp8;
- (BOOL)canMailboxBeDeleted:(id)fp8;
- (id)serverPathPrefix;
- (void)setServerPathPrefix:(id)fp8;
- (void)deleteMessagesFromMailboxUid:(id)fp8 olderThanNumberOfDays:(unsigned int)fp12 compact:(BOOL)fp16;
- (BOOL)_canEmptyMessagesFromMailboxUid:(id)fp8;
- (id)offlineCache;

@end

@interface IMAPAccount (ScriptingSupport)
- (int)messageCaching;
- (void)setMessageCaching:(int)fp8;
@end

@interface iToolsAccount : IMAPAccount
{
    BOOL _isPrimaryiToolsAccount;
}

+ (id)defaultPathNameForAccountWithHostname:(id)fp8 username:(id)fp12;
+ (id)primaryUsername;
+ (BOOL)primaryUsernameExists;
+ (id)iToolsMailHostname;
+ (id)iToolsSMTPHostname;
+ (id)accountTypeString;
- (BOOL)_isReallyPrimaryiToolsAccount;
- (BOOL)isPrimaryiToolsAccount;
- (void)setIsPrimaryiToolsAccount:(BOOL)fp8;
- (BOOL)isActive;
- (id)hostname;
- (void)setHostname:(id)fp8;
- (void)setPortNumber:(unsigned int)fp8;
- (unsigned int)portNumber;
- (void)setUsername:(id)fp8;
- (void)setPasswordInKeychain:(id)fp8;
- (void)_removePasswordInKeychain;
- (id)passwordFromKeychain;
- (id)displayName;
- (id)username;
- (id)emailAddresses;
- (void)setDeliveryAccount:(id)fp8;
- (id)deliveryAccount;

@end

@interface POPAccount : MailAccount
{
    POP3FetchStore *_fetcher;
    ActivityMonitor *_fetchMonitor;
    BOOL _fetcherNeedsReset;
    BOOL _deletingSeenMessages;
    BOOL _hasDoneBackgroundSynchronization;
}

+ (id)accountTypeString;
- (id)init;
- (void)dealloc;
- (BOOL)_configureFetcherObject;
- (void)fetchSynchronously;
- (void)resetFetcher;
- (void)releaseAllConnections;
- (BOOL)canGoOffline;
- (void)setIsOffline:(BOOL)fp8;
- (void)_readCustomInfoFromMailboxCache:(id)fp8;
- (unsigned int)defaultPortNumber;
- (unsigned int)defaultSecurePortNumber;
- (id)serviceName;
- (id)secureServiceName;
- (id)saslProfileName;
- (BOOL)requiresAuthentication;
- (Class)storeClass;
- (Class)connectionClass;
- (id)storeForMailboxUid:(id)fp8;
- (id)mailboxPathExtension;
- (id)primaryMailboxUid;
- (BOOL)usedToBeConfiguredForLocalINBOX;
- (BOOL)canCreateNewMailboxes;
- (BOOL)canMailboxBeRenamed:(id)fp8;
- (BOOL)_setPath:(id)fp8;
- (BOOL)deleteMessagesOnServer;
- (void)setDeleteMessagesOnServer:(BOOL)fp8;
- (int)bigMessageWarningSize;
- (void)setBigMessageWarningSize:(int)fp8;
- (void)setMessageDeletionPolicy:(int)fp8;
- (void)setDelayedMessageDeletionInterval:(unsigned int)fp8;
- (int)messageDeletionPolicy;
- (unsigned int)delayedMessageDeletionInterval;
- (BOOL)deletingSeenMessages;
- (void)deleteSeenMessagesNow;
- (void)insertInMailboxes:(id)fp8 atIndex:(unsigned int)fp12;

@end

@interface POPAccount (Applescript)
- (BOOL)deleteMessagesWhenMovedFromInbox;
- (void)setDeleteMessagesWhenMovedFromInbox:(BOOL)fp8;
- (id)mailboxes;
- (id)objectSpecifierForMailboxUid:(id)fp8;
- (id)valueInMailboxesWithName:(id)fp8;
- (id)storeForMailboxUid:(id)fp8;
@end

@interface _RootlessMailboxUid : MailboxUid
{
}

- (id)displayName;
- (id)fullPath;
- (id)tildeAbbreviatedPath;

@end

@interface LocalAccount : MailAccount
{
    NSMutableArray *_disembodiedUids;
}

+ (id)localAccount;
+ (id)accountTypeString;
- (id)initWithPath:(id)fp8;
- (id)rootMailboxUid;
- (Class)storeClass;
- (id)mailboxPathExtension;
- (id)primaryMailboxUid;
- (void)setPath:(id)fp8;
- (id)displayName;
- (void)setHostname:(id)fp8;
- (void)setUsername:(id)fp8;
- (id)password:(BOOL)fp8;
- (void)setPassword:(id)fp8;
- (BOOL)canFetch;
- (BOOL)shouldAutoFetch;
- (BOOL)isOffline;
- (void)setIsOffline:(BOOL)fp8;
- (int)emptyTrashFrequency;
- (BOOL)shouldMoveDeletedMessagesToTrash;
- (void)_synchronouslyLoadListingForParent:(id)fp8;
- (id)_copyMailboxUidWithParent:(id)fp8 name:(id)fp12 attributes:(unsigned int)fp16 existingMailboxUid:(id)fp20;
- (id)createMailboxWithParent:(id)fp8 name:(id)fp12;
- (BOOL)renameMailbox:(id)fp8 newName:(id)fp12 parent:(id)fp16;
- (void)insertInMailboxes:(id)fp8 atIndex:(unsigned int)fp12;
- (id)mailboxUidForFileSystemPath:(id)fp8;

@end

@interface Connection : NSObject
{
    id _securityLayer;
    _NSSocket *_socket;
    char *_buffer;
    int _bufferRemainingBytes;
    unsigned int _bufferStart;
    unsigned int _bufferLength;
    NSData *_logData;
}

+ (void)initialize;
+ (BOOL)logAllSocketActivity;
+ (void)setLogAllSocketActivity:(BOOL)fp8;
+ (id)logActivityOnPorts;
+ (void)setLogActivityOnPorts:(id)fp8;
+ (id)logActivityOnHosts;
+ (void)setLogActivityOnHosts:(id)fp8;
- (void)dealloc;
- (BOOL)connectUsingAccount:(id)fp8;
- (BOOL)authenticateUsingAccount:(id)fp8;
- (id)capabilities;
- (id)authenticationMechanisms;
- (BOOL)writeData:(id)fp8 dontLogBytesInRange:(struct _NSRange)fp12;
- (BOOL)writeData:(id)fp8;
- (BOOL)readLineIntoData:(id)fp8;
- (BOOL)readBytesIntoData:(id)fp8 desiredLength:(unsigned int)fp12;
- (BOOL)authenticateUsingAccount:(id)fp8 authenticator:(id)fp12;
- (BOOL)startTLSForAccount:(id)fp8;
- (BOOL)isValid;
- (void)disconnect;
- (void *)_socket;

@end

@interface MessageThread : Message
{
    NSMutableArray *filteredMessages;
    int unreadMessageCount;
    int flaggedMessageCount;
    int attachmentCount;
    NSString *messageID;
    NSString *formattedUnreadMessageCount;
    BOOL isOpen;
    Message *newestMessage;
    Message *oldestMessage;
    Message *realNewestMessage;
    Message *oldestUnreadMessage;
    NSMutableDictionary *pendingChanges;
    BOOL updateSubjectEtcUponClosing;
}

+ (id)findNewestMessageInMessages:(id)fp8;
+ (id)findOldestUnreadMessageInMessages:(id)fp8;
- (id)initWithMessages:(id)fp8;
- (void)dealloc;
- (id)filteredMessages;
- (id)filteredMessageIDs;
- (void)addMessages:(id)fp8 usingSortFunction:(void *)fp12 context:(struct _MessageSortingInformation *)fp16 makePending:(BOOL)fp20;
- (void)deleteMessage:(id)fp8 makePending:(BOOL)fp12;
- (BOOL)commitPendingChangesForSeriesID:(id)fp8;
- (void)discardPendingChangesForSeriesID:(id)fp8;
- (unsigned int)indexInMall:(id)fp8;
- (BOOL)flagsHaveChanged;
- (void)updateSubjectEtc:(BOOL)fp8;
- (id)formattedUnreadMessageCount;
- (int)numberOfFilteredMessages;
- (int)numberOfPendingFilteredMessages;
- (id)pendingFilteredMessages;
- (int)numberOfUnreadMessages;
- (void)setNewestMessage:(id)fp8;
- (void)setOldestMessage:(id)fp8;
- (id)to;
- (double)dateReceivedAsTimeIntervalSince1970;
- (double)dateSentAsTimeIntervalSince1970;
- (id)sender;
- (id)senderAddressComment;
- (void)setColor:(id)fp8;
- (id)messageID;
- (id)messageStore;
- (int)junkMailLevel;
- (id)messageBody;
- (unsigned int)messageSize;
- (unsigned int)numberOfAttachments;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)isThread;
- (BOOL)isOpen;
- (void)setIsOpen:(BOOL)fp8;
- (BOOL)willBeDeletedIfMessagesAreDeleted:(id)fp8;
- (void)sortMessagesUsingFunction:(void *)fp8 context:(struct _MessageSortingInformation *)fp12 makePending:(BOOL)fp16;
- (void)invertOrderOfMessagesMakePending:(BOOL)fp8;
- (id)oldestMessage;
- (id)newestMessage;
- (id)realNewestMessage;
- (id)oldestUnreadMessage;

@end

@interface Message (Threads)
- (BOOL)isThread;
@end

@interface NSMailDelivery : NSObject
{
}

+ (BOOL)deliverMessage:(id)fp8 headers:(id)fp12 format:(id)fp16 protocol:(id)fp20;
+ (BOOL)deliverMessage:(id)fp8 subject:(id)fp12 to:(id)fp16;
+ (BOOL)hasDeliveryClassBeenConfigured;

@end

@interface MailDelivery : NSObject
{
    id _delegate;
    Message *_message;
    MailAccount *_archiveAccount;
    DeliveryAccount *_account;
    unsigned int _askForReadReceipt:1;
    unsigned int _threaded:1;
    unsigned int _status:4;
    unsigned int __UNUSED__:25;
}

+ (id)newWithMessage:(id)fp8;
+ (BOOL)deliverMessage:(id)fp8 askForReadReceipt:(BOOL)fp12;
+ (BOOL)deliverMessage:(id)fp8;
+ (BOOL)returnMessageToSender:(id)fp8;
- (id)initWithMessage:(id)fp8;
- (void)dealloc;
- (id)message;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (id)archiveAccount;
- (void)setArchiveAccount:(id)fp8;
- (id)account;
- (void)setAccount:(id)fp8;
- (BOOL)askForReadReceipt;
- (void)setAskForReadReceipt:(BOOL)fp8;
- (int)deliveryStatus;
- (id)headersForDelivery;
- (void)deliverAsynchronously;
- (int)deliverSynchronously;
- (int)deliverMessageData:(id)fp8 toRecipients:(id)fp12;

@end

@interface DeliveryAccount : Account
{
}

+ (id)deliveryAccounts;
+ (void)setDeliveryAccounts:(id)fp8;
+ (void)addDeliveryAccount:(id)fp8;
+ (void)removeDeliveryAccount:(id)fp8;
+ (void)saveAccountInfoToDefaults;
+ (id)accountWithIdentifier:(id)fp8;
+ (id)accountWithHostname:(id)fp8 username:(id)fp12;
+ (id)newDefaultInstance;
- (Class)deliveryClass;
- (id)identifier;
- (BOOL)shouldUseAuthentication;
- (void)setShouldUseAuthentication:(BOOL)fp8;

@end

@interface SMTPDelivery : MailDelivery
{
    SMTPConnection *_connection;
}

- (Class)deliveryClass;
- (int)deliverMessageData:(id)fp8 toRecipients:(id)fp12;

@end

@interface SMTPConnection : Connection
{
    unsigned int _lastResponseCode:31;
    unsigned int _hideLoggedData:1;
    id _lastResponse;
    NSMutableArray *_serviceExtensions;
    NSMutableData *_mdata;
    NSString *_domainName;
    int _originalSocketTimeout;
    int _lastCommandTimestamp;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (int)state;
- (id)lastResponse;
- (unsigned int)lastResponseCode;
- (id)domainName;
- (void)setDomainName:(id)fp8;
- (unsigned long long)maximumMessageBytes;
- (id)authenticationMechanisms;
- (BOOL)authenticateUsingAccount:(id)fp8;
- (BOOL)authenticateUsingAccount:(id)fp8 authenticator:(id)fp12;
- (BOOL)connectUsingAccount:(id)fp8;
- (int)mailFrom:(id)fp8;
- (int)rcptTo:(id)fp8;
- (int)noop;
- (int)sendData:(id)fp8;
- (int)quit;
- (long)timeLastCommandWasSent;

@end

@interface SMTPConnection (PrivateCommands)
- (int)_sendCommand:(const char *)fp8 length:(unsigned int)fp12 argument:(id)fp16 trailer:(const unsigned char)fp20;
- (int)_getReply;
- (void)_readResponseRange:(struct _NSRange *)fp8 isContinuation:(char *)fp12;
- (BOOL)_connectUsingAccount:(id)fp8;
- (int)_doHandshakeUsingAccount:(id)fp8;
- (BOOL)_hasParameter:(id)fp8 forKeyword:(id)fp12;
@end

@interface SMTPAccount : DeliveryAccount
{
    SMTPConnection *_connection;
    NSTimer *_timer;
    double _lastTimerSetDate;
}

+ (id)accountTypeString;
+ (id)newDefaultInstance;
- (Class)deliveryClass;
- (unsigned int)defaultPortNumber;
- (id)serviceName;
- (id)saslProfileName;
- (Class)connectionClass;
- (id)preferredAuthScheme;
- (void)setPreferredAuthScheme:(id)fp8;
- (id)authenticatedConnection;
- (void)checkInConnection:(id)fp8;
- (void)setTimer;
- (void)connectionExpired:(id)fp8;
- (void)disconnect:(id)fp8;
- (BOOL)_shouldTryDirectSSLConnectionOnPort:(unsigned int)fp8;
- (void)releaseAllConnections;
- (void)setPasswordInKeychain:(id)fp8;
- (id)passwordFromKeychain;
- (void)dealloc;

@end

@interface SMTPAccount (Applescript)
- (id)displayName;
- (id)objectSpecifier;
@end

@interface ActivityMonitor : NSObject
{
    NSMachPort *_cancelPort;
    NSString *_taskName;
    NSString *_statusMessage;
    NSString *_descriptionString;
    double _percentDone;
    unsigned int _key:13;
    unsigned int _canCancel:1;
    unsigned int _shouldCancel:1;
    unsigned int _isActive:1;
    unsigned int _priority:8;
    unsigned int _changeCount:8;
    id _delegate;
    id _target;
    MFError *_error;
}

+ (id)currentMonitor;
- (id)init;
- (void)dealloc;
- (BOOL)isActive;
- (void)setDelegate:(id)fp8;
- (void)postActivityStarting;
- (void)handlePortMessage:(id)fp8;
- (void)postActivityFinished;
- (void)_didChange;
- (int)changeCount;
- (void)setStatusMessage:(id)fp8;
- (void)setStatusMessage:(id)fp8 percentDone:(double)fp12;
- (id)statusMessage;
- (void)setPercentDone:(double)fp8;
- (double)percentDone;
- (unsigned char)priority;
- (void)setPriority:(unsigned char)fp8;
- (id)description;
- (id)taskName;
- (void)setTaskName:(id)fp8;
- (void)setActivityTarget:(id)fp8;
- (id)activityTarget;
- (BOOL)canBeCancelled;
- (void)setCanBeCancelled:(BOOL)fp8;
- (BOOL)shouldCancel;
- (void)setShouldCancel:(BOOL)fp8;
- (void)cancel;
- (int)acquireExclusiveAccessKey;
- (void)relinquishExclusiveAccessKey:(int)fp8;
- (void)setStatusMessage:(id)fp8 percentDone:(double)fp12 withKey:(int)fp20;
- (void)setStatusMessage:(id)fp8 withKey:(int)fp12;
- (void)setPercentDone:(double)fp8 withKey:(int)fp16;
- (id)error;
- (void)setError:(id)fp8;
- (id)cancelPort;

@end

@interface ArchiveFileWrapper : NSFileWrapper
{
    NSData *_archiveData;
    int _archiveType;
    NSFileWrapper *_realFileWrapper;
}

- (void)dealloc;
- (id)initWithData:(id)fp8 archiveType:(int)fp12;
- (BOOL)writeToFile:(id)fp8 atomically:(BOOL)fp12 updateFilenames:(BOOL)fp16;
- (unsigned int)approximateSize;
- (BOOL)isRegularFile;
- (BOOL)isDirectory;
- (BOOL)isSymbolicLink;
- (id)serializedRepresentation;
- (id)addFileWrapper:(id)fp8;
- (void)removeFileWrapper:(id)fp8;
- (id)fileWrappers;
- (id)keyForFileWrapper:(id)fp8;
- (id)addFileWithPath:(id)fp8;
- (id)addRegularFileWithContents:(id)fp8 preferredFilename:(id)fp12;
- (id)addSymbolicLinkWithDestination:(id)fp8 preferredFilename:(id)fp12;
- (id)preferredFilename;

@end

@interface ASExtendedOutlineView : NSOutlineView
{
    struct {
        unsigned int drawColumnSeparators:1;
        unsigned int delegateProvidesRowHeights:1;
        unsigned int shouldHideDisclosureTriangles:1;
        unsigned int delegateProvidesHighlightColor:1;
        unsigned int delegateProvidesSourceDraggingMask:1;
        unsigned int delegateHandlesDidEndDrag:1;
        unsigned int delegateTracksMouse:1;
        unsigned int delegateProvidesToolTips:1;
        unsigned int trackingRectsAreDirty:1;
    } _extendedOutlineViewFlags;
    struct __CFSet *_trackingRectTags;
    int _cellTrackingRow;
}

- (void)dealloc;
- (void)stopObservingViewBoundsChange:(id)fp8;
- (void)startObservingViewBoundsChange:(id)fp8;
- (void)viewWillMoveToSuperview:(id)fp8;
- (void)setDelegate:(id)fp8;
- (BOOL)drawsColumnSeparators;
- (void)setDrawsColumnSeparators:(BOOL)fp8;
- (void)_drawColumnSeparatorsInRect:(struct _NSRect)fp8;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)drawRect:(struct _NSRect)fp8;
- (void)drawRow:(int)fp8 clipRect:(struct _NSRect)fp12;
- (BOOL)shouldCollapseAutoExpandedItemsForDeposited:(BOOL)fp8;
- (int)rowForItemEqualTo:(id)fp8;
- (id)findItemEqualTo:(id)fp8;
- (BOOL)redisplayItemEqualTo:(id)fp8;
- (BOOL)reloadItemEqualTo:(id)fp8 reloadChildren:(BOOL)fp12;
- (BOOL)expandItemEqualTo:(id)fp8 expandChildren:(BOOL)fp12;
- (BOOL)collapseItemEqualTo:(id)fp8 collapseChildren:(BOOL)fp12;
- (id)getPersistentExpandedItemsAsArray;
- (void)setPersistentExpandedItemsFromArray:(id)fp8;
- (void)setShouldHideDisclosureTriangles:(BOOL)fp8;
- (BOOL)_shouldHideDisclosureTriangle;
- (struct _NSRect)frameOfCellAtColumn:(int)fp8 row:(int)fp12;
- (float)heightOfRow:(int)fp8;
- (int)rowAtPoint:(struct _NSPoint)fp8;
- (float)_verticalOriginForRow:(int)fp8;
- (struct _NSRect)rectOfRow:(int)fp8;
- (struct _NSRect)_frameOfOutlineCellAtRow:(int)fp8;
- (BOOL)shouldUseSecondaryHighlightColor;
- (id)_highlightColorForCell:(id)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (int)trackingRow;
- (void)updateTrackingRects;
- (void)setNeedsDisplayInTrackingRects:(id)fp8 mouseEntered:(BOOL)fp12;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)expandItem:(id)fp8 expandChildren:(BOOL)fp12;
- (void)collapseItem:(id)fp8 collapseChildren:(BOOL)fp12;
- (void)reloadItem:(id)fp8 reloadChildren:(BOOL)fp12;
- (void)reloadData;
- (void)noteNumberOfRowsChanged;
- (void)aseovSuperviewBoundsChanged:(id)fp8;
- (id)view:(id)fp8 stringForToolTip:(int)fp12 point:(struct _NSPoint)fp16 userData:(void *)fp24;
- (BOOL)acceptsFirstMouse:(id)fp8;

@end

@interface ASExtendedTableView : NSTableView
{
    struct {
        unsigned int delegateScrolls:1;
        unsigned int delegateProvidesDragImage:1;
        unsigned int delegateProvidesSourceDraggingMask:1;
        unsigned int delegateDoesCommandBySelector:1;
        unsigned int delegateDragWillEnd:1;
        unsigned int delegateDragWillEndOperation:1;
        unsigned int delegateProvidesBackgroundColor:1;
        unsigned int delegateProvidesBackgroundShadedRegions:1;
        unsigned int alwaysKeepColumnsSizedToFitAvailableSpace:1;
        unsigned int delegateProvidesColumnsToPinInPlace:1;
        unsigned int delegateProvidesHighlightStyle:1;
        unsigned int delegateProvidesHighlightColor:1;
        unsigned int delegateRespondsToWillDrawRowsInRange:1;
        unsigned int delegateRespondsToDidDrawRowsInRange:1;
        unsigned int delegateProvidesRowIds:1;
        unsigned int delegateApprovesScrolling:1;
        unsigned int delegateRespondsToGotEvent:1;
        unsigned int delegateRespondsToShouldBeginDrag:1;
        unsigned int delegateRespondsToWillResizeColumnsToFit:1;
        unsigned int delegateRespondsToDidResizeColumnsToFit:1;
    } _extendedTableViewFlags;
    ObjectCache *_rowImageCache;
}

- (void)awakeFromNib;
- (void)dealloc;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)keyDown:(id)fp8;
- (void)setDelegate:(id)fp8;
- (int)firstmostSelectedRow;
- (int)lastmostSelectedRow;
- (struct _NSRange)completelyVisibleRowsCapacity:(int *)fp8;
- (void)stopObservingViewFrameChange:(id)fp8;
- (void)startObservingViewFrameChange:(id)fp8;
- (void)stopObservingViewBoundsChange:(id)fp8;
- (void)startObservingViewBoundsChange:(id)fp8;
- (void)viewWillMoveToSuperview:(id)fp8;
- (void)asetvSuperviewBoundsChanged:(id)fp8;
- (void)asetvSuperviewFrameChanged:(id)fp8;
- (void)setPersistentTableColumnsFromArray:(id)fp8;
- (id)getPersistentTableColumnsAsArray;
- (void)scrollRowToVisible:(int)fp8;
- (void)setTableColumn:(id)fp8 toVisible:(BOOL)fp12 atPosition:(int)fp16;
- (void)moveColumn:(int)fp8 toColumn:(int)fp12;
- (void)setAlwaysKeepColumnsSizedToFitAvailableSpace:(BOOL)fp8;
- (BOOL)alwaysKeepColumnsSizedToFitAvailableSpace;
- (float)totalWidthOfAllColumns;
- (int)numberOfColumnsToPinToLefthandSide;
- (int)_columnClosestToColumn:(int)fp8 whenMoved:(float)fp12;
- (void)betterSizeToFit;
- (void)sizeToFit;
- (void)_sizeToFitIfNecessary;
- (id)dragImageForRows:(id)fp8 event:(id)fp12 dragImageOffset:(struct _NSPoint *)fp16;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (void)_userSelectRow:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (BOOL)shouldUseSecondaryHighlightColor;
- (id)_highlightColorForCell:(id)fp8;
- (void)_highlightRect:(struct _NSRect)fp8 withColor:(id)fp24 usingStyle:(int)fp28;
- (void)_colorizeRow:(int)fp8 inRect:(struct _NSRect)fp12 clipRect:(struct _NSRect)fp28;
- (void)drawBackgroundInClipRect:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)drawRow:(int)fp8 clipRect:(struct _NSRect)fp12;
- (struct _NSRect)cellFrameForPaddedRect:(struct _NSRect)fp8;
- (struct _NSRect)paddedRectForCellFrame:(struct _NSRect)fp8;
- (struct _NSRect)frameOfCellAtColumn:(int)fp8 row:(int)fp12;
- (int)_distanceInDragDirectionBeforeDragAttempt;
- (int)_distanceInNonDragDirectionBeforeAbortingDragAttempt;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)clearRowImageCache;
- (void)clearRowImageCacheForRowIds:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)mouseUp:(id)fp8;
- (BOOL)_shouldPostEventNotifications;
- (void)_postEventNotification:(id)fp8 fromCell:(id)fp12;
- (BOOL)_dragShouldBeginFromMouseDown:(id)fp8;

@end

@interface ASExtendedTableHeaderView : NSTableHeaderView
{
}

- (void)_reorderColumn:(int)fp8 withEvent:(id)fp12;

@end

@interface NSTableView (WhyIsntTheKitDoingThisForUs)
- (id)menuForEvent:(id)fp8;
@end

@interface MutableByteSet : ByteSet
{
}

- (void)addBytesInRange:(struct _NSRange)fp8;
- (void)removeBytesInRange:(struct _NSRange)fp8;
- (void)invert;

@end

@interface ByteSet : NSObject <NSCopying, NSMutableCopying>
{
    char mySet[32];
}

+ (id)asciiWhitespaceSet;
+ (id)ASCIIByteSet;
+ (id)nonASCIIByteSet;
+ (id)suspiciousCodepage1252ByteSet;
- (BOOL)byteIsMember:(BOOL)fp8;
- (id)invertedSet;
- (id)initWithRange:(struct _NSRange)fp8;
- (id)initWithCString:(const char *)fp8;
- (id)initWithBytes:(const void *)fp8 length:(unsigned int)fp12;
- (id)_initWithSet:(const char *)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)mutableCopyWithZone:(struct _NSZone *)fp8;

@end

@interface DataScanner : NSObject
{
    NSData *myData;
    unsigned int myLocation;
}

+ (id)scannerWithData:(id)fp8;
- (void)setData:(id)fp8;
- (void)dealloc;
- (id)data;
- (unsigned int)scanLocation;
- (void)setScanLocation:(unsigned int)fp8;
- (BOOL)scanByte:(char *)fp8;
- (BOOL)scanInt:(int *)fp8;
- (BOOL)scanData:(id)fp8 intoData:(id *)fp12;
- (BOOL)scanCString:(const char *)fp8 intoData:(id *)fp12;
- (BOOL)scanBytesFromSet:(id)fp8 intoData:(id *)fp12;
- (void)incrementLocation;
- (BOOL)scanUpToData:(id)fp8 intoData:(id *)fp12;
- (BOOL)scanUpToCString:(const char *)fp8 intoData:(id *)fp12;
- (BOOL)scanUpToBytesFromSet:(id)fp8 intoData:(id *)fp12;
- (BOOL)isAtEnd;
- (BOOL)byteAtScanLocation;
- (id)nextTokenWithPunctuation:(id)fp8;
- (id)initWithData:(id)fp8;

@end

@interface Defaults : NSObject
{
    NSUserDefaults *defaults;
}

+ (id)sharedInstance;
+ (void)setupLoggingDefaults;
+ (id)logMessages;
- (id)primaryEmailAddress;
- (void)setPrimaryEmailAddress:(id)fp8;
- (id)fullUserName;
- (void)setFullUserName:(id)fp8;
- (int)headerDetailLevel;
- (void)setHeaderDetailLevel:(int)fp8;
- (id)_regexesForCustomDisplayedHeaders;
- (id)headersToDisplayFromHeaderKeys:(id)fp8 headerDetailLevel:(int)fp12;
- (id)customDisplayedHeaders;
- (void)setCustomDisplayedHeaders:(id)fp8;
- (int)sendFormat;
- (void)setSendFormat:(int)fp8;
- (id)mailAccountDirectory;
- (void)setDefaultMailDirectory:(id)fp8;
- (id)defaultMailDirectory;
- (id)archiveMailbox;
- (id)draftsMailbox;
- (id)trashMailboxName;
- (BOOL)autosaveWindows;
- (void)setAutosaveWindows:(BOOL)fp8;
- (id)quotingColorList;
- (void)setQuotingColorList:(id)fp8;
- (id)colorForQuoteLevel:(int)fp8;
- (id)alternateAddressesForSelf;
- (id)dictionaryForKey:(id)fp8;
- (id)stringForKey:(id)fp8;
- (void)removeObjectForKey:(id)fp8;
- (void)setObject:(id)fp8 forKey:(id)fp12;
- (id)objectForKey:(id)fp8;
- (void)setBool:(BOOL)fp8 forKey:(id)fp12;
- (BOOL)boolForKey:(id)fp8;
- (int)integerForKey:(id)fp8;
- (BOOL)synchronize;

@end

@interface NSArray (NSEmailAddressArray)
- (id)uncommentedAddressList;
@end

@interface NSString (NSEmailAddressString)
+ (id)nameExtensions;
+ (id)nameExtensionsThatDoNotNeedCommas;
+ (id)partialSurnames;
+ (id)formattedAddressWithName:(id)fp8 email:(id)fp12 useQuotes:(BOOL)fp16;
- (id)uncommentedAddress;
- (id)uncommentedAddressRespectingGroups;
- (id)addressComment;
- (void)firstName:(id *)fp8 middleName:(id *)fp12 lastName:(id *)fp16 extension:(id *)fp20;
- (BOOL)appearsToBeAnInitial;
- (id)fullName;
- (id)addressList;
- (id)trimCommasSpacesQuotes;
- (id)componentsSeparatedByCommaRespectingQuotesAndParens;
- (id)searchStringComponents;
- (BOOL)isLegalEmailAddress;
- (id)addressDomain;
@end

@interface ExpandingSplitView : NSSplitView
{
    float _oldSplitPosition;
    int dividerToolTipTag;
}

- (void)mouseDown:(id)fp8;
- (float)getSplitPercentage;
- (BOOL)_isSubviewAtIndexVisible:(unsigned int)fp8;
- (BOOL)isSecondViewVisible;
- (BOOL)isFirstViewVisible;
- (void)resizeSubviewsToPercentage:(float)fp8;
- (void)setDividerToolTip:(id)fp8;
- (struct _NSRect)dividerRect;

@end

@interface NSMutableDictionary (Goodies)
- (void)setBool:(BOOL)fp8 forKey:(id)fp12;
- (void)setInteger:(int)fp8 forKey:(id)fp12;
@end

@interface NSDictionary (Goodies)
- (BOOL)boolForKey:(id)fp8;
- (int)integerForKey:(id)fp8;
@end

@interface NSTimeZone (HowAboutSomeNiceCaching)
+ (id)timeZoneWithAbbreviation:(id)fp8;
+ (id)timeZoneWithName:(id)fp8;
+ (id)timeZoneForSecondsFromGMT:(int)fp8;
@end

@interface NSDate (Goodies)
+ (id)dateInCommonFormatsWithString:(id)fp8;
- (id)descriptionInBSDMailboxFormat;
- (id)replyPrefixForSender:(id)fp8;
@end

@interface NSFileWrapper (HFSDataConversion)
- (id)appleSingleDataWithFilename:(const char *)fp8 length:(unsigned int)fp12;
- (id)appleDoubleDataWithFilename:(const char *)fp8 length:(unsigned int)fp12;
@end

@interface NSData (HFSDataConversion)
- (id)wrapperForAppleFileDataWithFileEncodingHint:(unsigned long)fp8;
- (id)wrapperForBinHex40DataWithFileEncodingHint:(unsigned long)fp8;
@end

@interface InvocationQueue : NSObject
{
    NSMutableArray *_items;
    unsigned int _maxThreads:16;
    unsigned int _numThreads:16;
    double _threadRecycleTimeout;
    NSConditionLock *_threadRecycleLock;
}

- (id)init;
- (void)setMaxThreadCount:(unsigned int)fp8;
- (unsigned int)maxThreadCount;
- (void)dealloc;
- (void)removeAllItems;
- (void)_drainQueue;
- (void)addInvocation:(id)fp8;
- (unsigned int)invocationCount;
- (void)setThreadRecycleTimeout:(double)fp8;
- (double)threadRecycleTimeout;

@end

@interface MainThread : NSObject
{
    NSMachPort *_ticklePort;
    NSMutableArray *_requests;
}

+ (void)setupMainThreadObject;
+ (id)mainThread;
+ (BOOL)runningOnMainThread;
- (id)init;
- (BOOL)_runningOnMainThread;
- (void)performOneway:(BOOL)fp8 result:(void *)fp12 withTarget:(id)fp16 selector:(SEL)fp20;
- (void)_postNotificationInMainThread:(id)fp8;
- (void)_threadWillDie:(id)fp8;
- (void)handlePortMessage:(id)fp8;

@end

@interface NSNotificationCenter (MainThreadPosting)
- (void)postNotificationInMainThread:(id)fp8;
@end

@interface NSObject (MainThreadMessaging)
- (void)performSelectorInMainThread:(SEL)fp8;
- (void)performSelectorInMainThread:(SEL)fp8 withObject:(id)fp12;
- (void)performSelectorInMainThread:(SEL)fp8 withObject:(id)fp12 withObject:(id)fp16;
- (void)performOnewaySelectorInMainThread:(SEL)fp8 withObject:(id)fp12;
- (void)performOnewaySelectorInMainThread:(SEL)fp8 withObject:(id)fp12 withObject:(id)fp16;
@end

@interface MFError : NSError
{
    NSMutableDictionary *_moreUserInfo;
}

+ (id)errorWithDomain:(id)fp8 code:(long)fp12 localizedDescription:(id)fp16;
+ (id)errorWithDomain:(id)fp8 code:(long)fp12 localizedDescription:(id)fp16 title:(id)fp20 helpTag:(id)fp24 userInfo:(id)fp28;
+ (id)errorWithException:(id)fp8;
- (void)setUserInfoObject:(id)fp8 forKey:(id)fp12;
- (id)userInfo;
- (id)moreInfo;
- (id)helpAnchor;
- (id)shortDescription;
- (void)setLocalizedDescription:(id)fp8;
- (void)setMoreInfo:(id)fp8;
- (void)setHelpTag:(id)fp8;
- (void)setShortDescription:(id)fp8;
- (BOOL)alertShowHelp:(id)fp8;
- (void)dealloc;

@end

@interface NSError (MessageAdditions)
- (BOOL)isUserCancelledError;
- (BOOL)shouldBeReportedToUser;
- (id)moreInfo;
- (id)helpAnchor;
- (id)shortDescription;
@end

@interface MonitoredInvocation : NSInvocation
{
    ActivityMonitor *_monitor;
}

+ (id)invocationWithSelector:(SEL)fp8 target:(id)fp12 taskName:(id)fp16 priority:(unsigned char)fp20 canBeCancelled:(BOOL)fp24;
+ (id)invocationWithSelector:(SEL)fp8 target:(id)fp12 object:(id)fp16 taskName:(id)fp20 priority:(unsigned char)fp24 canBeCancelled:(BOOL)fp28;
+ (id)invocationWithSelector:(SEL)fp8 target:(id)fp12 object1:(id)fp16 object2:(id)fp20 taskName:(id)fp24 priority:(unsigned char)fp28 canBeCancelled:(BOOL)fp32;
- (void)dealloc;
- (id)monitor;
- (void)setMonitor:(id)fp8;
- (void)invoke;

@end

@interface NSInvocation (MailExtensions)
+ (id)invocationWithSelector:(SEL)fp8 target:(id)fp12;
+ (id)invocationWithSelector:(SEL)fp8 target:(id)fp12 object:(id)fp16;
+ (id)invocationWithSelector:(SEL)fp8 target:(id)fp12 object1:(id)fp16 object2:(id)fp20;
+ (id)invocationWithSelector:(SEL)fp8 target:(id)fp12 object1:(id)fp16 object2:(id)fp20 object3:(id)fp24;
@end

@interface HelpButton : NSButton
{
}

- (void)awakeFromNib;
- (BOOL)sendAction:(SEL)fp8 to:(id)fp12;

@end

@interface NetworkController : NSObject
{
    struct __SCDynamicStore *_store;
    NSString *_domainName;
    unsigned int _waitingForDialToFinish:1;
    unsigned int _checkedNetwork:1;
    unsigned int _isNetworkUp:1;
    NSTimer *_notificationTimer;
}

+ (id)sharedInstance;
- (void)dealloc;
- (id)init;
- (BOOL)isNetworkUp;
- (id)domainName;
- (BOOL)isHostReachable:(id)fp8;

@end

@interface NetworkController (Private)
- (void)_postNotification:(id)fp8;
- (void)_postNetworkChangeNotification:(id)fp8;
- (void)_triggerDialForHostname:(id)fp8;
@end

@interface NSAppleEventDescriptor (MailAdditions)
- (long)sendNoReplyWithMode:(long)fp8 priority:(short)fp12;
- (long)sendNoReply;
@end

@interface NSArray (AppleScriptConveniences)
- (id)arrayByEvaluatingObjectSpecifiers;
@end

@interface NSAppleScript (MessageRuleAdditions)
+ (id)_createScriptAtPath:(id)fp8 errorInfo:(id *)fp12;
+ (BOOL)executeHandlerWithName:(id)fp8 inScriptAtPath:(id)fp12 withArguments:(id)fp16 error:(id *)fp20;
+ (BOOL)executeHandlerWithEventClass:(unsigned long)fp8 eventID:(unsigned long)fp12 inScriptAtPath:(id)fp16 withArguments:(id)fp20 error:(id *)fp24;
- (id)executeHandlerWithName:(id)fp8 andArguments:(id)fp12 error:(id *)fp16;
- (id)executeHandlerWithEventClass:(unsigned long)fp8 eventID:(unsigned long)fp12 andArguments:(id)fp16 error:(id *)fp20;
- (BOOL)compileAndReturnError:(id *)fp8;
@end

@interface NSArray (DateComparisonForRecents)
- (int)indexOfOldestDate;
@end

@interface NSArray (MessagesFromMixedStoresConvenience)
- (id)dictionaryWithMessagesSortedByStore;
@end

@interface NSMutableArray (LockedAdditions)
- (void)addObjectsFromArrayUsingLock:(id)fp8;
@end

@interface NSMutableArray (SortedArrayExtensions)
- (unsigned int)insertObject:(id)fp8 usingSortFunction:(void *)fp12 context:(void *)fp16;
- (unsigned int)indexOfObject:(id)fp8 usingSortFunction:(void *)fp12 context:(void *)fp16;
@end

@interface NSMutableArray (Convenience)
- (BOOL)insertObjectIfAbsent:(id)fp8 usingSortFunction:(void *)fp12 context:(void *)fp16;
- (BOOL)addObjectIfAbsent:(id)fp8;
- (void)addObjectIfAbsentAccordingToEquals:(id)fp8;
@end

@interface NSArray (DerivedArray)
- (id)arrayByApplyingSelector:(SEL)fp8;
@end

@interface NSArray (removeSelf)
- (id)componentsJoinedByData:(id)fp8;
- (id)attributedComponentsJoinedByString:(id)fp8;
@end

@interface NSMutableAttributedString (MessageFrameworkAdditions)
- (void)removeTabs;
- (void)replaceCustomAttachmentAttributesWithAttachments:(id)fp8 confirmWithView:(id)fp12;
- (void)_removeAttachmentsAndReplaceWithCustomAttribute:(BOOL)fp8;
- (void)removeAllAttachmentsAndReplaceWithCustomAttachmentAttribute;
- (void)removeAllAttachments;
- (void)removeAllFormattingExceptAttachments;
- (void)removeQuotingDisplayAttributesInRange:(struct _NSRange)fp8;
- (void)fixQuotingDisplayAttributesInRange:(struct _NSRange)fp8;
- (void)changeQuoteLevelInRange:(struct _NSRange)fp8 by:(int)fp16 undoManager:(id)fp20;
@end

@interface NSAttributedString (FontAdditions)
+ (void)resetHeaderAttributes;
+ (id)boldHeaderAttributes;
+ (id)boldGrayHeaderAttributes;
+ (id)headerAttributes;
+ (id)fixedPitchAttributes;
+ (float)headerFontSize;
@end

@interface NSAttributedString (lockedRTFParsing)
+ (id)lockedAttributedStringFromRTFDFile:(id)fp8;
- (BOOL)lockedWriteRTFDToFile:(id)fp8 atomically:(BOOL)fp12;
@end

@interface NSAttributedString (MessagePasteboardSupport)
+ (id)attributedStringFromMessageData:(id)fp8;
- (id)messageDataForRange:(struct _NSRange)fp8;
@end

@interface NSAttributedString (AddressingSupport)
- (id)addressAtIndex:(int)fp8;
- (id)addressListForRange:(struct _NSRange)fp8;
@end

@interface NSAttributedString (find_attribute)
- (id)nextAttribute:(id)fp8 fromLocation:(unsigned int)fp12 effectiveRange:(struct _NSRange *)fp16;
@end

@interface NSAttributedString (plain_or_rich)
- (id)attachments;
- (id)attachmentsInRange:(struct _NSRange)fp8;
- (struct _NSRange)rangeOfAttachment:(id)fp8;
- (BOOL)containsAttachments;
- (BOOL)containsAttachmentsThatCouldConfuseWindowsClients;
- (BOOL)containsRichTextInRange:(struct _NSRange)fp8;
- (BOOL)containsRichText;
- (BOOL)containsOnlyAttachments;
@end

@interface NSAttributedString (IndexingSupport)
- (id)stringForIndexing;
@end

@interface MimeTextAttachment (IndexingSupport)
- (id)stringForIndexing;
@end

@interface NSTextAttachment (IndexingSupport)
- (id)stringForIndexing;
@end

@interface NSBundle (MessageFrameworkAdditions)
- (BOOL)loadNibNamed:(id)fp8 owner:(id)fp12;
@end

@interface _NSCGImageRep : NSImageRep
{
    struct CGImage *_cgImage;
}

+ (void)initialize;
- (id)init;
- (id)initWithCGImage:(struct CGImage *)fp8;
- (id)initWithFocusedViewRect:(struct _NSRect)fp8;
- (void)dealloc;
- (struct _NSRect)boundingBox;
- (struct CGImage *)CGImage;
- (BOOL)draw;
- (BOOL)drawAtPoint:(struct _NSPoint)fp8;
- (BOOL)drawInRect:(struct _NSRect)fp8;
- (BOOL)_isValid;
- (BOOL)_drawFromRect:(struct _NSRect)fp8 toRect:(struct _NSRect)fp24 operation:(int)fp40 alpha:(float)fp44 compositing:(BOOL)fp48 flipped:(BOOL)fp52 ignoreContext:(BOOL)fp56;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSCharacterSet (NSCharacterSetUtils)
+ (id)goodFileCharacterSet;
@end

@interface NSColor (NSColorUtilities)
+ (id)allQuotingColors;
+ (id)defaultQuotingColors;
+ (id)allHighlightColors;
+ (int)highlightColorValueForColor:(id)fp8;
+ (id)colorForHighlightColorValue:(int)fp8;
+ (id)colorPlist;
+ (int)intWithIdentifierColor:(id)fp8;
+ (id)identifierForColor:(id)fp8;
+ (id)colorForIdentifier:(id)fp8;
+ (void)_configureColorMenuForBoneHeadClients:(id)fp8;
+ (void)configureColorMenu:(id)fp8;
+ (id)createSwatchForColor:(id)fp8;
+ (id)colorWithIntValue:(int)fp8;
+ (void)setThreadBackgroundColor:(id)fp8;
+ (id)lighterThreadBackgroundColor;
+ (void)clearThreadBackgroundColors;
+ (id)threadBackgroundColor;
+ (id)junkMailColor;
+ (id)linkColor;
+ (id)visitedLinkColor;
+ (id)activeLinkColor;
- (int)intValue;
@end

@interface NSMutableData (NSDataUtils)
- (void)appendCString:(const char *)fp8;
- (void)appendByte:(BOOL)fp8;
- (void)convertNetworkLineEndingsToUnix;
@end

@interface NSData (NSDataUtils)
- (id)unquotedFromSpaceDataWithRange:(struct _NSRange)fp8;
- (id)quotedFromSpaceDataForMessage;
- (struct _NSRange)rangeOfRFC822HeaderData;
- (id)subdataToIndex:(unsigned int)fp8;
- (id)subdataFromIndex:(unsigned int)fp8;
- (struct _NSRange)rangeOfData:(id)fp8;
- (struct _NSRange)rangeOfData:(id)fp8 options:(unsigned int)fp12;
- (struct _NSRange)rangeOfData:(id)fp8 options:(unsigned int)fp12 range:(struct _NSRange)fp16;
- (struct _NSRange)rangeOfByteFromSet:(id)fp8;
- (struct _NSRange)rangeOfByteFromSet:(id)fp8 options:(unsigned int)fp12;
- (struct _NSRange)rangeOfByteFromSet:(id)fp8 options:(unsigned int)fp12 range:(struct _NSRange)fp16;
- (struct _NSRange)rangeOfCString:(const char *)fp8;
- (struct _NSRange)rangeOfCString:(const char *)fp8 options:(unsigned int)fp12;
- (struct _NSRange)rangeOfCString:(const char *)fp8 options:(unsigned int)fp12 range:(struct _NSRange)fp16;
- (id)componentsSeparatedByData:(id)fp8;
- (id)dataByConvertingUnixNewlinesToNetwork;
- (id)MD5Digest;
@end

@interface NSEvent (MessageFrameworkAdditions)
+ (BOOL)isShiftKeyDown;
+ (BOOL)isOptionKeyDown;
@end

@interface NSFileHandle (MessageAdditions)
+ (id)createFileAtPath:(id)fp8 flags:(int)fp12 mode:(int)fp16;
+ (id)fileHandleForUniqueFile:(id *)fp8 atPath:(id)fp12 mode:(int)fp16 extension:(id)fp20;
+ (id)fileHandleForUniqueFile:(id *)fp8 atPath:(id)fp12 mode:(int)fp16;
- (BOOL)writeLossyString:(id)fp8;
- (BOOL)writeBytes:(const char *)fp8 length:(int)fp12;
@end

@interface NSFileManager (NSFileManagerAdditions)
- (id)makeUniqueDirectoryWithPath:(id)fp8;
- (BOOL)makeCompletePath:(id)fp8 mode:(int)fp12;
- (BOOL)canWriteToDirectoryAtPath:(id)fp8;
- (BOOL)canWriteToFileAtPath:(id)fp8;
- (void)deleteFilesInArray:(id)fp8 fromDirectory:(id)fp12;
- (long long)fileSizeAtPath:(id)fp8 traverseLink:(BOOL)fp12;
- (id)fileModificationDateAtPath:(id)fp8 traverseLink:(BOOL)fp12;
- (id)rawDirectoryContentsAtPath:(id)fp8;
@end

@interface PlaceholderFileWrapper : NSFileWrapper
{
}

- (BOOL)isPlaceholder;

@end

@interface HFSFileWrapper : NSFileWrapper
{
}

- (void)dealloc;
- (BOOL)createEmptyAttachmentAtPath:(id)fp8;
- (BOOL)writeToFile:(id)fp8 atomically:(BOOL)fp12 updateFilenames:(BOOL)fp16;
- (id)iconCreateIfNecessary:(BOOL)fp8;
- (id)initWithPath:(id)fp8;
- (void)setPreferredFilename:(id)fp8;
- (void)setIcon:(id)fp8;
- (id)icon;
- (BOOL)isPlaceholder;

@end

@interface NSFileWrapper (HFSExtensions)
+ (id)allocWithZone:(struct _NSZone *)fp8;
- (void)setResourceForkData:(id)fp8;
- (id)resourceForkData;
- (void)setType:(unsigned long)fp8;
- (unsigned long)type;
- (void)setCreator:(unsigned long)fp8;
- (unsigned long)creator;
- (void)setFinderFlags:(unsigned short)fp8;
- (unsigned short)finderFlags;
- (void)setShouldHideExtension:(BOOL)fp8;
- (BOOL)shouldHideExtension;
- (void)setMimeType:(id)fp8;
- (id)mimeType;
- (BOOL)couldConfuseWindowsClients;
- (void)setShouldBeViewedInline:(BOOL)fp8;
- (BOOL)shouldBeViewedInline;
- (BOOL)isImageFile;
- (id)preferredFilenameWithoutHiddenExtension;
- (BOOL)isPlaceholder;
- (id)iconCreateIfNecessary:(BOOL)fp8;
- (id)tmpFullPath;
@end

@interface NSImage (ASBetterImageLookup)
+ (id)betterImageNamed:(id)fp8;
+ (id)appIconIncludingUserCustomization;
+ (id)appIconWithUnreadBadge:(int)fp8 baseImageName:(id)fp12;
@end

@interface MessageKeychainManager : NSObject
{
}

+ (void)initialize;
+ (unsigned long)_protocolForAccountType:(id)fp8;
+ (long)_setPassword:(id)fp8 forKeychainItem:(struct OpaqueSecKeychainItemRef *)fp12;
+ (id)_passwordForHost:(id)fp8 username:(id)fp12 port:(int)fp16 protocol:(unsigned long)fp20 itemRef:(struct OpaqueSecKeychainItemRef **)fp24;
+ (id)passwordForHost:(id)fp8 username:(id)fp12 port:(int)fp16 protocol:(id)fp20;
+ (void)setPassword:(id)fp8 forHost:(id)fp12 username:(id)fp16 port:(int)fp20 protocol:(id)fp24;
+ (void)removePasswordForHost:(id)fp8 username:(id)fp12 port:(int)fp16 protocol:(id)fp20;
+ (id)_passwordForGenericAccount:(id)fp8 service:(id)fp12 itemRef:(struct OpaqueSecKeychainItemRef **)fp16;
+ (id)passwordForServiceName:(id)fp8 accountName:(id)fp12;
+ (void)setPassword:(id)fp8 forServiceName:(id)fp12 accountName:(id)fp16;
+ (void)removePasswordForServiceName:(id)fp8 accountName:(id)fp12;
+ (int)systemTrustForCertificate:(struct OpaqueSecCertificateRef *)fp8 trust:(struct OpaqueSecTrustRef *)fp12 address:(id)fp16 policy:(int)fp20 usage:(int)fp24;
+ (int)userTrustForCertificate:(struct OpaqueSecCertificateRef *)fp8 address:(id)fp12 policy:(int)fp16 usage:(int)fp20;
+ (int)trustForCertificate:(struct OpaqueSecCertificateRef *)fp8 address:(id)fp12 policy:(int)fp16 usage:(int)fp20;
+ (int)trustForTrust:(struct OpaqueSecTrustRef *)fp8 certificate:(struct OpaqueSecCertificateRef *)fp12 policy:(int)fp16;
+ (struct OpaqueSecCertificateRef *)copyTrustedCertificateForAddress:(id)fp8 policy:(int)fp12 usage:(int)fp16;
+ (struct OpaqueSecCertificateRef *)copyTrustedSigningCertificateForAddress:(id)fp8;
+ (BOOL)canSignMessagesFromAddress:(id)fp8;
+ (struct OpaqueSecCertificateRef *)copyTrustedEncryptionCertificateForAddress:(id)fp8;
+ (BOOL)canEncryptMessagesToAddress:(id)fp8;
+ (struct OpaqueSecPolicyRef *)copyPolicy:(int)fp8 address:(id)fp12 usage:(int)fp16;
+ (int)userTrustForCertificate:(const struct OpaqueSecCertificateRef *)fp8 policy:(int)fp12;
+ (void)setUserTrust:(int)fp8 forCertificate:(const struct OpaqueSecCertificateRef *)fp12 policy:(int)fp16;

@end

@interface _MFPriorityLock : _MFObjectLock
{
    struct __CFArray *waiters;
}

- (void)dealloc;
- (void)lock;
- (BOOL)tryLock;
- (void)unlockForObject:(id)fp8;
- (void)yieldForObject:(id)fp8;
- (void)forceUnlockForObject:(id)fp8;
- (id)description;

@end

@interface _MFRecursiveLock : _MFObjectLock
{
    unsigned int requestedCount:16;
}

- (void)lock;
- (BOOL)tryLock;
- (void)unlockForObject:(id)fp8;
- (void)forceUnlockForObject:(id)fp8;
- (id)description;

@end

@interface _MFObjectLock : NSObject
{
    struct _opaque_pthread_t *lockingThread;
    struct _opaque_pthread_cond_t condition;
    unsigned int acquiredCount:16;
}

- (id)init;
- (void)dealloc;
- (void)lock;
- (BOOL)tryLock;
- (void)unlockForObject:(id)fp8;
- (void)yieldForObject:(id)fp8;
- (void)forceUnlockForObject:(id)fp8;

@end

@interface NSLock (MessageAdditions)
- (void)waitForLock;
@end

@interface NSObject (LockingAdditions)
+ (void)clearLocks;
- (void)lock;
- (BOOL)tryLock;
- (id)lockWithPriority;
- (BOOL)tryLockWithPriority;
- (void)unlock;
- (void)yieldLock;
- (BOOL)isLocked;
@end

@interface NSScanner (NSScannerUtils)
- (BOOL)scanStringOfLength:(unsigned int)fp8 intoString:(id *)fp12;
- (BOOL)betterScanUpToCharactersFromSet:(id)fp8 intoString:(id *)fp12;
- (BOOL)scanEndIntoString:(id *)fp8;
- (id)nextTokenWithPunctuation:(id)fp8;
- (BOOL)scanUpAndOverString:(id)fp8;
@end

@interface NSMutableSet (MessageAdditions)
- (id)uniquedObject:(id)fp8;
@end

@interface _NSSocket : NSObject
{
    struct __CFReadStream *_readStream;
    struct __CFWriteStream *_writeStream;
    NSString *_protocol;
    void *_stats;
    void *_request;
    unsigned int _numTimeoutSecs:16;
    unsigned int _openCompleted:1;
    unsigned int _canRead:1;
    unsigned int _canWrite:1;
    unsigned int _error:1;
    unsigned int _closed:1;
    unsigned int _ignoreCerts:1;
    float _lastReadTime;
}

+ (void)_runIOThread;
+ (void)handlePortMessage:(id)fp8;
+ (void)initialize;
+ (int)simulatedSocketSpeed;
+ (void)setSimulatedSocketSpeed:(int)fp8;
- (id)securityProtocol;
- (BOOL)setSecurityProtocol:(id)fp8;
- (void)setIgnoreSSLCertificates:(BOOL)fp8;
- (id)serverCertificates;
- (id)initWithTimeout:(int)fp8;
- (id)init;
- (int)timeout;
- (void)setTimeout:(int)fp8;
- (void)dealloc;
- (void)abort;
- (BOOL)isReadable;
- (BOOL)isWritable;
- (BOOL)isValid;
- (BOOL)connectToHost:(id)fp8 withPort:(unsigned int)fp12 protocol:(id)fp16;
- (int)writeBytes:(const char *)fp8 length:(int)fp12;
- (int)readBytes:(char *)fp8 length:(int)fp12;
- (id)remoteHostname;
- (unsigned int)remotePortNumber;
- (id)sourceIPAddress;
- (int)fileDescriptor;
- (float)lastReadTime;

@end

@interface NSSound (MessageAdditions)
+ (void)_playNextSound;
+ (void)_playSound;
+ (void)sound:(id)fp8 didFinishPlaying:(BOOL)fp12;
+ (void)_setupPlayList;
+ (void)_addSoundOrPathToPlayList:(id)fp8 playImmediately:(BOOL)fp12;
+ (void)addSoundToPlayList:(id)fp8 playImmediately:(BOOL)fp12;
+ (void)addSoundPathToPlayList:(id)fp8 playImmediately:(BOOL)fp12;
+ (id)validPathToSound:(id)fp8;
+ (id)systemLibrarySoundsDirs;
+ (id)librarySoundsDirs;
+ (id)networkLibrarySoundsDirs;
+ (id)tildeLibrarySoundsDirs;
+ (id)appendSoundsToPaths:(id)fp8;
+ (id)soundsAtPaths:(id)fp8;
@end

@interface NSMutableString (convenience)
- (void)replaceString:(id)fp8 withString:(id)fp12;
@end

@interface NSString (next_reference)
- (id)_nextReferenceName;
@end

@interface NSString (NSStringUtils)
+ (id)stringWithData:(id)fp8 encoding:(unsigned int)fp12;
+ (id)stringRepresentationForBytes:(long long)fp8;
+ (id)stringWithAttachmentCharacter;
- (BOOL)boolValue;
- (id)smartCapitalizedString;
- (id)stringByReplacingString:(id)fp8 withString:(id)fp12;
- (id)stringByLocalizingReOrFwdPrefix;
- (unsigned int)subjectPrefixLength;
- (id)fileSystemString;
- (id)stringWithNoExtraSpaces;
- (int)compareAsInts:(id)fp8;
- (id)MD5Digest;
- (id)messageIDSubstring;
- (id)createStringByEndTruncatingForWidth:(float)fp8 usingFont:(id)fp12;
- (id)uniqueFilenameWithRespectToFilenames:(id)fp8;
- (int)caseInsensitiveCompareExcludingXDash:(id)fp8;
@end

@interface NSTask (NSTaskAdditions)
+ (BOOL)runPipe:(id)fp8 withInputFrom:(id)fp12 andOutputTo:(id)fp16;
+ (BOOL)runPipe:(id)fp8 withInputFrom:(id)fp12;
+ (BOOL)runPipe:(id)fp8 withOutputTo:(id)fp12;
@end

@interface ObjectCache : NSObject
{
    unsigned int _arrayCapacity;
    struct __CFArray *_keysAndValues;
    BOOL _useIsEqual;
}

- (id)initWithCapacity:(unsigned int)fp8;
- (void)dealloc;
- (void)setCapacity:(unsigned int)fp8;
- (void)setUsesIsEqualForComparison:(BOOL)fp8;
- (void)setObject:(id)fp8 forKey:(id)fp12;
- (id)objectForKey:(id)fp8;
- (void)removeObjectForKey:(id)fp8;
- (void)removeAllObjects;
- (BOOL)isObjectInCache:(id)fp8;

@end

@interface NSString (PathUtils)
+ (id)pathWithDirectory:(id)fp8 filename:(id)fp12 extension:(id)fp16;
- (id)uniquePathWithMaximumLength:(int)fp8;
- (BOOL)deletePath;
- (BOOL)makeDirectoryWithMode:(int)fp8;
- (BOOL)makePathWritable:(int *)fp8;
- (BOOL)makePathReadOnly:(int *)fp8;
- (void)setPosixFilePermissions:(int)fp8;
- (BOOL)isSubdirectoryOfPath:(id)fp8;
- (id)stringByReallyAbbreviatingWithTildeInPath;
- (id)betterStringByResolvingSymlinksInPath;
@end

@interface SoundMenu : NSMenu
{
    int _insertionIndex;
    NSMenuItem *_otherItem;
}

- (id)_addItemWithTitle:(id)fp8;
- (id)init;
- (id)initAndLoadSounds;
- (void)playSoundForItemAtIndex:(int)fp8;
- (int)addSoundPath:(id)fp8;
- (void)performActionForItemAtIndex:(int)fp8;
- (id)otherMenuItem;
- (void)_soundMenuDidAddItem:(id)fp8;

@end

@interface SoundPopUpButton : NSPopUpButton
{
    NSButton *addSoundButton;
    NSButton *removeSoundButton;
    NSButton *doneButton;
    NSTableView *soundTableView;
    NSMutableArray *userSounds;
    NSPanel *soundPanel;
    id delegate;
    NSMenu *soundMenu;
    NSString *_selectedItem;
    NSMenuItem *_otherItem;
    BOOL _amIAwake;
    BOOL _showSoundsFromBundle;
    BOOL _showSoundsFromDelegate;
    BOOL _showSoundsFromSystemLibrary;
    BOOL _showSoundsFromLibrary;
    BOOL _showSoundsFromNetworkLibrary;
    BOOL _showSoundsFromTildeLibrary;
    BOOL _showNone;
    BOOL _showAddRemove;
}

- (id)_addItemWithTitle:(id)fp8;
- (void)_appendSoundsFromDirectories:(id)fp8;
- (void)_popupMenuChanged:(id)fp8;
- (void)_configureSoundMenu;
- (void)_playSound;
- (void)_playSoundForItemAtIndex:(int)fp8;
- (void)_invalidateSoundMenu;
- (id)otherMenuItem;
- (void)_commonInit;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)awakeFromNib;
- (id)menu;
- (id)soundPath;
- (int)selectSoundPath:(id)fp8;
- (void)openPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)addRemoveMailSound:(id)fp8;
- (void)soundSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)newSoundClicked:(id)fp8;
- (void)removeSoundClicked:(id)fp8;
- (void)doneClicked:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableViewSelectionDidChange:(id)fp8;
- (BOOL)showSoundsFromBundle;
- (void)setShowSoundsFromBundle:(BOOL)fp8;
- (BOOL)showSoundsFromDelegate;
- (void)setShowSoundsFromDelegate:(BOOL)fp8;
- (BOOL)showSoundsFromSystemLibrary;
- (void)setShowSoundsFromSystemLibrary:(BOOL)fp8;
- (BOOL)showSoundsFromLibrary;
- (void)setShowSoundsFromLibrary:(BOOL)fp8;
- (BOOL)showSoundsFromNetworkLibrary;
- (void)setShowSoundsFromNetworkLibrary:(BOOL)fp8;
- (BOOL)showSoundsFromTildeLibrary;
- (void)setShowSoundsFromTildeLibrary:(BOOL)fp8;
- (BOOL)showNone;
- (void)setShowNone:(BOOL)fp8;
- (BOOL)showAddRemove;
- (void)setShowAddRemove:(BOOL)fp8;
- (void)dealloc;

@end

@interface URLMatch : NSObject
{
    struct _NSRange _range;
    NSString *_url;
}

- (id)initWithRange:(struct _NSRange)fp8 url:(id)fp16;
- (void)dealloc;
- (struct _NSRange)range;
- (id)url;

@end

@interface URLifier : NSObject
{
}

+ (id)urlMatchesForString:(id)fp8;

@end

@interface UsageCounter : NSObject
{
    NSString *_name;
    NSMutableDictionary *_counts;
    BOOL _isDirty;
}

+ (id)sharedInstance;
+ (BOOL)gatherJunkMailUsageCounts;
+ (void)setGatherJunkMailUsageCounts:(BOOL)fp8;
- (id)initWithName:(id)fp8;
- (void)dealloc;
- (id)_dictionaryForKey:(id)fp8 createIfNeeded:(BOOL)fp12;
- (void)saveDefaults;
- (unsigned int)numberOfDaysAvailableForKey:(id)fp8;
- (unsigned int)countForKey:(id)fp8;
- (unsigned int)countForKey:(id)fp8 includeToday:(BOOL)fp12;
- (void)removeCountForKey:(id)fp8;
- (void)incrementCountForKey:(id)fp8;
- (void)incrementCountForKey:(id)fp8 byCount:(int)fp12;

@end

@interface NSData (UuEnDeCode)
- (id)uudecodedDataIntoFile:(id *)fp8 mode:(unsigned int *)fp12;
- (id)uuencodedDataWithFile:(id)fp8 mode:(unsigned int)fp12;
@end

@interface WorkerThread : NSThread
{
}

+ (void)initialize;
+ (void)addInvocationToQueue:(id)fp8;
+ (void)_execute:(id)fp8;

@end

@interface RegularExpression : NSObject <NSCopying, NSCoding>
{
    NSString *_expressionString;
    void *_reserved;
}

+ (void)initialize;
+ (id)regularExpressionWithString:(id)fp8;
+ (const char *)getBytesForString:(id)fp8 lossByte:(unsigned char)fp12;
- (void)dealloc;
- (id)initWithExpressionString:(id)fp8;
- (id)initWithExpressionString:(id)fp8 options:(unsigned int)fp12;
- (unsigned int)numberOfSubexpressions;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (id)expressionString;
- (struct _NSRange)matchedRangeForCString:(const char *)fp8 range:(struct _NSRange)fp12 subexpressionRanges:(struct _NSRange *)fp20 count:(unsigned int)fp24;
- (struct _NSRange)matchedRangeForString:(id)fp8 range:(struct _NSRange)fp12 subexpressionRanges:(struct _NSRange *)fp20 count:(unsigned int)fp24;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface MailboxUid (ScriptingSupport)
- (id)objectSpecifier;
- (id)applescriptContainer;
- (id)applescriptChildren;
- (id)messages;
- (void)removeFromMessagesAtIndex:(unsigned int)fp8;
- (id)mailboxName;
- (void)setMailboxName:(id)fp8;
@end

@interface MessageAddressee : NSObject
{
    NSString *_displayName;
    NSString *_address;
    NSString *_type;
    id _message;
}

- (id)initWithDisplayName:(id)fp8 address:(id)fp12 type:(id)fp16 message:(id)fp20;
- (void)dealloc;
- (BOOL)isEqual:(id)fp8;
- (id)formattedAddress;
- (id)displayName;
- (void)setDisplayName:(id)fp8;
- (id)address;
- (void)setAddress:(id)fp8;
- (id)_keyForType;
- (id)objectSpecifier;
- (void)setMessage:(id)fp8;

@end

@interface AppleScriptHeaderRecord : NSObject
{
    NSString *_name;
    id _content;
    Message *_message;
}

- (void)dealloc;
- (id)name;
- (void)setName:(id)fp8;
- (id)content;
- (void)setContent:(id)fp8;
- (id)message;
- (void)setMessage:(id)fp8;
- (id)objectSpecifier;

@end

@interface Message (ScriptingSupport)
- (id)objectSpecifier;
- (void)_setAppleScriptFlag:(id)fp8 state:(BOOL)fp12;
- (BOOL)isRead;
- (void)setIsRead:(BOOL)fp8;
- (BOOL)wasRepliedTo;
- (void)setWasRepliedTo:(BOOL)fp8;
- (BOOL)wasForwarded;
- (void)setWasForwarded:(BOOL)fp8;
- (BOOL)wasRedirected;
- (void)setWasRedirected:(BOOL)fp8;
- (BOOL)isJunk;
- (void)setIsJunk:(BOOL)fp8;
- (BOOL)isDeleted;
- (void)setIsDeleted:(BOOL)fp8;
- (BOOL)isFlagged;
- (void)setIsFlagged:(BOOL)fp8;
- (id)replyTo;
- (id)scriptedMessageSize;
- (id)content;
- (void)_addRecipientsForKey:(id)fp8 toArray:(id)fp12;
- (id)recipients;
- (id)toRecipients;
- (id)ccRecipients;
- (id)bccRecipients;
- (id)container;
- (void)setContainer:(id)fp8;
- (id)messageIDHeader;
- (id)rawSource;
- (id)allHeaders;
- (int)actionColorMessage;
- (void)setBackgroundColor:(int)fp8;
- (id)appleScriptHeaders;
@end

@interface MessageStore (ScriptingSupport)
- (id)objectSpecifier;
- (id)objectSpecifierForMessage:(id)fp8;
@end

@interface AuthScheme : NSObject
{
}

+ (void)initialize;
+ (id)knownSchemes;
+ (void)registerSchemeClass:(Class)fp8;
+ (id)schemeWithName:(id)fp8;
- (id)retain;
- (unsigned int)retainCount;
- (void)release;
- (Class)connectionClassForAccount:(id)fp8;
- (Class)authenticatorClassForAccount:(id)fp8;
- (unsigned int)defaultPortForAccount:(id)fp8;
- (id)authenticatorForAccount:(id)fp8 connection:(id)fp12;
- (BOOL)requiresPassword;
- (id)name;
- (id)humanReadableName;

@end

@interface SASLAuthenticator : NSObject
{
    void *_context;
    AuthScheme *_authScheme;
    Account *_account;
    int _authenticationState;
}

- (id)initWithAuthScheme:(id)fp8 account:(id)fp12 connection:(id)fp16;
- (void)dealloc;
- (id)authScheme;
- (id)account;
- (id)saslName;
- (id)responseForServerData:(id)fp8;
- (int)authenticationState;
- (void)setAuthenticationState:(int)fp8;
- (BOOL)justSentPlainTextPassword;
- (id)securityLayer;
- (id)localAddress;
- (id)remoteAddress;
- (BOOL)isUsingSSL;

@end

@interface Connection (Gross)
- (id)_nssocket;
@end

@interface LoginAuthenticator : SASLAuthenticator
{
    BOOL _justSentPassword;
}

- (id)saslName;
- (id)responseForServerData:(id)fp8;
- (BOOL)justSentPlainTextPassword;

@end

@interface PlainAuthenticator : SASLAuthenticator
{
}

- (id)saslName;
- (id)responseForServerData:(id)fp8;
- (BOOL)justSentPlainTextPassword;

@end

@interface PlainAuthScheme : AuthScheme
{
}

- (Class)authenticatorClassForAccount:(id)fp8;
- (id)authenticatorForAccount:(id)fp8 connection:(id)fp12;
- (id)name;
- (id)humanReadableName;

@end

@interface CRAM_MD5Authenticator : SASLAuthenticator
{
}

- (id)responseForServerData:(id)fp8;

@end

@interface CRAM_MD5AuthScheme : AuthScheme
{
}

- (Class)authenticatorClassForAccount:(id)fp8;
- (id)name;
- (id)humanReadableName;
- (BOOL)sendsPlainTextPasswords;

@end

@interface MailAddressManager : NSObject <ABImageClient>
{
    ABAddressBook *_addressBook;
    ObjectCache *_imageCache;
    NSMutableDictionary *emailsAwaitingImage;
    NSMutableDictionary *recordsCache;
    NSMutableSet *addressesWithNoRecords;
    BOOL needToTrimRecordCaches;
}

+ (id)addressManager;
- (id)init;
- (void)dealloc;
- (id)loadAddressBookAsynchronously;
- (void)loadAddressBookSynchronously;
- (void)_importDidBegin:(id)fp8;
- (void)_importDidUpdate:(id)fp8;
- (void)_importDidEnd:(id)fp8;
- (id)bestRecordMatchingFormattedAddress:(id)fp8;
- (void)trimRecordCachesAfterDelay;
- (void)trimRecordCaches;
- (void)addressBookDidChange:(id)fp8;
- (void)recordsMatchingDictionary:(id)fp8;
- (id)recordsMatchingSearchString:(id)fp8;
- (BOOL)addressBookPerson:(id)fp8 nameMatchesSearchWords:(id)fp12;
- (BOOL)email:(id)fp8 matchesSearchWords:(id)fp12;
- (id)betterRecordOfRecent:(id)fp8 addressBook:(id)fp12;
- (id)recordForUniqueId:(id)fp8;
- (id)groupsMatchingString:(id)fp8;
- (void)updateDatesForRecentRecord:(id)fp8;
- (void)_addAddresses:(id)fp8 asRecent:(BOOL)fp12;
- (void)addRecentAddresses:(id)fp8;
- (void)addAddresses:(id)fp8;
- (id)addRecentToAddressBook:(id)fp8;
- (id)addAddressToAddressBook:(id)fp8;
- (void)removeRecentAddresses:(id)fp8;
- (void)removeRecentRecord:(id)fp8;
- (id)addEmailAddressToCardMatchingFirstAndLastNameFromFormattedAddress:(id)fp8;
- (id)addressBookRecordForRecentRecord:(id)fp8 orEmail:(id)fp12;
- (id)addressBookPersonForEmail:(id)fp8;
- (id)addressBookRecordsForFirstName:(id)fp8 lastName:(id)fp12;
- (id)imageForMailAddress:(id)fp8;
- (void)fetchImageForAddress:(id)fp8;
- (void)consumeImageData:(id)fp8 forTag:(int)fp12;
- (void)cacheImage:(id)fp8 forAddress:(id)fp12;
- (id)groups;
- (void)_addEmailsFromGroup:(id)fp8 toDictionary:(id)fp12;
- (id)emailAddressesFromGroup:(id)fp8;
- (id)expandPrivateAliases:(id)fp8;

@end

@interface GSSAPIAuthenticator : SASLAuthenticator <SASLSecurityLayer>
{
    unsigned int _maxBufferSize:16;
    unsigned int _substate:2;
    unsigned int _securityLevel:4;
    void *_gssContext;
    void *_targetName;
    unsigned int _qopState;
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
- (void)setAuthenticationState:(int)fp8;
- (id)responseForServerData:(id)fp8;
- (id)securityLayer;
- (unsigned int)encryptionBufferSize;
- (id)createDecryptedDataForBytes:(const char *)fp8 length:(unsigned int)fp12;
- (id)createEncryptedDataForBytes:(const char *)fp8 length:(unsigned int)fp12;

@end

@interface GSSAPIAuthScheme : AuthScheme
{
}

- (Class)authenticatorClassForAccount:(id)fp8;
- (id)name;
- (id)humanReadableName;
- (BOOL)requiresPassword;

@end

@interface KerberosV4Authenticator : SASLAuthenticator <SASLSecurityLayer>
{
    struct KClientSessionOpaque *_session;
    struct KClientPrincipalOpaque *_serverPrincipal;
    unsigned int _checksum;
    unsigned int _securityLevel:4;
    unsigned int _maxCipherBufferSize:24;
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)setAuthenticationState:(int)fp8;
- (id)responseForServerData:(id)fp8;
- (id)securityLayer;
- (unsigned int)encryptionBufferSize;
- (id)createDecryptedDataForBytes:(const char *)fp8 length:(unsigned int)fp12;
- (id)createEncryptedDataForBytes:(const char *)fp8 length:(unsigned int)fp12;

@end

@interface KerberosV4AuthScheme : AuthScheme
{
}

- (Class)authenticatorClassForAccount:(id)fp8;
- (id)name;
- (id)humanReadableName;
- (BOOL)requiresPassword;

@end

@interface Account (TempHack)
- (id)kerberosServerPrincipal;
@end

@interface KPOPConnection : POP3Connection
{
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
- (BOOL)connectUsingAccount:(id)fp8;
- (BOOL)authenticateUsingAccount:(id)fp8;

@end

@interface KPOPAuthScheme : AuthScheme
{
}

- (BOOL)supportsAccountType:(id)fp8;
- (Class)connectionClassForAccount:(id)fp8;
- (unsigned int)defaultPortForAccount:(id)fp8;
- (Class)authenticatorClassForAccount:(id)fp8;
- (BOOL)requiresPassword;
- (id)name;
- (id)humanReadableName;

@end

@interface ABAddressBook (MailAdditions)
+ (BOOL)firstNameShouldBeFirst;
- (id)recordsCompletingSearchString:(id)fp8;
- (id)bestRecordMatchingFormattedAddress:(id)fp8;
- (id)recordWithEmailAddress:(id)fp8;
@end

@interface ABLDAP_ResultElement (MailAdditions)
- (BOOL)isGroup;
- (int)recordType;
- (id)middleName;
- (id)extension;
- (id)firstAndMiddleNames;
- (id)lastNameAndExtension;
- (id)compoundName;
- (id)_fullName;
- (id)compoundNameAndEmail;
- (BOOL)exactlyMatchesString:(id)fp8;
@end

@interface ABMailRecent (MailAdditions)
- (id)mostRecentDate;
- (BOOL)hasRelatedAddressBookRecord;
- (BOOL)isGroup;
- (id)_fullName;
@end

@interface ABGroup (MailAdditions)
- (BOOL)isGroup;
- (id)_fullName;
- (BOOL)hasEmailAddress:(id)fp8;
@end

@interface ABPerson (MailAdditions)
- (BOOL)hasEmailAddress:(id)fp8;
- (BOOL)isMe;
- (id)compoundNameAndEmailForGroupMembership:(id)fp8;
- (BOOL)isGroup;
@end

@interface ABRecord (MailAdditions)
- (id)firstName;
- (id)lastName;
- (id)middleName;
- (id)extension;
- (id)_fullName;
- (id)email;
- (id)compoundName;
- (id)compoundNameAndEmail;
- (BOOL)isGroup;
- (BOOL)isEqual:(id)fp8;
@end

@interface CachingABRecord : NSObject
{
    ABRecord *record;
    NSMutableDictionary *propertyValues;
    NSMutableArray *matchingEmails;
    CachingABRecord *associatedRecord;
}

- (id)initWithABRecord:(id)fp8;
- (void)dealloc;
- (id)valueForProperty:(id)fp8;
- (BOOL)setValue:(id)fp8 forProperty:(id)fp12;
- (id)firstName;
- (id)lastName;
- (id)middleName;
- (id)extension;
- (id)firstAndMiddleNames;
- (id)lastNameAndExtension;
- (id)_fullName;
- (id)email;
- (id)emailAddresses;
- (BOOL)isGroup;
- (id)compoundName;
- (id)compoundNameAndEmail;
- (id)uniqueId;
- (int)recordType;
- (BOOL)exactlyMatchesString:(id)fp8;
- (id)associatedRecord;
- (BOOL)isRecentRecord;
- (BOOL)hasHandles;
- (BOOL)hasEmailAddress:(id)fp8;
- (BOOL)hasRelatedAddressBookRecord;
- (id)mostRecentDate;
- (id)record;
- (id)matchingEmails;
- (void)addMatchingEmail:(id)fp8;
- (BOOL)isEqual:(id)fp8;
- (id)methodSignatureForSelector:(SEL)fp8;
- (void)forwardInvocation:(id)fp8;

@end

@interface WebHTMLAttachment : NSTextAttachment
{
    WebMessageDocument *_document;
}

- (id)initWithDocument:(id)fp8;
- (id)fileWrapper;
- (id)document;

@end

@interface NSMutableAttributedString (WebHTMLAttachment)
- (void)inlineHTMLAttachmentsInRange:(struct _NSRange)fp8;
@end

@interface MimePart (SMIMEExtensions)
- (id)decodeMultipartSigned;
- (id)decodeApplicationPkcs7_mime;
- (id)createSignedPartWithData:(id)fp8 sender:(id)fp12 signatureData:(id *)fp16;
- (id)createEncryptedPartWithData:(id)fp8 recipients:(id)fp12 encryptedData:(id *)fp16;
@end

@interface MessageSigner : NSObject
{
    int _verificationStatus;
    NSArray *_certificates;
    struct OpaqueSecTrustRef *_trust;
    int _trustResult;
}

- (void)dealloc;
- (id)initWithCmsSignerInfo:(struct SecCmsSignerInfoStr *)fp8 trust:(struct OpaqueSecTrustRef *)fp12;
- (id)description;
- (id)emailAddress;
- (struct OpaqueSecCertificateRef *)signingCertificate;
- (id)certificates;
- (id)signingError;

@end

@interface MFError (MessageSignerSupport)
- (id)messageSigner;
@end

@interface NSError (MessageSignerSupport)
- (id)messageSigner;
@end

@interface MimeCharset : NSObject
{
    unsigned int _encoding;
    NSString *_primaryLanguage;
    NSString *_charsetName;
    unsigned int _coversLargeUnicodeSubset:1;
    unsigned int _useBase64InHeaders:1;
    unsigned int _canBeUsedForOutgoingMessages:1;
}

+ (id)allMimeCharsets;
+ (id)charsetForEncoding:(unsigned long)fp8;
+ (id)preferredMimeCharset;
- (id)retain;
- (void)release;
- (unsigned int)retainCount;
- (id)initWithEncoding:(unsigned long)fp8;
- (unsigned long)encoding;
- (id)charsetName;
- (BOOL)canBeUsedForOutgoingMessages;
- (BOOL)coversLargeUnicodeSubset;
- (BOOL)useBase64InHeaders;
- (id)displayName;
- (id)primaryLanguage;
- (id)description;

@end

@interface NSString (MimeCharsetSupport)
- (id)bestMimeCharset;
@end

~/Desktop> 
