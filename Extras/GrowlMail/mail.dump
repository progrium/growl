~/Desktop> ./class-dump /Applications/Mail.app/Contents/MacOS/Mail 
/*
 *     Generated by class-dump 3.0.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004 by Steve Nygard.
 */

struct MVAlertStateImageNames {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
};

struct MVCache {
    id _field1;
    int _field2;
    int *_field3;
    int _field4;
    struct MVCache *_field5;
};

struct MVClientCacheBlock {
    NSImage *_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct MailAlertInfo {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    int _field5;
};

struct MailPasswordInfo {
    id _field1;
    id _field2;
    char *_field3;
    id _field4;
};

struct OpaqueSecCertificateRef;

struct SheetContext {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
};

struct _MessageSortingInformation {
    char _field1;
    char _field2;
    id _field3;
};

struct _NSHashTable;

struct _NSMapTable;

struct _NSPoint {
    float x;
    float y;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _NSRect {
    struct _NSPoint origin;
    struct _NSSize size;
};

struct _NSSize {
    float width;
    float height;
};

struct _NSZone;

struct __CFDictionary;

struct __CFSet;

struct __CFURL;

struct isCachedStruct {
    unsigned int blackTextNoComma:1;
    unsigned int blackTextWithComma:1;
    unsigned int whiteTextNoComma:1;
    unsigned int whiteTextWithComma:1;
    unsigned int textForSpotlighting:1;
};

struct visible_state {
    char hadSelection;
    char selectionWasVisible;
    char scrollerWasAtEnd;
    Message *msgToPin;
    float msgUpperLeft;
};

/*
 * File: /Applications/Mail.app/Contents/MacOS/Mail
 */

@protocol MFUserAgent
- (void)showThreadIsBusy;
- (id)queryUserForPasswordWithMessage:(id)fp8 title:(id)fp12 remember:(char *)fp16;
- (BOOL)showCertificateTrustPanelForError:(id)fp8 certificates:(id)fp12;
- (int)informUserOfError:(id)fp8;
- (BOOL)queryUserForYesNoWithMessage:(id)fp8 title:(id)fp12 yesTitle:(id)fp16 noTitle:(id)fp20;
- (int)runAlertPanelWithTitle:(id)fp8 defaultTitle:(id)fp12 alternateTitle:(id)fp16 otherTitle:(id)fp20 message:(id)fp24;
- (void)runNonModalAlertPanelForObject:(id)fp8 withError:(id)fp12;
- (void)dismissNonModalAlertPanelForObject:(id)fp8;
- (void)queryUserForBigMessageAction:(id)fp8 userResponse:(int *)fp12;
- (BOOL)queryUserIfNeededToCreateMailbox:(id)fp8 orChooseNewMailbox:(id *)fp12;
- (id)queryUserToSelectMailbox:(id)fp8;
- (void)storeBeingInvalidated:(id)fp8;
- (BOOL)shouldInvalidateMailbox:(id)fp8;
- (id)sharedAttachmentContextMenu;
- (BOOL)isTerminating;
- (BOOL)wakingFromSleep;
- (id)presenceOfEmail:(id)fp8;
- (BOOL)messageIsMemberOfNonJunkThread:(id)fp8;
@end

@protocol MVMailboxSelectionOwner
- (id)selectedMailboxes;
- (int)selectionCount;
- (id)selectedMailbox;
- (void)selectPathsToMailboxes:(id)fp8;
- (BOOL)mailboxIsExpanded:(id)fp8;
- (void)revealMailbox:(id)fp8;
- (id)iconForMailboxUid:(id)fp8 smallSize:(BOOL)fp12;
@end

@protocol MVSelectionOwner
- (id)selection;
- (void)selectMessages:(id)fp8;
- (id)currentDisplayedMessage;
- (id)messageStore;
- (BOOL)transferSelectionToMailbox:(id)fp8 deleteOriginals:(BOOL)fp12;
@end

@protocol MessageContentDisplay <NSObject>
+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
- (id)contentView;
- (id)textView;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16;
- (void)prepareToRemoveView;
- (void)highlightSearchText:(id)fp8;
- (id)selectedText;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (id)findTarget;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)fp8;
@end

@protocol NSObject
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)fp8;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12 withObject:(id)fp16;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)fp8;
- (BOOL)isMemberOfClass:(Class)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (BOOL)respondsToSelector:(SEL)fp8;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned int)retainCount;
- (id)description;
@end

@protocol NSTextInput
- (void)insertText:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (void)setMarkedText:(id)fp8 selectedRange:(struct _NSRange)fp12;
- (void)unmarkText;
- (BOOL)hasMarkedText;
- (long)conversationIdentifier;
- (id)attributedSubstringFromRange:(struct _NSRange)fp8;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (struct _NSRect)firstRectForCharacterRange:(struct _NSRange)fp8;
- (unsigned int)characterIndexForPoint:(struct _NSPoint)fp8;
- (id)validAttributesForMarkedText;
@end

@interface MailApp (MFUserAgent) <MFUserAgent>
- (void)_runPasswordPanelInMainThreadWithInfo:(struct MailPasswordInfo *)fp8;
- (id)queryUserForPasswordWithMessage:(id)fp8 title:(id)fp12 remember:(char *)fp16;
- (void)_runAlertPanelInMainThreadWithInfo:(struct MailAlertInfo *)fp8;
- (int)runAlertPanelWithTitle:(id)fp8 defaultTitle:(id)fp12 alternateTitle:(id)fp16 otherTitle:(id)fp20 message:(id)fp24;
- (void)runNonModalAlertPanelForObject:(id)fp8 withError:(id)fp12;
- (void)dismissNonModalAlertPanelForObject:(id)fp8;
- (int)informUserOfError:(id)fp8;
- (BOOL)queryUserForYesNoWithMessage:(id)fp8 title:(id)fp12 yesTitle:(id)fp16 noTitle:(id)fp20;
- (BOOL)showCertificateTrustPanelForError:(id)fp8 certificates:(id)fp12;
- (id)displayStringForMailbox:(id)fp8;
- (BOOL)queryUserIfNeededToCreateMailbox:(id)fp8 orChooseNewMailbox:(id *)fp12;
- (id)queryUserToSelectMailbox:(id)fp8;
- (void)selectMailboxPanelDone:(id)fp8;
- (void)queryUserForBigMessageAction:(id)fp8 userResponse:(int *)fp12;
- (void)downloadBigMessage:(id)fp8;
- (void)storeBeingInvalidated:(id)fp8;
- (void)showThreadIsBusy;
- (void)doneBeingBusy;
- (BOOL)shouldInvalidateMailbox:(id)fp8;
- (BOOL)isMainThreadBusy;
- (id)sharedAttachmentContextMenu;
- (BOOL)isTerminating;
- (BOOL)wakingFromSleep;
- (id)presenceOfEmail:(id)fp8;
- (BOOL)messageIsMemberOfNonJunkThread:(id)fp8;
@end

@interface MessageViewerBox : NSBox
{
    BOOL _dragSourceIsAcceptable;
    TableViewManager *_tableManager;
}

- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (BOOL)isOpaque;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface MessageViewer : NSResponder
{
    MessageMall *_messageMall;
    TableViewManager *_tableManager;
    MessageContentController *_contentController;
    NSWindow *_window;
    ExpandingSplitView *_splitView;
    NSTextField *_statusField;
    AsyncArrows *_progressIndicator;
    NSBox *_messageViewerBox;
    ColorBackgroundView *_mailboxesView;
    ASExtendedOutlineView *_outlineView;
    SearchTextField *_searchField;
    NSView *_searchFieldView;
    NSToolbarItem *_searchViewItem;
    NSMenu *_searchMenu;
    NSString *_lastSearchPhrase;
    int _currentSearchType;
    int _currentSearchTarget;
    int _selectedTag;
    NSMenu *_tableHeaderMenu;
    NSMenuItem *_selectedMailboxesItem;
    MailboxesOutlineViewOwner *_outlineViewOwner;
    NSDrawer *_mailboxesDrawer;
    NSButton *newMailboxButton;
    NSPopUpButton *actionButton;
    NSString *_sizeStatusString;
    NSString *_uiStatusMessage;
    BOOL _shouldCloseMailboxListingAfterDragOperation;
    BOOL _shouldPreventTableViewResize;
    BOOL _shouldMakeTableViewSelectionVisible;
    BOOL _showingDefaultSearchString;
    BOOL _updatingSearchField;
    BOOL _allowShowingDeletedMessages;
    BOOL _disableMailboxesButton;
    float _lastSplitViewPosition;
    float _lastDragXPosition;
    NSArray *_mailboxesToDisplayWhenVisible;
    NSToolbar *_toolbar;
    NSMutableDictionary *_toolbarItems;
    NSDictionary *_savedDefaults;
    NSMutableArray *_transferOperations;
}

+ (id)allMessageViewers;
+ (id)allSingleMessageViewers;
+ (id)existingViewerForStore:(id)fp8;
+ (id)existingViewerForMailboxUid:(id)fp8;
+ (id)existingViewerForMessage:(id)fp8;
+ (void)registerNewViewer:(id)fp8;
+ (void)deregisterViewer:(id)fp8;
+ (void)showAllViewers;
+ (void)updateStatusLineForAllViewers;
+ (void)saveDefaults;
+ (void)restoreFromDefaults;
- (void)showFollowupsToMessage:(id)fp8;
- (void)_findFollowupsToMessage:(id)fp8 inStore:(id)fp12;
- (void)_displayFollowup:(id)fp8 inStore:(id)fp12;
- (void)_cantFindFollowupToMessage:(id)fp8 inStore:(id)fp12;
- (id)_mailboxUidsFromDefaults:(id)fp8;
- (id)initWithSavedDefaults:(id)fp8;
- (id)init;
- (id)plainInit;
- (id)initWithMailboxUids:(id)fp8;
- (void)dealloc;
- (void)_registerForApplicationNotifications;
- (void)_unregisterForApplicationNotifications;
- (void)_registerForStoreNotifications;
- (void)_unregisterForStoreNotifications;
- (void)storeBeingInvalidated:(id)fp8;
- (void)preferencesChanged:(id)fp8;
- (BOOL)mailboxListingIsShowing;
- (void)setMailboxListingIsShowing:(BOOL)fp8;
- (void)drawerDidOpen:(id)fp8;
- (void)_setStore:(id)fp8;
- (BOOL)_isViewingMailboxUid:(id)fp8;
- (id)_accountBeingViewed;
- (BOOL)_isViewingMessage:(id)fp8;
- (id)window;
- (void)show;
- (void)showAndMakeKey:(BOOL)fp8;
- (void)_setupUI;
- (void)_loadDrawerAndMessages;
- (void)_setupMailboxOutlineView;
- (void)_setupMailboxesDrawer;
- (void)_setupNextKeyViewLoop;
- (void)takeOverAsSelectionOwner;
- (void)resignAsSelectionOwner;
- (void)windowDidBecomeMain:(id)fp8;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (BOOL)windowShouldClose:(id)fp8;
- (void)windowWillMiniaturize:(id)fp8;
- (struct _NSSize)windowWillResize:(id)fp8 toSize:(struct _NSSize)fp12;
- (void)splitViewDidResizeSubviews:(id)fp8;
- (void)splitViewWillResizeSubviews:(id)fp8;
- (void)splitViewDoubleClickedOnDivider:(id)fp8;
- (void)splitView:(id)fp8 resizeSubviewsWithOldSize:(struct _NSSize)fp12;
- (BOOL)splitView:(id)fp8 canCollapseSubview:(id)fp12;
- (float)splitView:(id)fp8 constrainMinCoordinate:(float)fp12 ofSubviewAt:(int)fp16;
- (float)splitView:(id)fp8 constrainMaxCoordinate:(float)fp12 ofSubviewAt:(int)fp16;
- (id)selectedMailboxes;
- (void)setSelectedMailboxes:(id)fp8;
- (id)selectedMessages;
- (void)setSelectedMessages:(id)fp8;
- (id)currentDisplayedMessage;
- (void)outlineViewDoubleClick:(id)fp8;
- (void)selectMailbox:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)keyUp:(id)fp8;
- (void)_mailboxWasRenamed:(id)fp8;
- (void)mailboxSelectionChanged:(id)fp8;
- (void)_mallDidOpen;
- (void)_mallStructureDidChange;
- (void)_setMailboxUids:(id)fp8;
- (BOOL)_selectionContainsMessagesWithDeletedStatusEqualTo:(BOOL)fp8;
- (BOOL)_selectionContainsMessagesWithReadStatusEqualTo:(BOOL)fp8;
- (BOOL)_selectionContainsMessagesWithFlaggedStatusEqualTo:(BOOL)fp8;
- (BOOL)_selectionContainsMessagesWithJunkMailLevelEqualTo:(int)fp8;
- (BOOL)_selectionContainsMessagesWithAttachments;
- (BOOL)_validateAction:(SEL)fp8 tag:(int)fp12;
- (BOOL)validateMenuItem:(id)fp8;
- (void)messageWasDisplayedInTextView:(id)fp8;
- (void)checkNewMail:(id)fp8;
- (void)replyMessage:(id)fp8;
- (void)replyAllMessage:(id)fp8;
- (void)replyToSender:(id)fp8;
- (void)replyToOriginalSender:(id)fp8;
- (void)showComposeWindow:(id)fp8;
- (void)showAddressPanel:(id)fp8;
- (void)toggleAttachmentsArea:(id)fp8;
- (void)undeleteMessages:(id)fp8;
- (void)deleteMessages:(id)fp8;
- (void)deleteMessagesAllowingMoveToTrash:(BOOL)fp8;
- (void)replyViaIM:(id)fp8;
- (id)tableManager;
- (void)jumpToSelection:(id)fp8;
- (void)redirectMessage:(id)fp8;
- (void)forwardMessage:(id)fp8;
- (void)_replyMessageWithType:(int)fp8;
- (void)displaySelectedMessageInSeparateWindow:(id)fp8;
- (void)renameMailbox:(id)fp8;
- (void)moveMessagesToMailbox:(id)fp8;
- (void)copyMessagesToMailbox:(id)fp8;
- (void)_changeFlag:(id)fp8 state:(BOOL)fp12 forMessages:(id)fp16 undoActionName:(id)fp20;
- (void)markAsRead:(id)fp8;
- (void)markAsUnread:(id)fp8;
- (void)markAsUnflagged:(id)fp8;
- (void)markAsFlagged:(id)fp8;
- (void)changeColor:(id)fp8;
- (void)rebuildTableOfContents:(id)fp8;
- (void)copy:(id)fp8;
- (void)cut:(id)fp8;
- (void)paste:(id)fp8;
- (void)showPrintPanel:(id)fp8;
- (BOOL)send:(id)fp8;
- (void)saveAs:(id)fp8;
- (void)saveAllAttachments:(id)fp8;
- (void)updateMenuCheckmarkForTag:(int)fp8;
- (id)defaultSearchString;
- (void)showDefaultSearchString;
- (void)searchPopupChanged:(id)fp8;
- (void)searchIndex:(id)fp8;
- (void)clearSearch:(id)fp8;
- (void)setupSearchParametersForTag:(int)fp8;
- (int)searchType;
- (int)searchTarget;
- (void)performSearch:(id)fp8;
- (void)controlTextDidEndEditing:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (void)_removeAttachmentsFromMessages:(id)fp8 fromStores:(id)fp12;
- (void)removeAttachments:(id)fp8;
- (void)sortByTagOfSender:(id)fp8;
- (void)focus:(id)fp8;
- (void)unfocus:(id)fp8;
- (void)openAllThreads:(id)fp8;
- (void)closeAllThreads:(id)fp8;
- (void)toggleThreadedMode:(id)fp8;
- (void)selectThread:(id)fp8;
- (void)selectPreviousInThread:(id)fp8;
- (void)selectNextInThread:(id)fp8;
- (void)showDeletions:(id)fp8;
- (void)hideDeletions:(id)fp8;
- (void)toggleContentsColumn:(id)fp8;
- (void)toggleMessageNumbersColumn:(id)fp8;
- (void)toggleMessageFlagsColumn:(id)fp8;
- (void)toggleFromColumn:(id)fp8;
- (void)togglePresenceColumn:(id)fp8;
- (void)toggleToColumn:(id)fp8;
- (void)toggleDateSentColumn:(id)fp8;
- (void)toggleDateReceivedColumn:(id)fp8;
- (void)toggleLocationColumn:(id)fp8;
- (void)toggleSizeColumn:(id)fp8;
- (void)_showMailboxesPanel;
- (void)showMailboxesPanel:(id)fp8;
- (void)writeDefaultsToArray:(id)fp8;
- (id)_saveDefaults;
- (void)_setupFromDefaults;
- (id)_sizeStatus;
- (void)showStatusMessage:(id)fp8;
- (void)_updateStatusLine;
- (void)_updateStatusLineAndWindowTitle;
- (void)_updateMessageMallUids:(id)fp8;
- (void)showStatusLine:(id)fp8;
- (void)hideStatusLine:(id)fp8;
- (void)messageWasSelected:(id)fp8;
- (void)tableView:(id)fp8 willStartDragWithEvent:(id)fp12;
- (void)draggedImage:(id)fp8 movedTo:(struct _NSPoint)fp12;
- (void)draggingUpdatedAtLocation:(struct _NSPoint)fp8;
- (void)tableViewDidEndDragging:(id)fp8;
- (void)reapplySortingRules:(id)fp8;
- (void)_returnToSenderSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)returnToSender:(id)fp8;
- (void)addSenderToAddressBook:(id)fp8;
- (void)showMainThreadIsBusy:(id)fp8;
- (void)showMainThreadIsNotBusy:(id)fp8;
- (void)_performJunkMailActionOnMessages:(id)fp8;
- (void)markAsJunkMail:(id)fp8;
- (void)markMessagesAsJunkMail:(id)fp8 stores:(id)fp12;
- (void)synchronouslyMarkAsJunkMail:(id)fp8 inStores:(id)fp12 delete:(BOOL)fp16;
- (void)undoMarkMessagesAsJunkMail:(id)fp8 stores:(id)fp12;
- (void)markAsNotJunkMail:(id)fp8;
- (void)markMessagesAsNotJunkMail:(id)fp8 stores:(id)fp12;
- (void)synchronouslyMarkAsNotJunkMail:(id)fp8 inStores:(id)fp12;
- (BOOL)transferSelectedMessagesToMailbox:(id)fp8 deleteOriginals:(BOOL)fp12;
- (void)_reportError:(id)fp8;
- (void)transfer:(id)fp8 didCompleteWithError:(id)fp12;
- (id)undoManagerForMessageTransfer:(id)fp8;
- (void)_updateSearchItemLabel;

@end

@interface MessageViewer (AppleScript)
- (id)uniqueID;
- (id)objectSpecifier;
- (id)allMessages;
- (id)focusedMessages;
- (void)setFocusedMessages:(id)fp8;
- (int)appleScriptSortColumn;
- (void)setAppleScriptSortColumn:(int)fp8;
- (BOOL)isSortedAscending;
- (void)setIsSortedAscending:(BOOL)fp8;
- (BOOL)previewPaneVisible;
- (void)setPreviewPaneVisible:(BOOL)fp8;
- (id)visibleColumns;
- (void)setVisibleColumns:(id)fp8;
- (id)inbox;
- (id)outbox;
- (id)draftsMailbox;
- (id)sentMailbox;
- (id)trashMailbox;
- (id)junkMailbox;
- (void)setScriptingProperties:(id)fp8;
@end

@interface TableViewManager : NSObject <MVSelectionOwner>
{
    ASExtendedTableView *_tableView;
    MessageMall *_messageMall;
    id _delegate;
    NSArray *_tableColumns;
    NSFont *_font;
    NSMutableArray *_selection;
    BOOL _suspendChangesToScrollingAndSelection;
    Message *_currentDisplayedMessage;
    struct _NSMapTable *_storeStateTable;
    NSMutableArray *_draggedMessages;
    NSMutableAttributedString *_truncatedString;
    NSMutableDictionary *_truncatedParagraphStyle;
    int leftmostTextColumn;
    struct {
        unsigned int includeDeleted:1;
        unsigned int isFocused:1;
        unsigned int wasSortedAscendingBeforeRankSort:1;
        unsigned int isShowingSearchResults:1;
        unsigned int sortColumnBeforeRankSort:8;
        unsigned int showAccountInLocationColumn:1;
        unsigned int showSenderColumnAlways:1;
        unsigned int hideSenderColumnAlways:1;
        unsigned int showReceiverColumnAlways:1;
        unsigned int hideReceiverColumnAlways:1;
        unsigned int showLocationColumn:1;
        unsigned int hasScrolledSinceMailboxChange:1;
        unsigned int userChangedSelectionSinceMailboxChange:1;
        unsigned int threadOpeningIsInProgress:1;
        unsigned int threadClosingIsInProgress:1;
        unsigned int doubleClickThreadOpeningIsInProgress:1;
        unsigned int animatingThreadOpening:1;
        unsigned int animatingThreadClosing:1;
        unsigned int animateInSlowMotion;
        unsigned int dontUpdateTrackingRects;
    } _flags;
    NSDictionary *_messageIDsToSelectWhenOpened;
    NSArray *_threadIDsToOpenWhenOpened;
    int colorHighlightLeftEdge;
    int colorHighlightWidth;
    int locationColumnPosition;
    int locationColumnWidth;
    int senderColumnPosition;
    int senderColumnWidth;
    int receiverColumnPosition;
    int receiverColumnWidth;
    int threadedUnreadColumnWidth;
    NSMutableDictionary *_columnWidthsBeforeSearch;
    int _windowWidthBeforeSearch;
    NSMutableSet *_messagesInSelectedThread;
    MessageThread *threadBeingClosed;
    MessageThread *threadBeingOpened;
    struct __CFDictionary *_rowDrawingCache;
    NSMutableSet *_mouseTrackers;
    struct _NSPoint _lastMouseDownInUnreadColumnPoint;
    int _lastMouseDownInUnreadColumnEventNumber;
    struct _NSPoint _currentMouseLocationInWindow;
    float _amountToScrollDownAfterClosingThread;
    int _numberOfSelectedRowsBeforeTogglingThread;
    int _selectedRowBeforeTogglingThread;
    BOOL _unreadColumnResizableAfterResizingColumnsToFit;
}

+ (void)initialize;
- (void)awakeFromNib;
- (void)tableViewScrolled:(id)fp8;
- (void)_setupColumnHeaderIcon:(id)fp8 inColumnWithIdentifier:(id)fp12 alignment:(int)fp16;
- (int)_calcUnreadColumnWidthForUnreadCountString:(id)fp8;
- (void)_setupUnreadColumnMinWidth;
- (void)_setupUnreadColumnWidth;
- (void)_setupTableColumnWidths;
- (void)_configureColumnForEndTruncation:(id)fp8;
- (void)_configureColumnForDateCell:(id)fp8;
- (void)_configureColumnForImageCell:(id)fp8 alignment:(int)fp12;
- (void)_configureColumnForRolloverCell:(id)fp8 alignment:(int)fp12 action:(SEL)fp16;
- (void)showFollowupsToMessage:(id)fp8;
- (void)_setupColumnsForTableView;
- (void)dealloc;
- (void)windowWillClose:(id)fp8;
- (id)delegate;
- (void)setMessageMall:(id)fp8;
- (void)readDefaultsFromDictionary:(id)fp8;
- (void)writeDefaultsToDictionary:(id)fp8;
- (void)writeStoreSpecificDefaultsToMailboxUid:(id)fp8;
- (void)readStoreSpecificDefaultsFromMailboxUid:(id)fp8;
- (void)readStoreSpecificDefaultsFromDictionary:(id)fp8;
- (BOOL)canSelectNextMessage;
- (BOOL)canSelectPreviousMessage;
- (void)rulePreferencesChanged:(id)fp8;
- (void)viewerPreferencesChanged:(id)fp8;
- (BOOL)threadHasSelectedMessages:(id)fp8;
- (void)presencePreferenceChanged:(id)fp8;
- (void)presenceChanged:(id)fp8;
- (void)_updateTableHeaderToMatchCurrentSort;
- (void)tableView:(id)fp8 didClickTableColumn:(id)fp12;
- (id)_columnWithIdentifierTag:(int)fp8;
- (id)_unreadColumn;
- (BOOL)isColumnVisible:(int)fp8;
- (void)setColumn:(int)fp8 toVisible:(BOOL)fp12;
- (void)_setColumn:(int)fp8 toVisible:(BOOL)fp12;
- (BOOL)displaysMessageSizes;
- (void)setDisplaysReceiver:(BOOL)fp8;
- (int)tableViewNumberOfColumnsToPinToLefthandSide:(id)fp8;
- (void)tableViewWillResizeColumnsToFit:(id)fp8;
- (void)tableViewDidResizeColumnsToFit:(id)fp8;
- (void)setFont:(id)fp8;
- (id)font;
- (BOOL)isInThreadedMode;
- (void)toggleThreadedMode;
- (void)threadedModeDidChange:(id)fp8;
- (void)openThreadAtIndex:(int)fp8 andSelectMessage:(id)fp12 animate:(BOOL)fp16;
- (void)closeThreadAtIndex:(int)fp8 focusRow:(int)fp12 animate:(BOOL)fp16;
- (void)openAllThreads;
- (void)closeAllThreads;
- (void)toggleThread:(id)fp8;
- (int)_indexOfMessageNearest:(int)fp8 numberOfRows:(int)fp12 threaded:(BOOL)fp16 downward:(BOOL)fp20;
- (BOOL)canSelectPreviousThreadedMessage;
- (BOOL)canSelectNextThreadedMessage;
- (BOOL)canSelectParentOfMessage;
- (BOOL)canSelectFirstReplyToMessage;
- (BOOL)canSelectNextReplyToParent;
- (BOOL)selectionIsExactlyOneOpenThread;
- (void)selectNextMessageMovingDownward:(BOOL)fp8;
- (void)selectNextMessageMovingUpward:(BOOL)fp8;
- (void)stepIntoSelectedThread;
- (void)stepOutOfSelectedThread;
- (void)selectNextMessage:(BOOL)fp8;
- (void)selectPreviousMessage:(BOOL)fp8;
- (void)selectParentOfMessage;
- (void)selectFirstReplyToMessage;
- (void)selectPeer:(BOOL)fp8;
- (void)selectNextReplyToParent;
- (void)selectPreviousReplyToParent;
- (void)showSelectionAndCenter:(BOOL)fp8;
- (BOOL)isSelectionVisible;
- (void)scrollRowToVisible:(int)fp8 position:(int)fp12;
- (int)tableView:(id)fp8 shouldScrollRowToVisible:(int)fp12;
- (BOOL)_isMessageInSelectedThread:(id)fp8;
- (void)_setNeedsDisplayForMessagesInSet:(id)fp8;
- (void)_setNeedsDisplayThreadColumnForMessagesInSet:(id)fp8;
- (void)_updateSelectedThreadList;
- (id)selectedThread;
- (void)_reallyUpdateTextViewerToSelection;
- (void)updateTextViewerToSelection;
- (BOOL)tableView:(id)fp8 shouldSelectRow:(int)fp12 byExtendingSelection:(BOOL)fp16;
- (void)selectionIsChanging:(id)fp8;
- (void)selectionChanged:(id)fp8;
- (void)datesNeedRedisplay;
- (void)antialiasingSettingsChanged:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)_attributesForTruncatedParagraphStyle;
- (id)_colorForMessage:(id)fp8 inRow:(int)fp12;
- (id)_truncatedAttributedStringForString:(id)fp8 message:(id)fp12 row:(int)fp16 shouldIndent:(BOOL)fp20;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)_updateColorHighlightEdges;
- (void)tableView:(id)fp8 didDragTableColumn:(id)fp12;
- (void)tableViewColumnDidMove:(id)fp8;
- (void)tableViewColumnDidResize:(id)fp8;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (id)tableViewHighlightColor:(id)fp8;
- (int)tableView:(id)fp8 highlightStyleForRow:(int)fp12 inRect:(struct _NSRect *)fp16 color:(id *)fp20;
- (void)doubleClickedMessage:(id)fp8;
- (void)deleteKeyPressed;
- (void)deleteSelectionAllowingMoveToTrash:(BOOL)fp8;
- (id)selectionIncludingThreads:(BOOL)fp8;
- (id)selection;
- (void)_selectMessages:(id)fp8 scrollIfNeeded:(BOOL)fp12;
- (void)selectMessages:(id)fp8;
- (id)currentDisplayedMessage;
- (id)messageStore;
- (id)orderOfFromSubjectDateColumns;
- (id)tableView;
- (BOOL)tableView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (id)_undoActionNameForMessages:(id)fp8;
- (void)undeleteMessages:(id)fp8 allowUndo:(BOOL)fp12;
- (void)_redeleteMessages:(id)fp8 messagesToSelect:(id)fp12;
- (void)deleteMessages:(id)fp8 allowMoveToTrash:(BOOL)fp12 allowUndo:(BOOL)fp16;
- (void)deleteMessages:(id)fp8 allowMoveToTrash:(BOOL)fp12;
- (void)undeleteMessagesAllowingUndo:(BOOL)fp8;
- (void)undeleteMessages;
- (void)undeleteMessages:(id)fp8;
- (BOOL)shouldDeleteGivenCurrentState;
- (unsigned int)tableView:(id)fp8 draggingSourceOperationMaskForLocal:(BOOL)fp12;
- (id)messagesToTransfer;
- (BOOL)transferSelectionToMailbox:(id)fp8 deleteOriginals:(BOOL)fp12;
- (void)tableViewDragWillEnd:(id)fp8 operation:(unsigned int)fp12;
- (BOOL)tableView:(id)fp8 writeRows:(id)fp12 toPasteboard:(id)fp16;
- (id)_dragImageForRow:(int)fp8 event:(id)fp12 dragImageOffset:(struct _NSPoint *)fp16;
- (id)_badgeImageFromItemCount:(int)fp8;
- (id)tableView:(id)fp8 dragImageForRows:(id)fp12 event:(id)fp16 dragImageOffset:(struct _NSPoint *)fp20;
- (id)tableViewRowIdForRow:(int)fp8;
- (void)tableView:(id)fp8 willDrawRowsInRange:(struct _NSRange)fp12;
- (void)tableView:(id)fp8 didDrawRowsInRange:(struct _NSRange)fp12;
- (struct _NSRect)frameOfClickedCell;
- (struct _NSPoint)mouseLocationInWindow;
- (void)callWillDisplayCellForClickedCell;
- (void)setButtonCellNeedsDisplay;
- (void)tableView:(id)fp8 gotEvent:(id)fp12;
- (BOOL)shouldTrackMouse:(id)fp8;
- (BOOL)tableView:(id)fp8 shouldBeginDragFromMouseDown:(id)fp12;
- (id)tableView:(id)fp8 rangesForBackgroundShadingInRange:(struct _NSRange)fp12 shadingColors:(id *)fp20 leftColumnColors:(id *)fp24;
- (id)messageMall;

@end

@interface TableViewManager (AppleScript)
+ (id)_getDarkerThreadBackgroundColorForThread:(id)fp8;
+ (id)_getThreadBackgroundColorForThread:(id)fp8;
- (int)_columnForAppleScriptColumn:(int)fp8;
- (int)appleScriptSortColumn;
- (void)setAppleScriptSortColumn:(int)fp8;
- (id)appleScriptVisibleColumns;
- (void)setAppleScriptVisibleColumns:(id)fp8;
@end

@interface NSEvent (MailViewerEvent)
- (void)_setModifierFlags:(unsigned int)fp8;
@end

@interface MessageContentController : NSResponder
{
    Message *_message;
    MessageViewingState *_viewingState;
    ActivityMonitor *_documentMonitor;
    id _currentDisplay;
    id _threadDisplay;
    TextMessageDisplay *textDisplay;
    MessageHeaderDisplay *headerDisplay;
    NSView *contentContainerView;
    NSView *junkMailView;
    NSTextField *junkMailMessageField;
    NSButton *junkMailLoadHTMLButton;
    NSView *loadImagesView;
    NSButton *loadImagesButton;
    NSBox *bannerBorderBox;
    NSView *certificateView;
    NSButton *certificateButton;
    NSImageView *certificateImage;
    NSTextField *certificateMessageField;
    AttachmentsView *attachmentsView;
    ObjectCache *_documentCache;
    InvocationQueue *invocationQueue;
    double _foregroundLoadStartTime;
    double _backgroundLoadStartTime;
    double _backgroundLoadEndTime;
    NSString *_messageIDToRestoreInitialStateFor;
    struct _NSRect _initialVisibleRect;
    struct _NSRange _initialSelectedRange;
    NSArray *mostRecentHeaderOrder;
    NSTimer *_fadeTimer;
    NSView *_currentBanner;
    BOOL _hideBannerBorder;
    BOOL isForPrinting;
    BOOL showAllHeadersStickily;
    BOOL showDefaultHeadersStickily;
}

+ (void)setClass:(Class)fp8 forDisplayType:(id)fp12;
- (id)init;
- (void)setIsForPrinting:(BOOL)fp8;
- (void)setContentContainerView:(id)fp8;
- (void)setLoadImagesView:(id)fp8;
- (void)setJunkMailView:(id)fp8;
- (void)setCertificateView:(id)fp8;
- (void)readDefaultsFromDictionary:(id)fp8;
- (void)writeDefaultsToDictionary:(id)fp8;
- (void)dealloc;
- (void)stopAllActivity;
- (id)documentView;
- (id)currentDisplay;
- (void)_messageMayHaveBecomeAvailable;
- (void)fadeToEmpty;
- (void)_pushDocumentToCache;
- (void)_backgroundLoadFinished:(id)fp8;
- (void)_backgroundUrlificationFinished:(id)fp8 urlMatches:(id)fp12;
- (void)setMessage:(id)fp8 headerOrder:(id)fp12;
- (void)_setMessage:(id)fp8 headerOrder:(id)fp12;
- (void)_fetchContentsForMessage:(id)fp8 fromStore:(id)fp12 withViewingState:(id)fp16;
- (void)_startBackgroundLoad:(id)fp8;
- (id)message;
- (void)setMostRecentHeaderOrder:(id)fp8;
- (void)reloadCurrentMessage;
- (void)viewerPreferencesChanged:(id)fp8;
- (void)showJunkMailHelp:(id)fp8;
- (void)_removeCurrentBanner;
- (void)_showBannerView:(id)fp8;
- (void)_showLoadImagesBanner;
- (void)_showCertificateBanner;
- (void)_showJunkBanner;
- (void)_updateBanner;
- (void)setShowBannerBorder:(BOOL)fp8;
- (void)_addRecentAddress:(id)fp8;
- (void)markAsNotJunkMailClicked:(id)fp8;
- (void)_messageFlagsDidChange:(id)fp8;
- (void)_updateDisplay;
- (void)_setCurrentDisplay:(id)fp8;
- (void)highlightSearchText:(id)fp8;
- (id)attachmentsView;
- (id)textView;
- (id)currentSelection;
- (void)clearCache;
- (id)viewingState;
- (id)viewingStateForMessage:(id)fp8;
- (void)cacheViewingState:(id)fp8 forMessage:(id)fp12;
- (void)displayString:(id)fp8;
- (void)initPrintInfo;
- (int)headerDetailLevel;
- (BOOL)showingAllHeaders;
- (void)setShowAllHeaders:(BOOL)fp8;
- (void)makeStickyShowAllHeaders;
- (void)makeStickyShowDefaultHeaders;
- (void)keyDown:(id)fp8;
- (BOOL)pageDown;
- (BOOL)pageUp;
- (BOOL)currentlyViewingSource;
- (BOOL)_validateAction:(SEL)fp8 tag:(int)fp12;
- (id)findTarget;
- (BOOL)validateToolbarItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)showAllHeaders:(id)fp8;
- (void)showFilteredHeaders:(id)fp8;
- (void)viewSource:(id)fp8;
- (void)toggleShowControlCharacters:(id)fp8;
- (void)toggleAttachmentsArea:(id)fp8;
- (void)showFirstAlternative:(id)fp8;
- (void)showPreviousAlternative:(id)fp8;
- (void)showNextAlternative:(id)fp8;
- (void)_messageWouldHaveLoadedRemoteURL:(id)fp8;
- (void)downloadRemoteContent:(id)fp8;
- (void)showCertificate:(id)fp8;
- (void)showBestAlternative:(id)fp8;
- (void)changeTextEncoding:(id)fp8;
- (void)makeFontBigger:(id)fp8;
- (void)makeFontSmaller:(id)fp8;
- (void)jumpToSelection:(id)fp8;
- (void)takeFindStringFromSelection:(id)fp8;

@end

@interface MessageTextView : NSTextView
{
    unsigned int _deletingText:1;
    unsigned int _actuallyImportsGraphics:1;
    unsigned int _actuallyRichText:1;
    BOOL isTrackingMouse;
}

+ (void)initialize;
- (id)defaultFont;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (id)_attachmentForPoint:(struct _NSPoint)fp8;
- (id)attachmentForEvent:(id)fp8;
- (id)menuForEvent:(id)fp8;
- (void)setSelectedRange:(struct _NSRange)fp8 affinity:(int)fp16 stillSelecting:(BOOL)fp20;
- (void)selectText:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)pasteWithCurrentStyle:(id)fp8;
- (id)typingAttributes;
- (void)adjustFontSizeBy:(int)fp8;
- (void)makeFontBigger:(id)fp8;
- (void)makeFontSmaller:(id)fp8;
- (id)hitTest:(struct _NSPoint)fp8;
- (void)mouseDown:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)originalSelectAll:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (BOOL)shouldChangeTextInRange:(struct _NSRange)fp8 replacementString:(id)fp16;
- (void)didChangeText;
- (void)changeQuoteLevel:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)setImportsGraphics:(BOOL)fp8;
- (BOOL)importsGraphics;
- (void)setRichText:(BOOL)fp8;
- (BOOL)isRichText;
- (BOOL)readSelectionFromPasteboard:(id)fp8 type:(id)fp12;
- (BOOL)_readSelectionFromPasteboard:(id)fp8 type:(id)fp12 useCurrentStyle:(BOOL)fp16;
- (id)dragImageForSelectionWithEvent:(id)fp8 origin:(struct _NSPoint *)fp12;
- (id)originalDragImageForSelectionWithEvent:(id)fp8 origin:(struct _NSPoint *)fp12;
- (BOOL)writeSelectionToPasteboard:(id)fp8 type:(id)fp12;
- (id)readablePasteboardTypes;
- (id)writablePasteboardTypes;
- (id)acceptableDragTypes;
- (unsigned int)dragOperationForDraggingInfo:(id)fp8 type:(id)fp12;
- (void)textView:(id)fp8 clickedOnCell:(id)fp12 event:(id)fp16 inRect:(struct _NSRect)fp20 atIndex:(unsigned int)fp36;
- (void)insertNewline:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)linkTrackMouseDown:(id)fp8;
- (struct _NSRect)_cellFrameForAttachment:(id)fp8 atCharIndex:(int)fp12;
- (void)layoutManager:(id)fp8 didCompleteLayoutForTextContainer:(id)fp12 atEnd:(BOOL)fp16;
- (void)resetCursorRects;
- (id)view:(id)fp8 stringForToolTip:(int)fp12 point:(struct _NSPoint)fp16 userData:(void *)fp24;
- (BOOL)moreThanOneAttachmentSelected;
- (id)selectedAttachments;
- (id)imageOfAttachmentsFromRange:(struct _NSRange)fp8 lowerLeft:(struct _NSPoint *)fp16;
- (void)openAttachment:(id)fp8;
- (void)openAttachmentWithApplication:(id)fp8;
- (void)chooseApplicationToOpenAttachment:(id)fp8;
- (void)saveAttachment:(id)fp8;
- (void)saveAttachmentToDownloadsDirectory:(id)fp8;
- (void)deleteAttachment:(id)fp8;
- (void)viewAttachmentInline:(id)fp8;
- (void)deleteDraggedAttachments:(id)fp8;
- (void)_attachmentFinishedDownloading:(id)fp8;
- (void)orderFrontFontPanel:(id)fp8;
- (id)searchString;
- (struct _NSRange)selectedSearchRange;
- (void)showSearchResultsRange:(struct _NSRange)fp8;

@end

@interface MessageTextContainer : NSTextContainer
{
    struct _NSSize imageSize;
}

- (id)initWithContainerSize:(struct _NSSize)fp8;
- (void)setImageSize:(struct _NSSize)fp8;
- (struct _NSSize)imageSize;
- (BOOL)isSimpleRectangularTextContainer;
- (BOOL)containsPoint:(struct _NSPoint)fp8;
- (struct _NSRect)lineFragmentRectForProposedRect:(struct _NSRect)fp8 sweepDirection:(int)fp24 movementDirection:(int)fp28 remainingRect:(struct _NSRect *)fp32;

@end

@interface MessagePrinter : NSObject
{
    NSMutableArray *_messages;
    MessageContentController *_contentController;
    NSWindow *_window;
    NSPrintOperation *printOperation;
    NSPrintInfo *printInfo;
    unsigned int messageIndex;
    NSString *originalFilename;
    unsigned int scalingBehavior;
    struct _NSSize viewingWindowSize;
}

+ (void)initialize;
+ (unsigned int)scalingBehaviorFromDefaults;
+ (void)setScalingBehaviorInDefaults:(unsigned int)fp8;
- (id)init;
- (void)dealloc;
- (BOOL)loadNibFile;
- (void)initPrintInfo;
- (void)setMessages:(id)fp8;
- (void)regularMessageIsReady:(id)fp8;
- (void)printNextMessage;
- (void)printMessages:(id)fp8 showAllHeaders:(BOOL)fp12 showDefaultHeaders:(BOOL)fp16 forWindow:(id)fp20;
- (void)printOperationDidRun:(id)fp8 success:(BOOL)fp12 contextInfo:(id)fp16;
- (void)cleanUp;
- (struct _NSRect)windowFrameForBehavior:(unsigned int)fp8 printInfo:(id)fp12;

@end

@interface RankCell : NSCell
{
    float _rank;
}

- (id)rank;
- (void)setRank:(id)fp8;
- (void)setObjectValue:(id)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface MessageEditor : NSObject
{
    TilingView *headerContainer;
    AddressTextField *fieldPrototype;
    NSView *fromAndSignatureContainer;
    NSPopUpButton *fromPopup;
    NSTextField *fromLabel;
    NSPopUpButton *signaturePopup;
    NSTextField *signatureLabel;
    MessageTextView *composeText;
    OldCompletionController *completionController;
    NSButton *signButton;
    NSButton *encryptButton;
    NSView *composeContentView;
    ComposeBackEnd *backEnd;
    NSMutableArray *accessoryViewOwners;
    struct {
        unsigned int showAllHeaders:1;
        unsigned int showRichSendButton:1;
        unsigned int userSavedMessage:1;
        unsigned int userWantsToCloseWindow:1;
        unsigned int hasIncludedAttachmentsFromOriginal:1;
        unsigned int userKnowsSaveFailed:1;
        unsigned int chatShouldBeEnabled:1;
    } _flags;
    NSToolbar *_toolbar;
    NSMutableDictionary *_toolbarItems;
    int _messageType;
    NSPanel *_deliveryFallbackPanel;
    id _deliveryFallbackErrorLabel;
    id _deliveryFallbackPopupButton;
    NSWindow *becomeRichSheetWindow;
    float oldFromAndSignatureContainerWidth;
}

+ (id)createEditorWithType:(int)fp8 originalMessage:(id)fp12 forwardedText:(id)fp16 showAllHeaders:(BOOL)fp20;
+ (id)existingEditorViewingMessage:(id)fp8;
+ (void)handleFailedDeliveryOfMessage:(id)fp8 store:(id)fp12 error:(id)fp16;
+ (void)restoreDraftMessage:(id)fp8 withSavedState:(id)fp12;
+ (void)saveDefaults;
+ (void)restoreFromDefaults;
+ (void)setIsInlineSpellCheckingEnabled:(BOOL)fp8;
+ (void)setNeedsAutosave;
+ (void)autosaveTimerFired;
+ (id)sharedContextMenu;
+ (void)showEditorWithSavedState:(id)fp8;
- (void)show;
- (void)readDefaultsFromDictionary:(id)fp8;
- (void)writeDefaultsToArray:(id)fp8;
- (void)setHeaders:(id)fp8;
- (void)appendAttributedString:(id)fp8;
- (id)window;
- (void)appendAddresses:(id)fp8 toHeader:(id)fp12;
- (void)addBccHeader:(id)fp8;
- (void)addReplyToHeader:(id)fp8;
- (void)saveMessageToDrafts:(id)fp8;
- (void)insertOriginalAttachments:(id)fp8;
- (void)removeAttachments:(id)fp8;
- (void)_toggleRichSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)toggleRich:(id)fp8;
- (void)makeRichText:(id)fp8;
- (void)makePlainText:(id)fp8;
- (void)changeTextEncoding:(id)fp8;
- (void)showPrintPanel:(id)fp8;
- (void)pasteAsQuotation:(id)fp8;
- (void)searchIndex:(id)fp8;
- (BOOL)_validateAction:(SEL)fp8 tag:(int)fp12;
- (BOOL)validateMenuItem:(id)fp8;
- (void)_send:(id)fp8;
- (void)noRecipientsSheetClosed:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)send:(id)fp8;
- (void)emptyMessageSheetClosed:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)malformedAddressSheetClosed:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)changeReplyMode:(id)fp8;
- (void)alwaysSendWindowsFriendlyAttachments:(id)fp8;
- (void)sendWindowsFriendlyAttachments:(id)fp8;
- (void)insertFile:(id)fp8;
- (void)showAddressPanel:(id)fp8;
- (void)appendMessages:(id)fp8;
- (void)chatWithRecipients:(id)fp8;
- (void)changeHeaderField:(id)fp8;
- (void)recipientsDidChange:(id)fp8;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (BOOL)textView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (void)stayPlainOrBecomeRich:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)windowShouldClose:(id)fp8;
- (void)windowDidResize:(id)fp8;
- (void)windowDidMove:(id)fp8;
- (void)changeFromHeader:(id)fp8;
- (void)undoSignatureChange:(id)fp8;
- (void)changeSignature:(id)fp8;
- (id)directoryForAttachment:(id)fp8;
- (void)textView:(id)fp8 doubleClickedOnCell:(id)fp12 inRect:(struct _NSRect)fp16 atIndex:(unsigned int)fp32;
- (void)textView:(id)fp8 clickedOnCell:(id)fp12 inRect:(struct _NSRect)fp16 atIndex:(unsigned int)fp32;
- (void)textView:(id)fp8 draggedCell:(id)fp12 inRect:(struct _NSRect)fp16 event:(id)fp32 atIndex:(unsigned int)fp36;
- (BOOL)textView:(id)fp8 shouldReadSelectionFromPasteboard:(id)fp12 type:(id)fp16 result:(char *)fp20;
- (id)attachmentContextMenu;
- (void)enableCompletion:(BOOL)fp8 forTextField:(id)fp12;
- (id)backEnd;
- (void)setBackEnd:(id)fp8;
- (void)updateUIAfterAppleScriptModification:(id)fp8;
- (void)deliveryFallbackPanelSendLater:(id)fp8;
- (void)deliveryFallbackPanelEditMessage:(id)fp8;
- (void)deliveryFallbackPanelTryOtherAccount:(id)fp8;
- (void)presenceChanged:(id)fp8;
- (id)_frameSaveName;
- (void)awakeFromNib;
- (void)dealloc;
- (id)init;
- (void)subjectChanged;
- (void)addressFieldChanged;
- (BOOL)_sendButtonShouldBeEnabled;
- (void)_setupTextViewInlineSpellChecking;
- (void)composePrefsChanged:(id)fp8;
- (void)_configureComposeWindowForType:(int)fp8 message:(id)fp12;
- (id)initWithType:(int)fp8 message:(id)fp12 showAllHeaders:(BOOL)fp16;
- (BOOL)_prepareMessageToBeSaved:(id)fp8;
- (BOOL)_shouldSaveDraft;
- (void)saveMessage;
- (void)fromAndSignatureContainerFrameChanged:(id)fp8;
- (void)updateFromAndSignatureControls;
- (void)updateFromAndSignatureViewLayout;
- (void)updateSignButtonImages;
- (void)updateEncryptButtonImages;
- (void)updateSecurityControls:(BOOL)fp8;
- (void)updateHeaderFields;
- (void)configureInitialText:(id)fp8;
- (BOOL)isRichText;
- (void)setRichText:(BOOL)fp8;
- (void)backEndDidChange:(id)fp8;
- (void)reloadContentsFromMessage:(id)fp8;
- (void)messageWillNeedRecoloring:(id)fp8;
- (void)_setMessageStatusOnOriginalMessage;
- (void)backEndDidAppendMessageToOutbox:(id)fp8 result:(int)fp12;
- (BOOL)backEnd:(id)fp8 shouldDeliverMessage:(id)fp12;
- (BOOL)backEnd:(id)fp8 shouldSaveMessage:(id)fp12;
- (void)_setUserSavedMessage:(BOOL)fp8;
- (void)backEndDidSaveMessage:(id)fp8 result:(int)fp12;
- (id)_nameForRecipient:(id)fp8;
- (void)backEnd:(id)fp8 didCancelMessageDeliveryForMissingCertificatesForRecipients:(id)fp12;
- (void)backEnd:(id)fp8 didCancelMessageDeliveryForError:(id)fp12;
- (void)shouldDeliverMessageAlertWithoutEncryptionSheetDidDismiss:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)backEnd:(id)fp8 didCancelMessageDeliveryForEncryptionError:(id)fp12;
- (void)reportDeliveryFailure:(id)fp8;
- (void)chooseAlternateDeliveryAccountSheetClosed:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)deliveryFailureSheetDidClose:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)completionControllerDidSelectAddress:(id)fp8;
- (void)textFieldBeganOrEndedEditing:(id)fp8;
- (void)appendMessageArray:(id)fp8;
- (void)addFileWrappersForPaths:(id)fp8;
- (void)openPanelSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)saveState;
- (void)forceWindowClose;
- (void)closeConfirmSheetDidEnd:(id)fp8 returnCode:(int)fp12 forSave:(void *)fp16;
- (void)replyMessage:(id)fp8;
- (void)replyAllMessage:(id)fp8;
- (void)presencePreferenceChanged:(id)fp8;
- (void)updatePresenceButtonState;
- (void)updatePresenceButtonStateForAddresses:(id)fp8;
- (void)securityControlChanged:(id)fp8;

@end

@interface ComposeBackEnd : NSObject
{
    id _delegate;
    Message *_originalMessage;
    NSMutableDictionary *_cleanHeaders;
    NSMutableDictionary *_extraRecipients;
    NSAttributedString *_messageContents;
    NSMutableDictionary *_directoriesByAttachment;
    NSString *_encodingType;
    NSUndoManager *_undoManager;
    ActivityMonitor *_backgroundSaveActivity;
    MailboxUid *_lastDraftsMailboxUid;
    NSString *_lastMessageId;
    struct {
        unsigned int type:4;
        unsigned int hadChangesBeforeSave:1;
        unsigned int hasChanges:1;
        unsigned int showAllHeaders:1;
        unsigned int isUndeliverable:1;
        unsigned int isDeliveringMessage:1;
        unsigned int isSavingMessage:1;
        unsigned int sendWindowsFriendlyAttachments:2;
        unsigned int contentsWasEditedByUser:1;
        unsigned int delegateRespondsToDidChange:1;
        unsigned int delegateRespondsToDidAppendMessage:1;
        unsigned int delegateRespondsToDidSaveMessage:1;
        unsigned int delegateRespondsToShouldSaveMessage:1;
        unsigned int delegateRespondsToShouldDeliverMessage:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForMissingCertificatesForRecipients:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForEncryptionError:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForError:1;
        unsigned int signIfPossible:1;
        unsigned int encryptIfPossible:1;
        unsigned int preferredEncoding;
    } _flags;
    NSString *_contentForAddressBookUpdate;
    NSString *_vcardPathForAddressBookUpdate;
}

- (void)dealloc;
- (id)init;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (BOOL)hasChanges;
- (void)setHasChanges:(BOOL)fp8;
- (id)undoManager;
- (void)setUndoManager:(id)fp8;
- (void)setType:(int)fp8;
- (int)type;
- (void)setIsUndeliverable:(BOOL)fp8;
- (BOOL)isUndeliverable;
- (BOOL)sendWindowsFriendlyAttachments;
- (void)setSendWindowsFriendlyAttachments:(BOOL)fp8;
- (void)_configureLastDraftInformationFromHeaders:(id)fp8;
- (id)originalMessage;
- (void)setOriginalMessage:(id)fp8;
- (id)directoryForAttachment:(id)fp8;
- (id)message;
- (id)account;
- (id)deliveryAccount;
- (id)sender;
- (void)setSender:(id)fp8;
- (id)subject;
- (void)setSubject:(id)fp8;
- (id)messageID;
- (void)setShowAllHeaders:(BOOL)fp8;
- (void)setEncodingType:(id)fp8;
- (id)encodingType;
- (id)defaultTextAttributes;
- (id)messageContents;
- (id)messageContentsForInitialText:(id)fp8;
- (void)setMessageContents:(id)fp8;
- (id)_findSignatureInAttributedString:(id)fp8;
- (id)signatureName;
- (id)signature;
- (void)setSignature:(id)fp8;
- (void)addHeaders:(id)fp8;
- (id)addressListForHeader:(id)fp8;
- (void)setAddressList:(id)fp8 forHeader:(id)fp12;
- (void)insertAddress:(id)fp8 forHeader:(id)fp12 atIndex:(unsigned int)fp16;
- (void)removeAddressForHeader:(id)fp8 atIndex:(unsigned int)fp12;
- (BOOL)isAddressHeaderKey:(id)fp8;
- (BOOL)deliverMessage;
- (BOOL)isDeliveringMessage;
- (void)_synchronouslyAppendMessageToOutbox:(id)fp8;
- (void)_backgroundAppendEnded:(id)fp8;
- (void)_backgroundSaveEnded:(id)fp8;
- (BOOL)saveMessage;
- (BOOL)isSavingMessage;
- (void)removeLastDraft;
- (id)lastMessageID;
- (void)setSignIfPossible:(BOOL)fp8;
- (void)setEncryptIfPossible:(BOOL)fp8;
- (id)allRecipients;
- (unsigned long)preferredEncoding;
- (void)setPreferredEncoding:(unsigned long)fp8;
- (BOOL)canSign;
- (BOOL)canEncryptForAllRecipients;

@end

@interface ComposeBackEnd (Internal)
- (void)_textStorageChanged:(id)fp8;
- (void)_setupDefaultRecipientsFromOriginalMessage:(id)fp8;
- (void)_saveMessageSynchronously:(id)fp8;
- (id)_allRecipients;
- (id)_recipientsThatHaveNoKeyForEncryption;
- (void)saveRecipients;
- (id)replyAddressForMessage:(id)fp8;
@end

@interface AddressTextField : AutosizingTextField <NSCopying>
{
    BOOL _addressField;
    BOOL _allowsMultipleAddresses;
    NSMutableArray *trackingRectTags;
    AddressAttachment *expandedAtomAttachment;
    AddressAttachment *attachmentBeingDragged;
    int addressAtomType;
    NSUndoManager *undoManager;
    NSMutableArray *stringsWithNoRecords;
    NSMutableArray *stringsAwaitingRecords;
    NSMutableDictionary *recordsForStrings;
    NSMutableArray *addressRects;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)insertInScrollViewWithMaxLines:(unsigned int)fp8;
- (void)_scrollToEnd:(id)fp8;
- (void)appendAddressList:(id)fp8;
- (unsigned int)insertionPositionForMousePoint:(struct _NSPoint)fp8;
- (void)getAddressRectsForAtoms;
- (id)emailAddressesFromABRecordUIDs:(id)fp8;
- (id)emailAddressesFromFiles:(id)fp8;
- (void)setAddressField:(BOOL)fp8;
- (BOOL)addressField;
- (BOOL)allowsMultipleAddresses;
- (void)setAllowsMultipleAddresses:(BOOL)fp8;
- (int)addressAtomType;
- (void)setAddressAtomType:(int)fp8;
- (void)setExpandedAtomAttachment:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (unsigned int)textView:(id)fp8 draggingEntered:(id)fp12;
- (unsigned int)textView:(id)fp8 draggingUpdated:(id)fp12;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (void)textView:(id)fp8 clickedOnCell:(id)fp12 event:(id)fp16 inRect:(struct _NSRect)fp20 atIndex:(unsigned int)fp36;
- (void)selectTextBeforePosition:(int)fp8;
- (void)selectTextAfterPosition:(int)fp8;
- (void)textView:(id)fp8 doubleClickedOnCell:(id)fp12 inRect:(struct _NSRect)fp16 atIndex:(unsigned int)fp32;
- (void)expandGroupAddress:(id)fp8;
- (void)editAddress:(id)fp8;
- (void)removeAddress:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (BOOL)_performDragOperationUsingPasteboard:(id)fp8 sender:(id)fp12;
- (BOOL)performDragOperation:(id)fp8;
- (BOOL)textView:(id)fp8 shouldReadSelectionFromPasteboard:(id)fp12 type:(id)fp16 result:(char *)fp20;
- (void)textView:(id)fp8 draggedImage:(id)fp12 endedAt:(struct _NSPoint)fp16 operation:(unsigned int)fp24;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (void)setAttachmentBeingDragged:(id)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)textView:(id)fp8 concludeDragOperation:(id)fp12;
- (void)undo:(id)fp8;
- (void)redo:(id)fp8;
- (id)undoManager;
- (void)setAttributedStringValue:(id)fp8;
- (void)textDidEndEditing:(id)fp8;
- (BOOL)textShouldEndEditing:(id)fp8;
- (void)setFrame:(struct _NSRect)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)atomicizeAllAddresses;
- (void)domainForMatchingDidChange;
- (void)addressesNeedRedisplay:(id)fp8;
- (void)addressChanged:(id)fp8;
- (void)resetCursorRects;

@end

@interface NSTextFieldCell (ShouldntTheAppKitBeDoingThis)
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (id)accessibilityAttributeValue:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
@end

@interface MailboxesController : NSObject
{
    NSMutableArray *_accountsWithChildren;
    NSWindow *_newMailboxPanel;
    NSTextField *_newMailboxField;
    NSTextField *_newMailboxMessage;
    NSButton *_newMailboxOKButton;
    NSPopUpButton *_accountPopup;
    id _currentMailboxSelectionOwner;
    BOOL _currentTransferIsCopy;
    MailboxUid *_selectedParent;
    MailboxUid *_currentTransferMailbox;
}

- (id)init;
- (void)dealloc;
- (void)awakeFromNib;
- (void)setMoveMenuItem:(id)fp8;
- (void)setMoveContextMenuItem:(id)fp8;
- (void)setCopyMenuItem:(id)fp8;
- (void)setCopyContextMenuItem:(id)fp8;
- (void)readDefaults;
- (void)saveDefaults;
- (id)accountsWithChildren;
- (void)_reloadAccountsWithChildren;
- (void)mailboxListingDidChange:(id)fp8;
- (void)setCurrentTransferMailbox:(id)fp8 deletedOriginals:(BOOL)fp12;
- (id)currentTransferMailbox;
- (BOOL)currentTransferDeletesOriginals;
- (id)mailboxSelectionOwner;
- (void)setMailboxSelectionOwnerFrom:(id)fp8;
- (void)resignMailboxSelectionOwnerFor:(id)fp8;
- (id)mailboxSelectionOwnerFromSender:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)_synchronouslyCreateNewMailboxWithName:(id)fp8 parent:(id)fp12;
- (void)_configureNewMailboxPanelForAccount:(id)fp8;
- (void)newMailbox:(id)fp8;
- (void)newFolder:(id)fp8;
- (void)accountPopupChanged:(id)fp8;
- (void)_synchronouslyDeleteMailboxes:(id)fp8;
- (void)deleteMailbox:(id)fp8;
- (void)_synchronouslySetName:(id)fp8 andParent:(id)fp12 forMailboxes:(id)fp16;
- (void)renameMailbox:(id)fp8;
- (void)userEditedMailboxName:(id)fp8;
- (void)exportMailbox:(id)fp8;
- (void)setSpecialMailbox:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (void)okClicked:(id)fp8;
- (void)cancelClicked:(id)fp8;
- (void)bringUpTransferMenu:(id)fp8;
- (void)_setRootMailboxMenu:(id)fp8;
- (void)menuNeedsUpdate:(id)fp8;
- (BOOL)menuHasKeyEquivalent:(id)fp8 forEvent:(id)fp12 target:(id *)fp16 action:(SEL *)fp20;
- (void)_removeAllItemsFromMenu:(id)fp8;
- (void)_tearDownDynamicMenus;
- (void)_addMailboxItemsToMenu:(id)fp8 startingFromMailbox:(id)fp12;
- (void)_addItemsStartingWithMailbox:(id)fp8 toMenu:(id)fp12 withIndentationLevel:(int)fp16;
- (void)addMailboxItemsToMenu:(id)fp8 target:(id)fp12 action:(SEL)fp16;
- (BOOL)moveAccount:(id)fp8 toAfterAccount:(id)fp12;
- (BOOL)fileManager:(id)fp8 shouldProceedAfterError:(id)fp12;
- (BOOL)removeAccount:(id)fp8;
- (BOOL)moveMailboxes:(id)fp8 toParentMailbox:(id)fp12;
- (void)_synchronouslyCopyMailboxes:(id)fp8 toParent:(id)fp12 originalParent:(id)fp16;
- (BOOL)copyMailboxes:(id)fp8 toParentMailbox:(id)fp12;

@end

@interface MailboxesOutlineViewOwner : NSObject <MVMailboxSelectionOwner>
{
    id _delegate;
    ASExtendedOutlineView *_outlineView;
    NSArray *_savedSelection;
    NSFont *_normalFont;
    NSFont *_boldFont;
    NSMutableAttributedString *_cellValue;
}

- (id)init;
- (void)dealloc;
- (void)setOutlineView:(id)fp8;
- (void)setDelegate:(id)fp8;
- (id)selectedMailbox;
- (id)selectedMailboxes;
- (int)selectionCount;
- (void)selectPathsToMailboxes:(id)fp8;
- (void)revealMailbox:(id)fp8;
- (void)_revealPathToMailbox:(id)fp8 andSelect:(BOOL)fp12 extendingSelection:(BOOL)fp16;
- (BOOL)mailboxIsExpanded:(id)fp8;
- (unsigned int)numberOfSpecialMailboxes;
- (id)outlineView:(id)fp8 child:(int)fp12 ofItem:(id)fp16;
- (BOOL)outlineView:(id)fp8 isItemExpandable:(id)fp12;
- (int)outlineView:(id)fp8 numberOfChildrenOfItem:(id)fp12;
- (BOOL)outlineView:(id)fp8 shouldExpandItem:(id)fp12;
- (id)_iconForMailboxUid:(id)fp8;
- (id)iconForMailboxUid:(id)fp8 smallSize:(BOOL)fp12;
- (void)editNameOfMailbox:(id)fp8;
- (BOOL)outlineView:(id)fp8 shouldEditTableColumn:(id)fp12 item:(id)fp16;
- (void)controlTextDidEndEditing:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (id)outlineView:(id)fp8 objectValueForTableColumn:(id)fp12 byItem:(id)fp16;
- (id)outlineView:(id)fp8 persistentObjectForItem:(id)fp12;
- (id)outlineView:(id)fp8 itemForPersistentObject:(id)fp12;
- (int)outlineView:(id)fp8 heightOfRow:(int)fp12;
- (BOOL)_isMailboxOffline:(id)fp8 level:(int)fp12 alertState:(int *)fp16;
- (void)_configureCell:(id)fp8 forMailboxUid:(id)fp12 forTableColumn:(id)fp16;
- (void)outlineView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 item:(id)fp20;
- (unsigned int)outlineView:(id)fp8 draggingSourceOperationMaskForLocal:(BOOL)fp12;
- (void)outlineView:(id)fp8 didEndDragWithImage:(id)fp12 atPoint:(struct _NSPoint)fp16 operation:(unsigned int)fp24;
- (BOOL)outlineView:(id)fp8 writeItems:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)outlineView:(id)fp8 validateDrop:(id)fp12 proposedItem:(id)fp16 proposedChildIndex:(int)fp20;
- (BOOL)outlineView:(id)fp8 acceptDrop:(id)fp12 item:(id)fp16 childIndex:(int)fp20;
- (void)outlineViewSelectionDidChange:(id)fp8;
- (void)outlineViewItemDidExpand:(id)fp8;
- (void)outlineViewItemDidCollapse:(id)fp8;
- (BOOL)areThereAnyUnreadMessagesInItem:(id)fp8;
- (BOOL)outlineView:(id)fp8 shouldTrackMouseInCell:(id)fp12 forTableColumn:(id)fp16 item:(id)fp20;
- (void)showOfflineStatus:(id)fp8;
- (void)offlineAlertSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)unreadCountChanged:(id)fp8;
- (void)_reloadChildrenOfMailboxUid:(id)fp8;
- (void)mailboxListingDidChange:(id)fp8;
- (void)accountOfflineStatusDidChange:(id)fp8;
- (void)accountsChanged:(id)fp8;
- (void)viewerPreferencesChanged:(id)fp8;
- (BOOL)outlineView:(id)fp8 shouldCollapseAutoExpandedItemsForDeposited:(BOOL)fp12;
- (void)readDefaultsFromDictionary:(id)fp8;
- (void)writeDefaultsToDictionary:(id)fp8;
- (id)outlineView:(id)fp8 toolTipForItem:(id)fp12 inTrackingRect:(BOOL)fp16 forCell:(id)fp20;

@end

@interface EditingTableColumn : NSTableColumn
{
    int rowBeingEdited;
}

- (void)awakeFromNib;
- (void)beginEditingRow:(int)fp8;
- (void)endEditing;
- (int)rowBeingEdited;
- (id)dataCellForRow:(int)fp8;

@end

@interface ImageTextFieldAlertTrackingCell : NSTextFieldCell
{
    NSImage *_image;
    struct MVAlertStateImageNames *_alertImages;
    BOOL _isRolledOver;
    BOOL _isClickedOn;
    BOOL _useLargeIconsIfPossible;
    struct _NSRect _trackingRect;
    int _alertState;
}

- (id)initImageCell:(id)fp8;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)setImage:(id)fp8;
- (id)image;
- (BOOL)hasAlertImages;
- (void)setAlertStateImages:(struct MVAlertStateImageNames)fp8 forAlertState:(int)fp40;
- (void)setAlertState:(int)fp8;
- (int)alertState;
- (void)setIsRolledOver:(BOOL)fp8;
- (BOOL)isRolledOver;
- (void)setAllowLargeIcons:(BOOL)fp8;
- (id)_textAttributes;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)editWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 event:(id)fp36;
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)continueTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24;
- (void)_sendActionFrom:(id)fp8;
- (struct _NSRect)trackingRectForCellFrame:(struct _NSRect)fp8;

@end

@interface NSWindow (DrawerHelper)
- (id)_parentWindow;
@end

@interface FontsAndColorsPreferences : NSPreferencesModule
{
    NSPopUpButton *listFontPopup;
    NSComboBox *listFontSizePopup;
    NSPopUpButton *messageFontPopup;
    NSComboBox *messageFontSizePopup;
    NSPopUpButton *fixedPitchFontPopup;
    NSComboBox *fixedPitchFontSizePopup;
    NSButton *fixedPitchSwitch;
    NSPopUpButton *colorPopupOne;
    NSPopUpButton *colorPopupTwo;
    NSPopUpButton *colorPopupThree;
    NSPopUpButton *lastColorPopupSelected;
    NSButton *colorQuotesButton;
    NSTextView *exampleTextView;
    NSArray *colorList;
    BOOL colorizeIncomingMail;
}

- (void)initializeFromDefaults;
- (void)_setFontMenuForPopup:(id)fp8 fixedPitchOnly:(BOOL)fp12;
- (BOOL)isResizable;
- (id)titleForIdentifier:(id)fp8;
- (void)awakeFromNib;
- (void)useFixedPitchFontClicked:(id)fp8;
- (void)_setOtherColor:(id)fp8 forPopup:(id)fp12;
- (void)_setColor:(id)fp8 forPopup:(id)fp12;
- (void)_updateExampleColors;
- (void)_updateColorList;
- (void)colorQuotesButtonClicked:(id)fp8;
- (void)colorPopupChanged:(id)fp8;
- (void)colorPicked:(id)fp8;
- (BOOL)_setTitle:(id)fp8 forPopup:(id)fp12;
- (void)_setTitle:(id)fp8 forComboBox:(id)fp12;
- (void)listFontChanged:(id)fp8;
- (void)listFontSizeChanged:(id)fp8;
- (void)messageFontChanged:(id)fp8;
- (void)setMessageFont:(id)fp8 size:(float)fp12;
- (void)setFixedPitchFont:(id)fp8 size:(float)fp12;
- (void)fixedPitchFontChanged:(id)fp8;
- (void)fontPopupChanged:(id)fp8;

@end

@interface MailApp (AppleScriptFontsAndColorsPreferences)
- (BOOL)colorQuotedText;
- (void)setColorQuotedText:(BOOL)fp8;
- (id)messageListFont;
- (void)setMessageListFont:(id)fp8;
- (float)messageListFontSize;
- (void)setMessageListFontSize:(float)fp8;
- (id)messageFont;
- (void)setMessageFont:(id)fp8;
- (float)messageFontSize;
- (void)setMessageFontSize:(float)fp8;
- (BOOL)useFixedWidthFont;
- (void)setUseFixedWidthFont:(BOOL)fp8;
- (id)fixedWidthFont;
- (void)setFixedWidthFont:(id)fp8;
- (float)fixedWidthFontSize;
- (void)setFixedWidthFontSize:(float)fp8;
- (void)setQuotingColor:(int)fp8 forLevel:(int)fp12;
- (int)quotingColorForLevel:(int)fp8;
- (int)quotingColorValue:(id)fp8;
- (int)levelOneQuotingColor;
- (void)setLevelOneQuotingColor:(int)fp8;
- (int)levelTwoQuotingColor;
- (void)setLevelTwoQuotingColor:(int)fp8;
- (int)levelThreeQuotingColor;
- (void)setLevelThreeQuotingColor:(int)fp8;
@end

@interface ComposingPreferences : NSPreferencesModule
{
    NSPopUpButton *defaultFormatButton;
    NSButton *alwaysCCMyselfSwitch;
    NSPopUpButton *ccOrBccButton;
    NSButton *replyUsingSameFormatSwitch;
    NSButton *expandAliasesSwitch;
    NSButton *useQuoteBarsSwitch;
    NSButton *inlineSpellCheckingSwitch;
    NSButton *replyQuotingSwitch;
    NSMatrix *quotingBehaviorMatrix;
    NSTextField *quotingBehaviorLabel;
    NSButton *matchDomainsSwitch;
    NSTextField *matchingDomainField;
    NSButton *useAddressCompletionSwitch;
    NSButton *editServerListButton;
    NSPanel *ldapServerPanel;
    NSView *placeHolderView;
    ABLDAP_ConfigController *serverListController;
    BOOL endEditingSimply;
}

- (BOOL)isResizable;
- (id)titleForIdentifier:(id)fp8;
- (void)_postComposePreferencesChanged;
- (void)initializeFromDefaults;
- (void)replyUsingSameFormatClicked:(id)fp8;
- (void)useQuoteBarsClicked:(id)fp8;
- (void)replyQuotingBehaviorChanged:(id)fp8;
- (void)quotingBehaviorChanged:(id)fp8;
- (void)checkSpellingClicked:(id)fp8;
- (void)alwaysCCMyselfClicked:(id)fp8;
- (void)expandAliasesClicked:(id)fp8;
- (void)defaultMessageFormatChanged:(id)fp8;
- (void)setMessageFormat:(int)fp8;
- (void)useAddressCompletionClicked:(id)fp8;
- (void)editServerListClicked:(id)fp8;
- (void)matchDomainsClicked:(id)fp8;
- (void)controlTextDidEndEditing:(id)fp8;
- (void)okClicked:(id)fp8;

@end

@interface MailApp (ApplescriptComposingPreferences)
- (int)defaultMessageFormat;
- (void)setDefaultMessageFormat:(int)fp8;
- (BOOL)autosaveComposeWindows;
- (void)setAutosaveComposeWindows:(BOOL)fp8;
- (BOOL)inlineSpellCheckingEnabled;
- (void)setInlineSpellCheckingEnabled:(BOOL)fp8;
- (BOOL)expandGroupAddresses;
- (void)setExpandGroupAddresses:(BOOL)fp8;
- (BOOL)useAddressCompletion;
- (void)setUseAddressCompletion:(BOOL)fp8;
- (id)ldapServerNamed:(id)fp8;
- (id)ldapServers;
- (void)insertInLdapServers:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInLdapServers:(id)fp8;
- (void)removeFromLdapServersAtIndex:(unsigned int)fp8;
- (BOOL)replyInSameFormat;
- (void)setReplyInSameFormat:(BOOL)fp8;
- (BOOL)alwaysCCMyself;
- (void)setAlwaysCCMyself:(BOOL)fp8;
- (BOOL)alwaysBCCMyself;
- (void)setAlwaysBCCMyself:(BOOL)fp8;
- (BOOL)includeOriginalMessage;
- (void)setIncludeOriginalMessage:(BOOL)fp8;
- (BOOL)includeAllOfOriginalMessage;
- (void)setIncludeAllOfOriginalMessage:(BOOL)fp8;
- (BOOL)shouldCheckIntranetDomains;
- (BOOL)signOutgoingMessages;
- (void)setSignOutgoingMessages:(BOOL)fp8;
- (BOOL)encryptOutgoingMessages;
- (void)setEncryptOutgoingMessages:(BOOL)fp8;
- (id)intranetDomains;
- (void)setShouldCheckIntranetDomains:(BOOL)fp8 withString:(id)fp12;
@end

@interface ViewerPreferences : NSPreferencesModule
{
    NSButton *_highlightThreadCheckbox;
    NSColorWell *_threadHighlightColorWell;
    NSButton *loadURLsSwitch;
    NSButton *showPresenceSwitch;
    NSPopUpButton *headerDetailPopup;
    NSTableView *customHeaderTable;
    NSTextField *newHeaderField;
    NSButton *addHeaderButton;
    NSButton *removeHeaderButton;
    NSPanel *customHeaderPanel;
    NSMutableArray *filteredHeaders;
    int nextRowToSelectAfterEditing;
}

+ (void)postViewingPreferencesChanged;
+ (void)postPresencePreferenceChanged;
- (BOOL)isResizable;
- (id)titleForIdentifier:(id)fp8;
- (void)initializeFromDefaults;
- (void)loadURLsClicked:(id)fp8;
- (void)showPresenceClicked:(id)fp8;
- (void)editCustomHeadersClicked;
- (void)_customHeaderSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)okClicked:(id)fp8;
- (void)cancelClicked:(id)fp8;
- (void)_updateCustomHeaderUI;
- (void)removeHeaderClicked:(id)fp8;
- (void)addHeaderClicked:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)headerDetailLevelChanged:(id)fp8;
- (void)highlightThreadClicked:(id)fp8;
- (void)threadHighlightColorChanged:(id)fp8;

@end

@interface MailApp (ApplescriptViewerPreferences)
- (BOOL)downloadHTMLAttachments;
- (void)setDownloadHTMLAttachments:(BOOL)fp8;
- (int)headerDetail;
- (void)setHeaderDetail:(int)fp8;
- (BOOL)shouldShowPresence;
- (void)setShouldShowPresence:(BOOL)fp8;
- (BOOL)shouldHighlightThreads;
- (void)setShouldHighlightThreads:(BOOL)fp8;
@end

@interface AccountPreferences : NSPreferencesModule
{
    NSMutableArray *_accounts;
    AccountDetails *_accountDetails;
    NSTabView *detailTabView;
    NSTableView *accountsTable;
    NSButton *createAccountButton;
    NSButton *removeAccountButton;
    NSPopUpButton *accountTypePopup;
    NSTextField *accountTypeString;
    NSTextField *accountName;
    NSTextField *fullNameField;
    NSTextField *emailAddressField;
    NSTextField *username;
    NSTextField *hostname;
    NSTextField *password;
    NSPopUpButton *smtpAccountPopup;
    NSButton *deliveryOptionsButton;
    NSButton *removeDeliveryAccountButton;
    NSTableView *deliveryAccountsTable;
    NSPanel *editDeliveryAccountPanel;
    NSView *localSpecialMailboxesView;
    NSView *imapSpecialMailboxesView;
    NSView *outlookWebAccessView;
    NSTextField *outlookWebAccessServerName;
    MailAccount *_accountBeingEdited;
    MailAccount *_accountBeingValidated;
    BOOL _accountBeingEditedWasEnabledWhenEditingStarted;
    BOOL _creatingNewAccount;
    int _indexOfNewAccount;
    struct {
        unsigned int userWantsToQuit:1;
        unsigned int userWantsToClosePrefsPanel:1;
        unsigned int userWantsToChangeSelection:1;
        unsigned int userWantsToCreateNewAccount:1;
    } _flags;
    NSIndexSet *_selectedRows;
    NSString *_selectedToolbarIdentifier;
    BOOL _ignoreTableViewSelectionCallbacks;
    BOOL _registeredForNotifications;
}

+ (void)addAccountType:(id)fp8 className:(id)fp12;
+ (BOOL)_exchangeAccountExists;
- (id)titleForIdentifier:(id)fp8;
- (void)awakeFromNib;
- (void)accountsDidChange:(id)fp8;
- (void)initializeFromDefaults;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (void)moduleWasInstalled;
- (BOOL)moduleCanBeRemoved;
- (BOOL)preferencesWindowShouldClose;
- (void)_saveAccountInfo;
- (void)toggleAccountEnabled:(id)fp8;
- (void)toggleIncludeWhenCheckingForNewMail:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)createNewAccount:(id)fp8;
- (void)_removeAccountBeingCreated;
- (void)editAccount:(id)fp8;
- (void)editMailAccount:(id)fp8;
- (void)removeAccountSheetDidEnd:(id)fp8 returnCode:(int)fp12 account:(id)fp16;
- (void)removeAccount:(id)fp8;
- (BOOL)isAccountInformationDirty;
- (void)_handleRequestToSwitchAwayFromSelectedAccountWithResponse:(BOOL)fp8;
- (BOOL)saveAccountSheetDidEnd:(id)fp8 returnCode:(int)fp12 context:(void *)fp16;
- (BOOL)allowSwitchingAwayFromSelectedAccount;
- (void)setUIElementsEnabled:(BOOL)fp8;
- (void)_clearAccountUI;
- (void)_reloadDeliveryAccountPopup:(id)fp8;
- (void)_setupUIForAccountBeingEdited;
- (void)_runAccountDetailPanelForAccount:(id)fp8;
- (void)saveAccountBeingEdited;
- (void)tabView:(id)fp8 didSelectTabViewItem:(id)fp12;
- (void)_setupAccountFromValuesInUI:(id)fp8 forValidation:(BOOL)fp12;
- (id)_accountClassNameOfSelectedItemInAccountTypePopup;
- (void)_updateAccountTypePopup;
- (BOOL)newSettingsAreValid;
- (void)accountTypeChanged:(id)fp8;
- (id)_accountsCurrentlyUsingDeliveryAccount:(id)fp8;
- (void)changeDeliveryOptions:(id)fp8;
- (void)addDeliveryAccount:(id)fp8;
- (void)editDeliveryAccountList:(id)fp8;
- (void)removeDeliveryAccount:(id)fp8;
- (void)doneEditingDeliveryAccountList:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (BOOL)selectionShouldChangeInTableView:(id)fp8;
- (void)tableViewSelectionDidChange:(id)fp8;
- (BOOL)tableView:(id)fp8 writeRows:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(int)fp20;
- (void)controlTextDidChange:(id)fp8;

@end

@interface MailApp (ApplescriptAccountPreferences)
- (void)_insertInAccounts:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInAccounts:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInAccounts:(id)fp8;
- (void)insertInIToolsAccounts:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInIToolsAccounts:(id)fp8;
- (void)insertInImapAccounts:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInImapAccounts:(id)fp8;
- (void)insertInPopAccounts:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInPopAccounts:(id)fp8;
- (void)removeFromAccountsAtIndex:(unsigned int)fp8;
- (id)deliveryAccounts;
@end

@interface IMAPAccountDetails : AccountDetails
{
    NSButton *_compactWhenClosing;
    NSPopUpButton *_messageCaching;
    NSTextField *_serverPathPrefix;
    NSButton *_overaggressiveCaching;
    BOOL warnedAboutCachingAndIndexing;
    NSButton *_keepDraftsOnServer;
    NSButton *_keepSentMessagesOnServer;
    NSButton *_keepTrashOnServer;
    NSButton *_keepJunkOnServer;
}

- (Class)accountClass;
- (BOOL)allowsServerBasedSpecialMailboxes;
- (void)setupUIFromValuesInAccount:(id)fp8;
- (void)setupAccountFromValuesInUI:(id)fp8 forValidation:(BOOL)fp12;
- (void)setupAccountFromValuesInSpecialMailboxesUI:(id)fp8;
- (void)setUIElementsEnabled:(BOOL)fp8;
- (BOOL)isAccountInformationDirty:(id)fp8;
- (void)setupSpecialMailboxesUI:(id)fp8 fromValuesInAccount:(id)fp12;
- (void)didDisplayTabViewItem:(id)fp8;
- (void)cachePolicyChanged:(id)fp8;
- (void)moveToTrashClicked:(id)fp8;

@end

@interface AccountDetails : NSObject
{
    NSView *_detailView;
    NSButton *_enableAccountCheckbox;
    NSTextField *_directory;
    NSButton *_chooseDirectoryButton;
    NSTextField *_portNumberField;
    NSButton *_autoFetch;
    NSButton *_sslSwitch;
    NSPopUpButton *_authenticationPopup;
    NSPopUpButton *_sentMessagesAgePopup;
    NSPopUpButton *_junkAgePopup;
    NSPopUpButton *_trashAgePopup;
    NSButton *_trashCheckbox;
    MailAccount *_account;
    AuthScheme *_authScheme;
}

+ (id)accountDetailsForAccountClassNamed:(id)fp8;
+ (id)accountDetailsNibName;
- (void)dealloc;
- (Class)accountClass;
- (void)setupAccountFromValuesInUI:(id)fp8 forValidation:(BOOL)fp12;
- (void)setupUIFromValuesInAccount:(id)fp8;
- (void)setUIElementsEnabled:(BOOL)fp8;
- (id)detailView;
- (void)setupAccountFromValuesInSpecialMailboxesUI:(id)fp8;
- (BOOL)isAccountInformationDirty:(id)fp8;
- (void)setupSpecialMailboxesUI:(id)fp8 fromValuesInAccount:(id)fp12;
- (void)didDisplayTabViewItem:(id)fp8;
- (void)openAccountPathDialog:(id)fp8;
- (void)accountPathDialogDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (id)accountPath;
- (void)setAccountPath:(id)fp8;
- (BOOL)userWantsAccountActive;
- (void)sslChanged:(id)fp8;
- (void)authenticationChanged:(id)fp8;
- (BOOL)allowsServerBasedSpecialMailboxes;
- (void)moveToTrashClicked:(id)fp8;

@end

@interface POPAccountDetails : AccountDetails
{
    NSButton *_deleteMessagesOnServer;
    NSTextField *_bigMessageWarningSize;
    NSButton *_removeSeenMessagesButton;
    NSPopUpButton *_removeIntervalPopup;
    ActivityMonitor *_deleteMessagesMonitor;
    BOOL _deleteObserverActive;
}

- (id)init;
- (Class)accountClass;
- (void)setupUIFromValuesInAccount:(id)fp8;
- (void)setUIElementsEnabled:(BOOL)fp8;
- (int)_popDeletionPolicyFromUI;
- (void)setupAccountFromValuesInUI:(id)fp8 forValidation:(BOOL)fp12;
- (BOOL)isAccountInformationDirty:(id)fp8;
- (void)warnIfDeleteMessages:(id)fp8;
- (void)deleteSeenMessagesNow:(id)fp8;
- (void)removeMessagesButtonClicked:(id)fp8;
- (void)_deleteServerMessagesCompleted:(id)fp8;

@end

@interface SignatureBundle : MVMailBundle
{
    Signature *_lastDefaultSignature;
    BOOL _isDirty;
}

+ (void)initialize;
+ (id)_oldSignaturesPath;
+ (id)signaturesPath;
- (id)init;
- (id)signatures;
- (void)signatureDidChange;
- (unsigned int)numberOfSignatures;
- (id)signatureAtIndex:(int)fp8;
- (void)removeSignatureAtIndex:(int)fp8;
- (void)insertSignature:(id)fp8 atIndex:(int)fp12;
- (void)addSignature:(id)fp8;
- (void)saveChangesToDisk;
- (void)setDefaultSignature:(id)fp8;
- (id)defaultSignature;
- (int)signatureSelectionMethod;
- (void)setSignatureSelectionMethod:(int)fp8;
- (id)activeSignatureWithName:(id)fp8;
- (BOOL)showComposeAccessoryView;
- (void)setShowsComposeAccessoryView:(BOOL)fp8;
- (BOOL)placeSignatureAboveQuotedText;
- (void)setPlaceSignatureAboveQuotedText:(BOOL)fp8;
- (void)configurePopUpButton:(id)fp8 usingSignatures:(id)fp12 defaultSignature:(id)fp16 selectionMethod:(int)fp20;

@end

@interface SignaturePreferences : NSPreferencesModule
{
    NSTableView *_signaturesTable;
    NSPopUpButton *_selectPopup;
    NSPanel *_signatureDetailPanel;
    NSButton *_showPopupOnCompose;
    NSTextField *_signatureName;
    MessageTextView *_richTextSignature;
    NSButton *_makePlainTextButton;
    NSButton *_addButton;
    NSButton *_editButton;
    NSButton *_duplicateButton;
    NSButton *_removeButton;
    NSButton *_placeSignatureAboveQuote;
    Signature *_signatureBeingEdited;
}

- (void)dealloc;
- (id)titleForIdentifier:(id)fp8;
- (void)_validateButtonState;
- (id)imageForPreferenceNamed:(id)fp8;
- (void)selectedSignatureChanged:(id)fp8;
- (void)initializeFromDefaults;
- (void)saveChanges;
- (void)awakeFromNib;
- (void)createSignature:(id)fp8;
- (void)duplicateSignature:(id)fp8;
- (void)editSignature:(id)fp8;
- (void)removeSignatureSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)removeSignature:(id)fp8;
- (void)_showSignatureDetailForAccountBeingEdited;
- (void)_runSignatureDetailPanelForSignature:(id)fp8;
- (void)_signatureDetailSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)makePlainTextClicked:(id)fp8;
- (void)textDidChange:(id)fp8;
- (void)handleEnterKey:(id)fp8;
- (void)_updatePopup;
- (void)showSignaturePopupOnComposeWindow:(id)fp8;
- (void)placeSignatureAboveQuotedText:(id)fp8;
- (BOOL)_validateValuesInUI;
- (void)okClicked:(id)fp8;
- (void)cancelClicked:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableViewSelectionDidChange:(id)fp8;
- (BOOL)tableView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (BOOL)tableView:(id)fp8 writeRows:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(int)fp20;

@end

@interface MailApp (ApplescriptSignaturePreferences)
- (id)signatures;
- (BOOL)chooseSignatureWhenComposing;
- (void)setChooseSignatureWhenComposing:(BOOL)fp8;
- (id)selectedSignature;
- (void)setSelectedSignature:(id)fp8;
@end

@interface StartupManager : NSObject
{
    NSPanel *_panel;
    NSPopUpButton *_accountType;
    NSTextField *_emailAddress;
    NSTextField *_fullNameField;
    NSTextField *_hostname;
    NSTextField *_username;
    NSTextField *_password;
    NSTextField *_smtp;
    NSTextField *_outlookServer;
    NSView *_outlookServerLabel;
    NSTextField *_okButton;
    NSTextField *_cancelButton;
    NSTextField *_statusLine;
    NSProgressIndicator *_progressIndicator;
    BOOL _accountConnectionSucceeded;
    BOOL _accountLoginSucceeded;
}

+ (id)sharedManager;
- (void)_hideStatus;
- (void)_showStatus:(id)fp8;
- (BOOL)_setupAccountType:(int)fp8 hostname:(id)fp12 username:(id)fp16 password:(id)fp20 emailAddress:(id)fp24 fullUserName:(id)fp28 smtp:(id)fp32 outlookWebSever:(id)fp36;
- (BOOL)_validateAccount:(id)fp8;
- (BOOL)_validateValuesInUI;
- (void)okButtonClicked:(id)fp8;
- (void)cancelButtonClicked:(id)fp8;
- (void)userChoseAccountType:(id)fp8;
- (BOOL)runStartupPanel;
- (id)_meCardFromMacBuddyPlistFile;
- (BOOL)setupAccounts;

@end

@interface MailSorterPreferences : NSPreferencesModule
{
    NSTableView *rulesTable;
    NSButton *createButton;
    NSButton *editButton;
    NSButton *duplicateButton;
    NSButton *removeButton;
    NSPanel *_headerListPanel;
    NSTableView *_headerListTable;
    NSTextField *newHeaderField;
    NSButton *addHeaderButton;
    NSButton *removeHeaderButton;
    NSPanel *ruleDetailPanel;
    NSTextField *ruleNameField;
    id loadedView;
    id expressionNumberView;
    NSMutableArray *_criteriaViews;
    NSMutableArray *_criteriaGuesses;
    NSMutableArray *_actionViews;
    NSScrollView *_criteriaContainer;
    NSPopUpButton *_allCriteriaMustBeMetPopup;
    NSTextField *_performActionLabel;
    NSMenu *_actionMenu;
    NSScrollView *_actionContainer;
    NSView *_soundActionView;
    NSView *_colorActionView;
    NSView *_transferActionView;
    NSView *_copyActionView;
    NSView *_autoReplyActionView;
    NSView *_autoForwardActionView;
    NSView *_autoRedirectActionView;
    NSView *_markDeletedActionView;
    NSView *_markAsReadActionView;
    NSView *_markAsFlaggedActionView;
    NSView *_stopEvaluatingRulesActionView;
    NSView *_runAppleScriptActionView;
    NSView *_notifyUserActionView;
    NSPopUpButton *colorPopup;
    NSPopUpButton *colorStylePopup;
    SoundPopUpButton *soundPopup;
    AddressTextField *_forwardRecipientsField;
    AddressTextField *_redirectRecipientsField;
    NSPanel *responseMessageTextPanel;
    NSTextView *responseMessageTextView;
    NSTextField *appleScriptPathField;
    OldCompletionController *completionController;
    MailboxesChooser *destinationChooser;
    MailboxesChooser *copyDestinationChooser;
    NSMenu *sizeQualifierMenu;
    NSMutableArray *_headerList;
    BOOL colorPanelShouldBeHidden;
    int currentlySelectedRow;
    struct _NSRect defaultCriterionPopupFrame;
    struct _NSRect defaultQualifierPopupFrame;
    NSMenu *qualifierMenu;
    NSMenu *accountOrGroupMenu;
    MessageRule *_ruleBeingValidated;
    MessageRule *_ruleBeingEdited;
}

- (void)dealloc;
- (id)titleForIdentifier:(id)fp8;
- (void)awakeFromNib;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (id)viewForPreferenceNamed:(id)fp8;
- (id)preferencesNibName;
- (id)imageForPreferenceNamed:(id)fp8;
- (void)_validateButtonState;
- (void)initializeFromDefaults;
- (void)saveChanges;
- (void)createRule:(id)fp8;
- (void)duplicateRule:(id)fp8;
- (void)editRule:(id)fp8;
- (void)removeRuleSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)removeRule:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (int)tableView:(id)fp8 highlightStyleForRow:(int)fp12 inRect:(struct _NSRect *)fp16 color:(id *)fp20;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)tableView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (BOOL)tableView:(id)fp8 writeRows:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(int)fp20;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)_setOtherColor:(id)fp8;
- (void)_tileViews:(id)fp8 inContainer:(id)fp12 withChangeAtRow:(int)fp16 removeIsEnabled:(BOOL)fp20;
- (void)connectNextKeyViewChain;
- (void)addCriterion:(id)fp8;
- (void)_removeView:(id)fp8 fromViews:(id)fp12 inContainer:(id)fp16;
- (void)removeCriterion:(id)fp8;
- (void)removeAction:(id)fp8;
- (void)_configureCriteriaForRule:(id)fp8;
- (id)_actionViewForTag:(int)fp8;
- (void)addActionForTag:(int)fp8 atIndex:(int)fp12;
- (void)_configureColorPopupForColorStyle:(int)fp8;
- (void)_configureActionsForRule:(id)fp8;
- (void)addressesNeedRedisplay:(id)fp8;
- (void)addAction:(id)fp8;
- (void)_validateActionMenuItem:(id)fp8 currentTag:(int)fp12;
- (void)runRuleDetailPanelForRule:(id)fp8 inWindow:(id)fp12;
- (void)_ruleDetailSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)okClicked:(id)fp8;
- (void)cancelClicked:(id)fp8;
- (void)colorChanged:(id)fp8;
- (void)colorPicked:(id)fp8;
- (void)colorStyleChanged:(id)fp8;
- (void)setResponseMessageClicked:(id)fp8;
- (void)responseMessageOKClicked:(id)fp8;
- (void)responseMessageCancelClicked:(id)fp8;
- (void)flagsToApplyChanged:(id)fp8;
- (void)_configureQualifierPopupForCriterionPopupInRow:(int)fp8;
- (void)_configureCriterionPopupMenu:(id)fp8;
- (void)_configureAllCriterionMenus;
- (void)_resetHeaderList;
- (void)configureCriterionView:(id)fp8;
- (void)criterionPopupWillPopup:(id)fp8;
- (void)criterionPopupChanged:(id)fp8;
- (void)headerListOkClicked:(id)fp8;
- (void)headerListCancelClicked:(id)fp8;
- (void)_updateHeaderListUI;
- (void)removeHeaderClicked:(id)fp8;
- (void)addHeaderClicked:(id)fp8;
- (void)chooseAppleScriptPanelSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)chooseAppleScriptClicked:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (void)mailboxSelected:(id)fp8;
- (void)actionPopupWillPopup:(id)fp8;
- (void)actionPopupChanged:(id)fp8;
- (id)titleForSoundFile:(id)fp8;

@end

@interface MailApp (ApplescriptMailSorterPreferences)
- (id)rules;
- (void)insertInRules:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInRules:(id)fp8;
- (void)removeFromRulesAtIndex:(unsigned int)fp8;
@end

@interface _AutosizingClipView : NSClipView
{
}

- (void)viewFrameChanged:(id)fp8;

@end

@interface AutosizingScrollView : NSScrollView
{
    float _maxHeight;
    unsigned int _resizingContent:1;
    unsigned int _UNUSED:31;
}

+ (struct _NSSize)frameSizeForContentSize:(struct _NSSize)fp8 hasHorizontalScroller:(BOOL)fp16 hasVerticalScroller:(BOOL)fp20 borderType:(int)fp24;
+ (struct _NSSize)contentSizeForFrameSize:(struct _NSSize)fp8 hasHorizontalScroller:(BOOL)fp16 hasVerticalScroller:(BOOL)fp20 borderType:(int)fp24;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)tile;
- (void)docViewFrameChanged;
- (void)setMaxHeight:(float)fp8;
- (float)maxHeight;
- (void)setTag:(int)fp8;
- (int)tag;

@end

@interface NSClipView (AutosizingScrollViewAdditions)
- (void)setAutomagicallyResizes:(BOOL)fp8;
@end

@interface AutosizingTextField : NSTextField
{
    float _minimumHeight;
}

- (void)_editorResized;
- (void)_adjustWidth:(float)fp8 ofEditor:(id)fp12;
- (void)_adjustWidthBy:(float)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)resizeWithOldSuperviewSize:(struct _NSSize)fp8;
- (void)sizeToFit;
- (void)_setupTextView:(id)fp8;
- (void)didAddSubview:(id)fp8;
- (void)willRemoveSubview:(id)fp8;
- (float)minimumHeight;
- (void)setMinimumHeight:(float)fp8;
- (void)dealloc;

@end

@interface FocusView : NSView
{
    struct _NSSize _inset;
    struct _NSSize _thickness;
    NSColor *_color;
    BOOL _alwaysVisible;
}

- (void)_setFocusNeedsDisplay;
- (void)setRepresentedView:(id)fp8;
- (void)dealloc;
- (void)removeFromSuperview;
- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)isOpaque;
- (void)drawRect:(struct _NSRect)fp8;
- (void)setNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)setInset:(struct _NSSize)fp8;
- (void)setThickness:(struct _NSSize)fp8;
- (void)setColor:(id)fp8;
- (void)setAlwaysVisible:(BOOL)fp8;
- (BOOL)isAlwaysVisible;
- (id)hitTest:(struct _NSPoint)fp8;

@end

@interface NSView (FocusViewSupport)
- (BOOL)hasFocusView;
- (id)focusView;
- (void)setHasFocusView:(BOOL)fp8;
@end

@interface TilingView : NSView
{
    float _interRowSpacing;
    void *_titlesByView;
    NSTextFieldCell *_titleCell;
    float _titleWidth;
    NSView *_viewBeingResized;
    NSView *_footerView;
    NSView *_attachedView;
    unsigned int _needTileIndex:16;
    unsigned int _needsTile:1;
    unsigned int _fixingUpKeyViews:1;
    unsigned int _UNUSED_:14;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)didAddSubview:(id)fp8;
- (void)willRemoveSubview:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)resizeWithOldSuperviewSize:(struct _NSSize)fp8;
- (float)interRowSpacing;
- (void)setInterRowSpacing:(float)fp8;
- (void)setTitleFont:(id)fp8;
- (id)titleFont;
- (void)setTitle:(id)fp8 forView:(id)fp12;
- (id)titleForView:(id)fp8;
- (id)attachedView;
- (void)setAttachedView:(id)fp8;
- (id)footerView;
- (void)setFooterView:(id)fp8;

@end

@interface TilingView (Internal)
- (void)_resizeSubviewsFromIndex:(unsigned int)fp8;
- (void)_subviewResized:(id)fp8;
- (void)_recalculateTitleWidth;
@end

@interface DeliveryQueue : NSObject
{
    unsigned int _isBackgroundProcessingEnabled:1;
    unsigned int _resetDeliveryQueueWhenDoneWithCurrentMessage:1;
    MessageStore *_outboxStore;
    int _indexOfLastMessageToProcess;
    NSMutableDictionary *_errorResponses;
    NSMutableSet *_potentialAlternateDeliveryAccounts;
    NSMutableSet *_accountsOnHold;
    NSMutableDictionary *_alternateDeliveryAccounts;
    BOOL _queueIsActive;
    double _beginDeliveryTime;
}

+ (id)sharedDeliveryQueue;
- (id)init;
- (void)dealloc;
- (void)setBackgroundProcessingEnabled:(BOOL)fp8;
- (BOOL)isBackgroundProcessingEnabled;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (void)resetStateAndReprocessQueue;
- (void)_closeOutboxStore;
- (void)processDeliveryQueueStartingAtIndex:(int)fp8;
- (int)_performDeliveryOfMessage:(id)fp8 usingAccount:(id)fp12 accountUsed:(id *)fp16;
- (BOOL)_isMessageBeingEdited:(id)fp8;
- (void)_deliverQueuedMessages:(id)fp8;
- (int)appendMessageToQueue:(id)fp8 replacingOriginalMessage:(id)fp12;
- (void)cancelDeliveryOfMessage:(id)fp8;
- (void)_networkConfigurationChanged:(id)fp8;
- (id)potentialAlternateDeliveryAccounts;
- (void)setAlternateDeliveryAccount:(id)fp8 forAccount:(id)fp12;
- (void)unfreezeDeliveryAccount:(id)fp8;
- (id)alternateDeliveryAccountForAccount:(id)fp8;

@end

@interface ComposeBackEnd (ScriptingSupport)
+ (id)_messageEditorForComposeBackEnd:(id)fp8 window:(id *)fp12;
- (BOOL)isVisible;
- (void)setIsVisible:(BOOL)fp8;
- (id)appleScriptSender;
- (void)setAppleScriptSender:(id)fp8;
- (id)appleScriptSubject;
- (void)setAppleScriptSubject:(id)fp8;
- (id)content;
- (void)setContent:(id)fp8;
- (id)messageSignature;
- (void)setMessageSignature:(id)fp8;
- (void)_addRecipientsForKey:(id)fp8 toArray:(id)fp12;
- (id)recipients;
- (id)toRecipients;
- (id)ccRecipients;
- (id)bccRecipients;
- (void)insertRecipient:(id)fp8 atIndex:(unsigned int)fp12 inHeaderWithKey:(id)fp16;
- (void)insertInToRecipients:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInToRecipients:(id)fp8;
- (void)insertInCcRecipients:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInCcRecipients:(id)fp8;
- (void)insertInBccRecipients:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInBccRecipients:(id)fp8;
- (void)removeFromToRecipientsAtIndex:(unsigned int)fp8;
- (void)removeFromCcRecipientsAtIndex:(unsigned int)fp8;
- (void)removeFromBccRecipientsAtIndex:(unsigned int)fp8;
- (void)replaceFormattedAddress:(id)fp8 withAddress:(id)fp12 forKey:(id)fp16;
- (id)handleSaveMessageCommand:(id)fp8;
- (id)handleSendMessageCommand:(id)fp8;
- (id)uniqueID;
- (id)objectSpecifier;
- (void)setHtmlContent:(id)fp8;
- (void)setVcardPath:(id)fp8;
@end

@interface MouseTrackingWindow : NSWindow
{
}

- (void)displayIfNeeded;

@end

@interface NSWindow (MailSwizzle)
- (void)changeToMouseTrackingWindow;
@end

@interface AsyncArrows : NSProgressIndicator
{
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)mouseDown:(id)fp8;

@end

@interface FlippedView : NSView
{
}

- (BOOL)isFlipped;
- (BOOL)isOpaque;

@end

@interface ActivityViewer : NSObject
{
    id _docView;
    id _scrollView;
    id _window;
    NSMutableArray *entries;
    int _numActiveEntries;
    NSTimer *_updateTimer;
}

- (id)init;
- (void)dealloc;
- (void)initializeFromDefaults;
- (void)awakeFromNib;
- (void)_handleNewActivity:(id)fp8;
- (void)_updateAllEntries;
- (void)_addViewToViewerWindow:(id)fp8;
- (void)_appendEntry:(id)fp8;
- (void)removeEntry:(id)fp8;
- (void)_tileViews;
- (BOOL)hasBackgroundActivity;
- (int)countOfBackgroundActivities;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (BOOL)isActivityViewerVisible;
- (void)toggleActivityViewerVisible;
- (id)statusMessageForStore:(id)fp8;
- (BOOL)windowShouldClose:(id)fp8;

@end

@interface MailApp (ActivityViewerScripting)
- (int)backgroundThreadCount;
@end

@interface MailNotificationCenter : NSNotificationCenter
{
    struct _NSHashTable *nameTable;
}

+ (void)initialize;
+ (id)defaultMailCenter;
- (id)init;
- (void)addObserverInMainThread:(id)fp8 selector:(SEL)fp12 name:(id)fp16 object:(id)fp20;
- (void)postNotification:(id)fp8;
- (void)postNotificationName:(id)fp8 object:(id)fp12 userInfo:(id)fp16;
- (void)_postNotificationWithMangledName:(id)fp8 object:(id)fp12 userInfo:(id)fp16;
- (void)removeObserver:(id)fp8 name:(id)fp12 object:(id)fp16;

@end

@interface NSNotificationCenter (ToReplaceCenterWithOurOwn)
+ (id)defaultCenter;
@end

@interface Signature : NSObject <NSCopying>
{
    NSString *_name;
    NSAttributedString *_richTextValue;
}

- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (id)initWithDictionary:(id)fp8;
- (id)dictionaryRepresentation;
- (void)setName:(id)fp8;
- (id)name;
- (id)attributedString;
- (void)setRichTextValue:(id)fp8;
- (id)richTextValue;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;

@end

@interface MailApp (ApplescriptSignature)
- (void)insertInSignatures:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInSignatures:(id)fp8;
- (void)removeFromSignaturesAtIndex:(unsigned int)fp8;
@end

@interface Signature (Applescript)
- (id)signatureName;
- (void)setSignatureName:(id)fp8;
- (void)setSignatureContents:(id)fp8;
- (id)signatureContents;
- (id)objectSpecifier;
@end

@interface FontMenu : NSMenu
{
}

- (id)initWithTitle:(id)fp8 fixedPitchOnly:(BOOL)fp12;

@end

@interface iToolsAccountDetails : IMAPAccountDetails
{
}

+ (id)accountDetailsNibName;
- (Class)accountClass;
- (void)setupUIFromValuesInAccount:(id)fp8;

@end

@interface AttachmentManager : NSObject
{
    id _currentDragTextView;
    NSArray *_currentDragAttachments;
}

+ (id)sharedInstance;
- (id)init;
- (id)writeFileWrapper:(id)fp8 toAttachmentDirectory:(id)fp12;
- (id)writeFileWrapper:(id)fp8 toSaveDirectory:(id)fp12;
- (void)beginLoadingInlineAttachmentsInView:(id)fp8;
- (void)cancelLoadingInlineAttachmentsInView:(id)fp8;
- (BOOL)dragAbortedBecauseOneOrMoreAttachmentsNotDownloaded:(id)fp8 inTextView:(id)fp12;
- (BOOL)dragAttachments:(id)fp8 fromRange:(struct _NSRange)fp12 withEvent:(id)fp20 ofTextView:(id)fp24 orOtherView:(id)fp28;
- (id)filePathsForAttachments:(id)fp8 textView:(id)fp12;
- (id)currentDragView;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (void)_openFromDownloadedNotification:(id)fp8;
- (void)_downloadCompleted:(id)fp8;
- (BOOL)openAttachment:(id)fp8 withApplicationURL:(struct __CFURL *)fp12 ofTextView:(id)fp16;
- (void)openAttachments:(id)fp8 withApplicationURL:(struct __CFURL *)fp12 ofTextView:(id)fp16;
- (void)saveAttachmentsFromMessages:(id)fp8 ofTextView:(id)fp12 inWindow:(id)fp16;
- (void)saveAttachments:(id)fp8 ofTextView:(id)fp12;
- (void)saveAttachmentsToDownloadDirectory:(id)fp8 ofTextView:(id)fp12;
- (void)chooseApplicationToOpenAttachments:(id)fp8 ofTextView:(id)fp12;
- (id)attributedStringWithPartialAttachmentsInTextView:(id)fp8 fromRange:(struct _NSRange)fp12;
- (void)prepareAttributedString:(id)fp8 forPrinter:(id)fp12;
- (BOOL)openFileURL:(id)fp8;
- (void)configureOpenWithMenu:(id)fp8 forAttachments:(id)fp12;

@end

@interface NSOpenPanel (Extras)
+ (id)panelConfiguredToChooseDirectories;
@end

@interface AttachmentManager (Internal)
- (long)_openFullPath:(id)fp8 withAppURL:(struct __CFURL *)fp12;
- (void)_chooseApplicationSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(struct SheetContext *)fp16;
- (id)_saveAttachments:(id)fp8 toDirectory:(id)fp12;
- (void)_saveAttachmentsFromMessages:(id)fp8 toDirectory:(id)fp12;
- (void)_openPanelSheetForSaveDestinationDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(struct SheetContext *)fp16;
- (void)_reportCantOpenSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(struct SheetContext *)fp16;
- (void)_confirmDownloadSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(struct SheetContext *)fp16;
- (BOOL)_immediatelyOpenAttachment:(id)fp8 withApplicationURL:(struct __CFURL *)fp12 ofTextView:(id)fp16 attachmentDirectory:(id)fp20;
- (void)_noteFileSystemChanged:(id)fp8;
@end

@interface MessageViewer (MessageViewerToolbar)
- (void)_setupToolBar;
- (BOOL)validateToolbarItem:(id)fp8;
- (id)toolbar:(id)fp8 itemForItemIdentifier:(id)fp12 willBeInsertedIntoToolbar:(BOOL)fp16;
- (void)setupSearchView:(BOOL)fp8;
- (id)toolbarDefaultItemIdentifiers:(id)fp8;
- (id)toolbarAllowedItemIdentifiers:(id)fp8;
- (void)toolbarDidRemoveItem:(id)fp8;
@end

@interface MessageEditor (MessageEditorToolbar)
- (BOOL)validateToolbarItem:(id)fp8;
- (void)_setupToolBarOnWindow:(id)fp8 messageType:(int)fp12;
- (void)_synchronizeChangeReplyItem:(id)fp8 messageType:(int)fp12;
- (void)toggleReplytype:(int)fp8;
- (void)_updateSendButtonStateInToolbar;
- (void)_updateSendButtonInToolbarWithImage:(id)fp8;
- (void)toolbarWillAddItem:(id)fp8;
- (id)toolbar:(id)fp8 itemForItemIdentifier:(id)fp12 willBeInsertedIntoToolbar:(BOOL)fp16;
- (id)toolbarDefaultItemIdentifiers:(id)fp8;
- (id)toolbarAllowedItemIdentifiers:(id)fp8;
@end

@interface MessageTextStorage : NSConcreteTextStorage
{
    BOOL _isRichText;
}

- (id)defaultFont;
- (BOOL)isRichText;
- (void)setRichText:(BOOL)fp8;
- (void)fixParagraphStyleAttributeInRange:(struct _NSRange)fp8;
- (void)fixQuotingDisplayAttributesInRange:(struct _NSRange)fp8;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withAttributedString:(id)fp16;

@end

@interface NSToolbar (MailAdditions)
- (id)itemWithTag:(int)fp8;
- (id)configureToolbarItems;
- (void)setMinWidthOfItem:(id)fp8 alternateTitle:(id)fp12;
@end

@interface SearchTextField : NSSearchField
{
    struct {
        unsigned int dontDisplaySearchScope:1;
        unsigned int reserver:31;
    } _flags;
}

- (BOOL)isDisplayingGraySearchScope;
- (void)displayGraySearchScopeIfAppropriate:(id)fp8;
- (void)removeGraySearchScope;
- (BOOL)becomeFirstResponder;
- (void)selectText:(id)fp8;
- (void)_cancelKey:(id)fp8;

@end

@interface NSFont (MailAdditions)
+ (id)messageListFont;
+ (id)messageListFontName;
+ (void)setMessageListFontName:(id)fp8;
+ (float)messageListFontSize;
+ (void)setMessageListFontSize:(float)fp8;
+ (id)addressFieldFont;
+ (id)prefsAddressFieldFont;
+ (id)validFontName:(id)fp8 fixedPitchOnly:(BOOL)fp12;
@end

@interface SubjectFormatter : NSFormatter
{
}

- (id)stringForObjectValue:(id)fp8;
- (id)attributedStringForObjectValue:(id)fp8 withDefaultAttributes:(id)fp12;
- (id)editingStringForObjectValue:(id)fp8;
- (BOOL)getObjectValue:(id *)fp8 forString:(id)fp12 errorDescription:(id *)fp16;
- (BOOL)isPartialStringValid:(id)fp8 newEditingString:(id *)fp12 errorDescription:(id *)fp16;

@end

@interface ActivityViewEntry : NSObject
{
    NSBox *_box;
    NSProgressIndicator *_progressBar;
    NSTextField *_statusField;
    NSButton *_stopButton;
    NSTextField *_taskNameField;
    ActivityMonitor *_activity;
    int _lastChangeCount;
    ActivityViewer *_viewer;
}

- (id)initForViewer:(id)fp8;
- (void)dealloc;
- (void)awakeFromNib;
- (void)setMonitoredActivity:(id)fp8;
- (id)monitoredActivity;
- (void)update;
- (void)_handleActivityEnded;
- (void)stop:(id)fp8;
- (BOOL)inUse;
- (void)setupUI;
- (id)view;

@end

@interface MailboxesChooser : NSObject
{
    NSPopUpButton *popUpButton;
    MailboxUid *_selectedMailbox;
    id _realTarget;
    SEL _realAction;
}

- (void)dealloc;
- (void)cellWillPopUp:(id)fp8;
- (void)reset;
- (void)awakeFromNib;
- (void)_cancelMenuTracking:(id)fp8;
- (id)popUpButton;
- (void)_mailboxWasRenamed:(id)fp8;
- (void)_ensureSelectionIsValid:(id)fp8;
- (void)_popUpPressed:(id)fp8;
- (void)setSelectedMailbox:(id)fp8;
- (id)selectedMailbox;

@end

@interface MouseTracker : NSObject
{
    NSView *_view;
    struct _NSRect _trackingRect;
    int _trackingRectTag;
    BOOL _mouseOver;
    id _delegate;
    struct {
        unsigned int delegateMouseTrackerDidUpdate:1;
    } _flags;
}

- (id)initWithTrackingRect:(struct _NSRect)fp8 inView:(id)fp24;
- (void)dealloc;
- (void)setDelegate:(id)fp8;
- (struct _NSRect)trackingRect;
- (id)view;
- (BOOL)mouseOver;
- (void)_updateMouseIsOver;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)mouseMoved:(id)fp8;

@end

@interface VisibleStateObject : NSObject
{
    struct visible_state vs;
    NSMutableDictionary *selectedMessageIDs;
    NSMutableArray *openThreadIDs;
    Message *pinnedMessage;
}

@end

@interface TableViewManager (FilteredList_Management)
- (void)mallStructureWillChange:(id)fp8;
- (void)setMailboxUids:(id)fp8;
- (BOOL)allMailboxesAreOutgoing:(id)fp8;
- (void)storeStructureChanged:(id)fp8;
- (void)messagesCompacted:(id)fp8;
- (void)messageFlagsChanged:(id)fp8;
- (void)_scrollToHappyPlace;
- (void)_recordVisibleState:(struct visible_state *)fp8 deletedAreGoingAway:(BOOL)fp12 considerPinToEnd:(BOOL)fp16;
- (BOOL)_restoreVisibleState:(struct visible_state *)fp8 forceSelToVisible:(BOOL)fp12;
- (void)dumpVisibleState;
- (id)_messageToSelectIfEntireSelectionRemoved;
- (int)indexOfTopmostVisibleMessageMustBeSelected:(BOOL)fp8 okayIfDeleted:(BOOL)fp12;
- (int)indexOfLastReadMessage;
- (int)indexOfFirstNonDeletedNonSelectedMessage:(int)fp8 withinRowRange:(struct _NSRange)fp12 goUp:(BOOL)fp20;
- (id)persistentVisibleStateCreateIfNecessary:(BOOL)fp8;
- (void)saveScrollAndSelection;
- (BOOL)restoreScrollAndSelection;
- (void)_setScrollAndSelectionForThreadOpenedOrClosed:(id)fp8 flag:(BOOL)fp12 clickedRow:(int)fp16 rowToSelectInOpeningThread:(int)fp20;
- (id)selectedMessageIDs;
- (id)openThreadIDs;
- (void)setSelectedMessageIDs:(id)fp8 openThreadIDs:(id)fp12;
- (void)addRanks;
- (void)removeRanks;
- (void)clearSearch;
- (BOOL)isShowingSearchResults;
- (void)searchForString:(id)fp8 in:(int)fp12 withOptions:(int)fp16;
- (BOOL)isFocused;
- (void)setFocusedMessages:(id)fp8;
- (BOOL)includeDeleted;
- (void)setIncludeDeleted:(BOOL)fp8;
- (BOOL)isSortedByRank;
- (BOOL)isSortedByDateReceived;
- (BOOL)isSortedChronologically;
- (int)sortColumn;
- (void)setSortColumn:(int)fp8 ascending:(BOOL)fp12;
- (BOOL)isSortedAscending;
- (void)setIsSortedAscending:(BOOL)fp8;
- (int)state;
- (id)filteredMessages;
- (void)restoreLocationColumnIfAppropriate;
- (void)clearTrackingRects;
- (void)updateTrackingRects;
- (void)mouseTrackerDidUpdate:(id)fp8;
- (int)_indexOfMemberToSelectWhenOpeningThread:(id)fp8;
- (double)_getAnimationDuration:(int)fp8;
- (id)_createHiliteImage;
- (id)_createBackgroundImage;
- (id)_createSnapshotOfRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32;
- (id)_createSnapshotOfRow:(int)fp8 styleMask:(unsigned int)fp12 backing:(int)fp16 defer:(BOOL)fp20;
- (void)_clearImageCacheForMessage:(id)fp8;
- (void)_clearImageCacheForRow:(int)fp8;
- (BOOL)_isRowVisible:(int)fp8;
- (struct _NSSize)_calculateTruncationAmountUsingRowHeight:(float)fp8 collapseOrExpandAmount:(float)fp12 invisibleThreadAmountAbove:(float)fp16 invisibleThreadAmountBelow:(float)fp20;
- (void)_animateThreadCollapsing:(int)fp8 threadRow:(int)fp12 clickedRow:(int)fp16;
- (float)_animateThreadOpening:(id)fp8 threadMessageCount:(int)fp12 threadRow:(int)fp16 rowToBeSelected:(int)fp20;
@end

@interface MVMailBundle : NSObject
{
}

+ (id)allBundles;
+ (id)composeAccessoryViewOwners;
+ (void)registerBundle;
+ (id)sharedInstance;
+ (BOOL)hasPreferencesPanel;
+ (id)preferencesOwnerClassName;
+ (id)preferencesPanelName;
+ (BOOL)hasComposeAccessoryViewOwner;
+ (id)composeAccessoryViewOwnerClassName;
- (void)dealloc;
- (void)_registerBundleForNotifications;

@end

@interface MVComposeAccessoryViewOwner : NSObject
{
    NSView *accessoryView;
}

+ (id)composeAccessoryViewOwner;
+ (id)composeAccessoryViewNibName;
- (id)init;
- (void)setupUIForMessage:(id)fp8;
- (id)composeAccessoryView;
- (BOOL)messageWillBeDelivered:(id)fp8;
- (BOOL)messageWillBeSaved:(id)fp8;

@end

@interface OldCompletionController : NSObject
{
    NSControl *_editingField;
    NSWindow *_editingWindow;
    NSString *_currentPartialString;
    NSString *_previousString;
    NSWindow *_completionWindow;
    NSTableView *_completionTableView;
    id _selectedRecord;
    NSString *_selectedAddress;
    NSString *_completedAddress;
    NSMutableArray *_matchingRecords;
    NSMutableArray *_matchingAddresses;
    NSMutableArray *_ldapMatches;
    ABLDAP_Manager *_ldapManager;
    NSTimer *_ldapTimer;
    NSProgressIndicator *progressIndicator;
    ActivityMonitor *completionMonitor;
    BOOL showListAsSoonAsPossible;
    BOOL ldapSearchIsComplete;
    BOOL localSearchIsComplete;
    BOOL showingPartialLDAPSearchResults;
}

+ (void)initialize;
+ (void)_doCompletionWindowPlacement:(id)fp8;
- (id)init;
- (void)setProgressIndicatorVisible:(BOOL)fp8;
- (void)awakeFromNib;
- (void)_stopTimer;
- (void)_startTimer;
- (void)_disconnectAllLDAPConnections:(id)fp8;
- (void)_reset:(id)fp8;
- (id)selectedRecord;
- (id)completedAddress;
- (void)setCompletedAddress:(id)fp8;
- (void)textFieldDidAtomicizeAllAddresses:(id)fp8;
- (void)cancelAllCompletions;
- (BOOL)_acceptCurrentCompletion;
- (void)selectTableViewRow:(id)fp8;
- (void)setEditingField:(id)fp8;
- (id)stringToComplete:(id)fp8;
- (void)_showSelectedLineInField;
- (void)_showSelectedLine;
- (void)_showCompletionListWindow:(unsigned int)fp8;
- (void)orderOutCompletionWindow:(id)fp8;
- (void)placementViewFrameChanged:(id)fp8;
- (void)_displayFilteredResultsShowList:(BOOL)fp8 showSelectedLine:(BOOL)fp12;
- (void)updateList:(id)fp8;
- (void)endUpdateList:(id)fp8;
- (void)appendLDAPResultsToMatchingRecords;
- (void)mergeLDAPMatchesIntoMatchingRecords;
- (void)completeStringUsingLDAP:(id)fp8;
- (void)completeString:(id)fp8;
- (void)addressBookSearchCompleted:(id)fp8;
- (void)forceListToPopup;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (BOOL)control:(id)fp8 textShouldEndEditing:(id)fp12;
- (void)controlTextDidChange:(id)fp8;
- (BOOL)shouldChangeTextInRange:(struct _NSRange)fp8 replacementString:(id)fp16;
- (void)tableViewSelectionDidChange:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (BOOL)control:(id)fp8 textShouldBeginEditing:(id)fp12;
- (void)dealloc;

@end

@interface AttachmentLoader : NSObject
{
    MessageStore *_store;
    ActivityMonitor *_monitor;
    NSMutableArray *_entries;
}

+ (id)loaderForAttachment:(id)fp8 ofTextView:(id)fp12 reason:(int)fp16 application:(id)fp20 attachmentDirectory:(id)fp24;
+ (void)startLoadingInlineAttachments:(id)fp8 ofTextView:(id)fp12;
+ (void)cancelInlineLoadsForTextView:(id)fp8;
- (void)dealloc;

@end

@interface _AttachmentQueueEntry : NSObject
{
    NSTextView *textView;
    NSTextAttachment *attachment;
    int reason;
    NSURL *applicationURL;
    NSString *attachDir;
}

+ (id)newWithTextView:(id)fp8 attachment:(id)fp12 reason:(int)fp16 application:(id)fp20 attachmentDirectory:(id)fp24;
- (BOOL)isEqual:(id)fp8;
- (void)dealloc;

@end

@interface AttachmentLoader (Internal)
+ (id)_loaderForStore:(id)fp8;
+ (id)_makeLoaderForStore:(id)fp8;
- (id)init;
- (void)_cancelInlineLoadsForTextView:(id)fp8;
- (void)_didFetchFileWrapper:(id)fp8 forQueueEntry:(id)fp12;
- (void)_processAttachmentQueue;
- (void)_setMonitor:(id)fp8;
- (void)_monitorQuit;
- (void)_mailboxBecameInvalid;
- (void)_setStore:(id)fp8;
- (void)_startBackgroundThreadIfNeeded;
- (void)_addAttachmentsToFetch:(id)fp8 fromTextView:(id)fp12;
- (BOOL)_addOrReprioritizeEntryEqualTo:(id)fp8;
@end

@interface AddressCommentCommand : NSScriptCommand
{
}

- (id)_getAddressCommentForObject:(id)fp8;
- (id)executeCommand;
- (id)performDefaultImplementation;

@end

@interface UncommentedAddressCommand : NSScriptCommand
{
}

- (id)_getUncommentedAddressForObject:(id)fp8;
- (id)executeCommand;
- (id)performDefaultImplementation;

@end

@interface MailToCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface MailApp : NSApplication
{
    id selectionOwner;
    NSMenu *_mailboxesDrawerContextMenu;
    NSMenu *_messageViewerContextMenu;
    NSMenu *_composeAttachmentContextMenu;
    NSMenu *_viewAttachmentContextMenu;
    NSMenuItem *textEncodingMenuItem;
    MailboxesController *mailboxesController;
    NSString *_noMailSoundPath;
    NSString *_fetchErrorSoundPath;
    NSImage *unbadgedApplicationImage;
    NSPanel *_selectMailboxPanel;
    MailboxesChooser *_selectMailboxChooser;
    DeliveryQueue *_deliveryQueue;
    ActivityViewer *_activityViewer;
    NSMutableArray *_terminationHandlers;
    unsigned int _autoLaunchHidden:1;
    unsigned int _mainThreadIsBusy:1;
    unsigned int _shouldPlayNoMailSound:1;
    unsigned int _shouldPlayFetchErrorSound:1;
    unsigned int _appHasFinishedLaunching:1;
    unsigned int _appHasFinishedDelayedInitialization:1;
    unsigned int _synchronizingAllAccounts:1;
    unsigned int _groupingByThreadDefaultsToOn:1;
    unsigned int _terminateReply:4;
    unsigned int _currentHandlerIndex:24;
    NSMutableSet *_accountsCurrentlySynchronizing;
    int numberOfAccountsEmptyingTrash;
    int currentPasswordPanelCount;
    NSMutableDictionary *_composeMessages;
}

+ (void)_forceClassInitialization;
- (id)init;
- (void)awakeFromNib;
- (void)presencePreferenceChanged:(id)fp8;
- (void)setAppImageForUnreadCount:(int)fp8;
- (void)_unreadCountChanged:(id)fp8;
- (void)_accountInfoDidChange:(id)fp8;
- (BOOL)applicationOpenUntitledFile:(id)fp8;
- (void)configurePerformanceLoggingDefaults;
- (void)_systemTimeChanged;
- (void)_midnightPassed;
- (void)_setupMidnightTimer;
- (void)_checkTimerAndFireDate:(id)fp8;
- (void)checkTimersAfterSleeping;
- (void)_setupMenus;
- (void)performDelayedInitialization;
- (void)applicationDidFinishLaunching:(id)fp8;
- (void)_restoreMessagesFromDefaults;
- (void)_setupInitialState;
- (int)_loadBundlesFromPath:(id)fp8;
- (void)_loadBundles;
- (id)_mailboxBeingViewed;
- (id)_accountBeingViewed;
- (id)_selectedMailboxes;
- (BOOL)validateToolbarItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)disconnectAllAccounts:(id)fp8;
- (void)connectAllAccounts:(id)fp8;
- (void)connectThisAccount:(id)fp8;
- (void)disconnectThisAccount:(id)fp8;
- (void)toggleAccountOnlineStatus:(id)fp8;
- (void)performSynchronizationForAccounts:(id)fp8;
- (void)synchronizeAccount:(id)fp8;
- (void)_networkConfigurationChanged:(id)fp8;
- (void)showInfoPanel:(id)fp8;
- (void)showComposeWindow:(id)fp8;
- (void)showViewerWindow:(id)fp8;
- (void)showAddressPanel:(id)fp8;
- (void)showAddressHistoryPanel:(id)fp8;
- (void)showSearchPanel:(id)fp8;
- (void)findNext:(id)fp8;
- (void)findPrevious:(id)fp8;
- (void)showActivityViewer:(id)fp8;
- (void)showPreferencesPanel:(id)fp8;
- (void)changeAddressDisplayMode:(id)fp8;
- (void)importMailboxes:(id)fp8;
- (void)showReleaseNotes:(id)fp8;
- (void)alwaysSendWindowsFriendlyAttachments:(id)fp8;
- (void)sendWindowsFriendlyAttachments:(id)fp8;
- (void)insertOriginalAttachments:(id)fp8;
- (void)_resetMenuItemWithTag:(int)fp8;
- (id)_getMenuItemInMessageMenuWithTag:(int)fp8;
- (void)_synchronizeAccountListMenuWithTagIfNeeded:(int)fp8;
- (void)bringUpOnlineOfflineMenu:(id)fp8;
- (void)bringUpSynchronizeAccountMenu:(id)fp8;
- (void)bringUpEmptyTrashMenu:(id)fp8;
- (void)bringUpGetNewMailMenu:(id)fp8;
- (void)_removeAllItemsInAccountMenuWithTag:(int)fp8;
- (void)accountsChanged:(id)fp8;
- (void)editAccount:(id)fp8;
- (void)_emptyTrashInAccounts:(id)fp8;
- (void)emptyTrashInAccount:(id)fp8;
- (void)compactSelectedMailboxes:(id)fp8;
- (void)toggleSmallIconsInDrawer:(id)fp8;
- (void)showJunkMailInfoPanel;
- (void)showJunkMailInfoPanelIfNeeded;
- (void)_evaluateUsersJunkMailNeeds;
- (void)showToolbarItemForJunkMail:(BOOL)fp8;
- (void)eraseJunkMail:(id)fp8;
- (void)toggleThreadedMode:(id)fp8;
- (BOOL)groupingByThreadDefaultsToOn;
- (void)setGroupingByThreadDefaultsToOn:(BOOL)fp8;
- (BOOL)shouldAutoFetch;
- (void)setShouldAutoFetch:(BOOL)fp8;
- (int)autoFetchFrequency;
- (void)setAutoFetchFrequency:(int)fp8;
- (void)_checkNewMail:(BOOL)fp8;
- (void)doBackgroundFetch:(BOOL)fp8;
- (void)checkNewMailInAccount:(id)fp8;
- (void)checkNewMail:(id)fp8;
- (void)checkNewMailInSelectedAccount:(id)fp8;
- (void)autoFetchMail:(id)fp8;
- (void)markAllMessagesAsReadInMailbox:(id)fp8;
- (void)markAllAsRead:(id)fp8;
- (void)backgroundFetchCompleted:(id)fp8;
- (void)resetAutoFetchTimer;
- (void)fetchErrorHasOccurred;
- (BOOL)application:(id)fp8 openFile:(id)fp12;
- (void)application:(id)fp8 openFiles:(id)fp12;
- (void)applicationDidUnhide:(id)fp8;
- (id)openStoreWithMailboxUid:(id)fp8;
- (id)openStoreWithMailboxUid:(id)fp8 andMakeKey:(BOOL)fp12;
- (Class)messageEditorClass;
- (id)messageEditor;
- (void)addressManagerLoaded;
- (id)activityViewer;
- (id)textEncodingMenuItem;
- (id)mailboxesDrawerContextMenu;
- (id)messageViewerContextMenu;
- (id)viewAttachmentContextMenu;
- (id)composeAttachmentContextMenu;
- (id)mailboxesController;
- (void)preferencesChanged:(id)fp8;
- (void)handleGURLAppleEvent:(id)fp8;
- (BOOL)handleMailToURL:(id)fp8;
- (BOOL)handleClickOnURL:(id)fp8;
- (BOOL)hasFinishedDelayedInitialization;
- (id)applicationVersion;
- (id)frameworkVersion;
- (void)mailDocuments:(id)fp8;
- (void)mailAttributedString:(id)fp8;
- (void)mailSelection:(id)fp8 userData:(id)fp12 error:(id *)fp16;
- (void)mailDocument:(id)fp8 userData:(id)fp12 error:(id *)fp16;
- (void)mailTo:(id)fp8 userData:(id)fp12 error:(id *)fp16;
- (id)deliveryQueue;
- (void)setSelectionFrom:(id)fp8;
- (void)resignSelectionFor:(id)fp8;
- (id)selection;
- (id)selectionOwner;
- (id)preferredReplyAddressBasedOnCurrentSelection;
- (BOOL)applicationShouldHandleReopen:(id)fp8 hasVisibleWindows:(BOOL)fp12;
- (void)terminateNoConfirm;
- (void)_approveQuitIfFinished;
- (void)_cleanupFinished;
- (void)cleanUpAccount:(id)fp8;
- (int)applicationShouldTerminate:(id)fp8;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (void)applicationWillTerminate:(id)fp8;
- (void)addTerminationHandler:(id)fp8;
- (void)removeTerminationHandler:(id)fp8;
- (void)handler:(id)fp8 approvedQuit:(BOOL)fp12;

@end

@interface MailApp (AppleScript)
- (void)openSelectedFolder:(id)fp8;
- (BOOL)_insertContentsOfScriptFolder:(id)fp8 inMenu:(id)fp12;
- (void)updateScriptsMenu:(id)fp8;
- (void)performScriptAction:(id)fp8;
- (void)openScriptsFolder:(id)fp8;
- (id)indicesOfObjectsByEvaluatingObjectSpecifier:(id)fp8;
- (id)applescriptSelection;
- (id)accounts;
- (id)_accountsOfClass:(Class)fp8;
- (id)popAccounts;
- (id)imapAccounts;
- (id)iToolsAccounts;
- (void)insertInDeliveryAccounts:(id)fp8 atIndex:(int)fp12;
- (void)insertInDeliveryAccounts:(id)fp8;
- (void)removeFromDeliveryAccountsAtIndex:(unsigned int)fp8;
- (id)messageViewers;
- (id)valueInMessageViewersWithUniqueId:(id)fp8;
- (void)insertInMessageViewers:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInMessageViewers:(id)fp8;
- (void)removeFromMessageViewersAtIndex:(unsigned int)fp8;
- (id)inbox;
- (id)outbox;
- (id)draftsMailbox;
- (id)sentMailbox;
- (id)trashMailbox;
- (id)junkMailbox;
- (id)mailboxes;
- (id)valueInMailboxesWithName:(id)fp8;
- (void)removeFromMailboxesAtIndex:(unsigned int)fp8;
- (void)insertInMailboxes:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInMailboxes:(id)fp8;
- (void)replaceInMailboxes:(id)fp8 atIndex:(unsigned int)fp12;
- (id)messageEditors;
- (void)insertInMessageEditors:(id)fp8 atIndex:(unsigned int)fp12;
- (void)removeFromMessageEditorsAtIndex:(unsigned int)fp8;
- (void)_insertInComposeMessagesIfAbsent:(id)fp8;
- (id)composeMessages;
- (void)insertInComposeMessages:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInComposeMessages:(id)fp8;
- (void)removeFromComposeMessagesAtIndex:(unsigned int)fp8;
- (void)removeFromComposeMessages:(id)fp8;
- (id)valueInComposeMessagesWithUniqueId:(id)fp8;
- (id)_objectSpecifierForObject:(id)fp8 inArray:(id)fp12 withKey:(id)fp16;
- (id)uniqueIDForComposeMessage:(id)fp8;
- (id)objectSpecifierForComposeMessage:(id)fp8;
- (id)objectSpecifierForMessageEditor:(id)fp8;
- (BOOL)useKeychain;
- (void)setUseKeychain:(BOOL)fp8;
- (BOOL)logAllSocketActivity;
- (void)setLogAllSocketActivity:(BOOL)fp8;
- (id)logActivityOnPorts;
- (void)setLogActivityOnPorts:(id)fp8;
- (id)logActivityOnHosts;
- (void)setLogActivityOnHosts:(id)fp8;
- (id)logMessages;
- (id)memoryStatistics;
- (id)userEmail;
- (id)handleCheckMailCommand:(id)fp8;
- (id)handleSynchronizeAccountCommand:(id)fp8;
@end

@interface NSMenu (TextEncodingSupport)
- (void)addStandardTextEncodingMenuItems;
@end

@interface SMTPSettings : NSObject
{
    NSTextField *hostnameField;
    NSPopUpButton *authPopup;
    NSButton *sslSwitch;
    NSTextField *usernameField;
    NSSecureTextField *passwordField;
    NSTextField *portNumberField;
    NSButton *okButton;
    DeliveryAccount *_account;
}

- (id)account;
- (void)setAccount:(id)fp8;
- (void)dealloc;
- (BOOL)runModal;
- (void)authenticationChanged:(id)fp8;
- (void)dismissPanel:(id)fp8;
- (void)controlTextDidChange:(id)fp8;

@end

@interface Message (MailViewerAdditions)
- (void)handleOpenAppleEvent:(id)fp8;
- (id)handleReplyToMessage:(id)fp8;
- (id)handleForwardMessage:(id)fp8;
- (id)handleRedirectMessage:(id)fp8;
- (void)handleBounceMessage:(id)fp8;
@end

@interface MessageEditor (ScriptingAdditions)
- (id)objectSpecifier;
@end

@interface PasswordPanel : NSObject
{
    NSPanel *_passwordPanel;
    NSSecureTextField *_passwordField;
    NSTextField *_passwordMessage;
    NSTextField *_passwordTitle;
    NSButton *_rememberPassword;
}

+ (id)passwordPanel;
- (void)dealloc;
- (id)init;
- (void)setTitle:(id)fp8;
- (void)setMessage:(id)fp8;
- (id)message;
- (id)promptModallyForPassword;
- (void)setCanRememberPassword:(BOOL)fp8;
- (BOOL)canRememberPassword;
- (void)setRememberPassword:(BOOL)fp8;
- (BOOL)rememberPassword;
- (void)passwordPanelOK:(id)fp8;
- (void)passwordPanelCancel:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;

@end

@interface NSExampleTextField : NSTextField
{
    NSString *_exampleText;
}

- (void)dealloc;
- (void)_reallySetStringValue:(id)fp8;
- (void)awakeFromNib;
- (void)setStringValue:(id)fp8;
- (void)removeGrayExampleString;
- (BOOL)becomeFirstResponder;
- (void)selectText:(id)fp8;
- (void)textDidEndEditing:(id)fp8;
- (void)setEnabled:(BOOL)fp8;
- (id)stringValue;

@end

@interface NSPopUpButton (MailAdditions)
- (void)selectItemWithTag:(int)fp8;
@end

@interface MessageSaver : NSObject
{
    NSArray *_messages;
    NSSet *_stores;
    NSSavePanel *_savePanel;
    NSString *_path;
    unsigned int _haveAttachments:1;
    unsigned int _hideExtension:1;
    unsigned int _includeAttachments:1;
    unsigned int _saveFormat:4;
    unsigned int _headerDetailLevel:4;
    NSPopUpButton *formatPopup;
    NSButton *includeAttachmentsSwitch;
}

+ (void)initialize;
+ (void)saveMessages:(id)fp8 headerDetailLevel:(int)fp12;
- (void)dealloc;
- (void)setMessages:(id)fp8;
- (void)setHeaderDetailLevel:(int)fp8;
- (void)runSavePanel;
- (void)updateSavePanelUI;
- (void)saveMessages;
- (void)handleSaveError:(id)fp8;
- (void)changeFormat:(id)fp8;
- (void)changeIncludeAttachments:(id)fp8;
- (id)separator;

@end

@interface ColorBackgroundView : NSView
{
    int _tag;
    NSColor *_color;
}

- (void)dealloc;
- (int)tag;
- (void)setTag:(int)fp8;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isOpaque;

@end

@interface NSDrawer (SmartExpansion)
- (float)spaceToOpen:(int)fp8;
- (BOOL)canDrawerExtendToEdge:(int)fp8;
@end

@interface LDAPServer : NSObject
{
    NSString *_searchBase;
    NSString *_serverAddress;
    NSNumber *_port;
    int _scope;
    NSString *_entryName;
    NSNumber *_enabled;
    NSString *_uid;
}

- (void)updateLDAPServers;
- (id)initWithDescription:(id)fp8 serverAddress:(id)fp12 searchBase:(id)fp16 enabled:(id)fp20 port:(int)fp24 scope:(int)fp28 uid:(id)fp32;
- (id)serverAddress;
- (void)setServerAddress:(id)fp8;
- (id)searchBase;
- (void)setSearchBase:(id)fp8;
- (id)entryName;
- (void)setEntryName:(id)fp8;
- (BOOL)oldIsActive;
- (void)setOldIsActive:(BOOL)fp8;
- (BOOL)enabled;
- (void)setEnabled:(BOOL)fp8;
- (id)uid;
- (id)port;
- (void)setPort:(id)fp8;
- (int)scope;
- (void)setScope:(int)fp8;
- (int)scopeForInt:(int)fp8;
- (int)intForScope:(int)fp8;
- (id)description;
- (id)objectSpecifier;
- (void)dealloc;

@end

@interface Account (MailUIExtras)
- (void)configureAuthenticationPopUp:(id)fp8;
@end

@interface DateCell : NSTextFieldCell
{
    NSFont *_lastFont;
    NSMutableAttributedString *_lastDateString;
    double _absoluteTime;
    int _lastDayInterval;
    NSMutableDictionary *_normalAttributes;
    NSMutableParagraphStyle *_paragraphStyle;
    NSMutableAttributedString *_drawingString;
    unsigned int _underlinesText:1;
    unsigned int _dateDetailLevel:15;
    float _lastWidth;
}

+ (void)initialize;
+ (void)resetDateFormats;
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (float)_widthOfStringWithTimeFormat:(id)fp8 withDatePrefix:(id)fp12;
- (float)_widthOfLongestDateStringWithLevel:(int)fp8 format:(id)fp12;
- (void)_saveWidthsToDefaults;
- (BOOL)_readWidthsFromDefaults;
- (void)_updateDateColumnDetailLevelWidths;
- (BOOL)_updateDateColumnDetailLevels;
- (float)minimumWidth;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setTimeIntervalSince1970:(double)fp8;
- (void)setObjectValue:(id)fp8;
- (void)setFont:(id)fp8;
- (void)setNeedsDisplay:(BOOL)fp8;
- (BOOL)underlinesText;
- (void)setUnderlinesText:(BOOL)fp8;

@end

@interface MessageTextView (RichTextConversion)
- (void)changeFont:(id)fp8;
- (void)underline:(id)fp8;
- (void)alignLeft:(id)fp8;
- (void)alignRight:(id)fp8;
- (void)alignCenter:(id)fp8;
- (void)alignJustified:(id)fp8;
- (void)changeColor:(id)fp8;
- (void)pasteFont:(id)fp8;
- (void)performOperation:(id)fp8;
@end

@interface LabelledTextAttachmentCell : NSTextAttachmentCell
{
    NSMutableAttributedString *_attrString;
    NSImage *_image;
    NSImage *_dimmedImage;
    NSString *_label;
    struct {
        unsigned int linkState:2;
        unsigned int isDisplayingLabel:1;
    } _flags;
}

- (id)labelFont;
- (id)labelColor;
- (id)initWithTextAttachment:(id)fp8;
- (void)dealloc;
- (void)setLabel:(id)fp8;
- (id)label;
- (void)setImage:(id)fp8;
- (id)image;
- (void)setIsDisplayingLabel:(BOOL)fp8;
- (BOOL)isDisplayingLabel;
- (id)attributedString;
- (void)_makeString;
- (void)_discardDimmedImage;
- (void)_makeDimmedImage;
- (id)dimmedImage;
- (void)setAttachment:(id)fp8;
- (struct _NSSize)cellSize;
- (struct _NSPoint)cellBaselineOffset;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)wantsToTrackMouse;
- (BOOL)wantsToTrackMouseForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32 untilMouseUp:(BOOL)fp36;
- (BOOL)trackLink:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(int)fp32;
- (void)resetCursorAndToolTipRect:(struct _NSRect)fp8 inView:(id)fp24;
- (unsigned int)linkState;
- (void)setLinkState:(int)fp8;
- (struct _NSRect)_rectForImageInRect:(struct _NSRect)fp8;
- (struct _NSRect)_rectForLinkInRect:(struct _NSRect)fp8;

@end

@interface NSTextAttachmentCell (ForNeatAttachmentFeatures)
- (void)resetCursorAndToolTipRect:(struct _NSRect)fp8 inView:(id)fp24;
@end

@interface MailTextAttachment : MimeTextAttachment
{
    unsigned int _isPossibleToDisplayAttachmentInline:1;
    unsigned int _isPossibleToDisplayAttachmentAsView:1;
    unsigned int _isDisplayingAttachmentInline:1;
}

+ (void)initialize;
- (id)initWithFileWrapper:(id)fp8;
- (id)initWithMimePart:(id)fp8 andFileWrapper:(id)fp12;
- (void)setIsPossibleToDisplayAttachmentInline:(BOOL)fp8;
- (BOOL)isPossibleToDisplayAttachmentInline;
- (BOOL)isDisplayingAttachmentInline;
- (void)setIsDisplayingAttachmentInline:(BOOL)fp8;
- (id)attachmentCell;
- (id)_getInlineImage;
- (void)_configureLabelForCell:(id)fp8;
- (id)toolTip;

@end

@interface MailTextAttachment (CustomAttachmentViewManagement)
+ (void)registerViewingClass:(Class)fp8 forMimeTypes:(id)fp12;
@end

@interface NSMutableAttributedString (MailTextAttachments)
- (void)convertToMailAttachmentsInRange:(struct _NSRange)fp8;
- (void)makeExportable;
@end

@interface ViewTextAttachmentCell : NSViewTextAttachmentCell
{
    NSView *_view;
    struct _NSSize _viewSize;
}

- (void)_viewFrameChanged;
- (void)_viewFrameChanged:(id)fp8;
- (id)initWithView:(id)fp8;
- (id)view;
- (id)viewWithFrame:(struct _NSRect)fp8 forView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (struct _NSSize)cellSize;
- (void)releaseView:(id)fp8;
- (void)dealloc;

@end

@interface ConcreteMessageMall : MessageMall
{
    NSMutableArray *_selectedMailboxUids;
    NSMutableArray *_allStores;
    NSMutableDictionary *_allMessagesByStore;
    NSMutableDictionary *_allNonDeletedMessagesByStore;
    NSMutableDictionary *_sortedMessagesByStore;
    NSMutableDictionary *_sortedNonDeletedMessagesByStore;
    NSMutableSet *_holdingStores;
    NSMutableArray *_filteredMessages;
    NSMutableArray *_filteredThreads;
    NSMutableSet *_hiddenMessages;
    NSMutableSet *_undeletedMessages;
    NSMutableSet *_focusedMessages;
    NSMutableDictionary *_searchRanks;
    float _highestSearchRank;
    NSMutableDictionary *_tempSearchRanks;
    NSMutableDictionary *_searchResultsByStore;
    NSMutableSet *_storesAddedBySearch;
    NSMutableSet *_storesToSearchWhenReady;
    NSMutableSet *_indexUpdateQueue;
    NSString *_activeSearchPhrase;
    NSMutableSet *_storesBeingOpened;
    NSString *_sortOrder;
    NSMutableDictionary *_messageThreadingDataByMessage;
    NSMutableDictionary *_messagesByMessageIDHeaderDigest;
    NSMutableDictionary *_messagesByInReplyToHeaderDigest;
    NSMutableDictionary *_messagesBySubject;
}

- (void)dealloc;
- (id)init;

@end

@interface MessageMall : MessageStore
{
    InvocationQueue *_filterTasks;
    InvocationQueue *_userTasks;
    unsigned int _sortedAscending:1;
    unsigned int _wantsToBeSortedAscending:1;
    unsigned int _includeDeleted:1;
    unsigned int _focused:1;
    unsigned int _showingSearchResults:1;
    unsigned int _searchTaskIsRunning:1;
    unsigned int _isInThreadedMode:1;
    unsigned int _wantsToBeInThreadedMode:1;
    int _activeSearchType;
    int _activeSearchTarget;
    unsigned int _currentSearchID;
    unsigned int _currentFilterSeriesID;
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
+ (id)allMessageMalls;
+ (void)registerMall:(id)fp8;
+ (void)deregisterMall:(id)fp8;
+ (BOOL)messageIsMemberOfNonJunkThread:(id)fp8;
- (id)init;
- (void)release;
- (void)dealloc;
- (BOOL)isOpened;
- (BOOL)filteredListIncludesAllMessages;
- (int)filteredMessagesCount;
- (id)filteredMessageAtIndex:(unsigned int)fp8;
- (id)filteredMessages;
- (void)setupRowDrawingInfo:(struct __CFDictionary *)fp8;
- (unsigned int)indexOfMessage:(id)fp8;
- (int)indexOfFilteredMessage:(id)fp8;
- (id)filteredThreads;
- (void)clearFilteredMessages;
- (BOOL)messageIsHidden:(id)fp8;
- (BOOL)isFocused;
- (void)setFocusedMessages:(id)fp8;
- (void)_setFocusedMessages:(id)fp8;
- (BOOL)isShowingSearchResults;
- (int)currentSearchType;
- (int)currentSearchTarget;
- (void)setSortOrder:(id)fp8 ascending:(BOOL)fp12;
- (id)sortOrder;
- (void)sortMessages:(id)fp8;
- (BOOL)includeDeleted;
- (void)setIncludeDeleted:(BOOL)fp8;
- (BOOL)isSortedAscending;
- (BOOL)isSortedByDateReceived;
- (void)setMailboxUids:(id)fp8;
- (void)_addNonDeletedMessagesInArray:(id)fp8;
- (void)_removeDeletedMessagesInArray:(id)fp8;
- (void)_rebuildNonDeletedMessagesForStoresOfMessagesInArray:(id)fp8;
- (void)_addStore:(id)fp8;
- (void)_filterInMessages:(id)fp8;
- (void)_filterInMessagesSynchronously:(id)fp8;
- (void)_filterOutMessages:(id)fp8 ignoreShowDeletedPreference:(BOOL)fp12;
- (BOOL)_filterOutMessagesSynchronously:(id)fp8;
- (void)_rebuildFromStores;
- (void)_resortUsingFunction:(void *)fp8;
- (void)_refilter;
- (void)_invertFilteredList;
- (id)_backgroundInvertFilteredList;
- (void)_gatherCountsFromStoresForTotalCount:(unsigned int *)fp8 totalSize:(unsigned int *)fp12 deletedCount:(unsigned int *)fp16 deletedSize:(unsigned int *)fp20;
- (void)totalCount:(unsigned int *)fp8 andSize:(unsigned int *)fp12;
- (void)deletedCount:(unsigned int *)fp8 andSize:(unsigned int *)fp12;
- (unsigned int)totalCount;
- (unsigned int)unreadCount;
- (void)hideMessages:(id)fp8;
- (void)unhideMessages:(id)fp8;
- (id)messagesToDeleteForMessages:(id)fp8;
- (void)deleteMessages:(id)fp8 allowMoveToTrash:(BOOL)fp12;
- (void)reallyDeleteMessages:(id)fp8 allowMoveToTrash:(BOOL)fp12 retainingStores:(id)fp16;
- (void)rebuildTableOfContentsAsynchronously;
- (void)structureDidChange;
- (void)structureDidChangeFromOpeningThread:(id)fp8 andSelectMessage:(id)fp12 animate:(BOOL)fp16;
- (void)structureDidChangeByClosingThread:(id)fp8 focusRow:(int)fp12 animate:(BOOL)fp16;
- (void)structureDidChangeWithChangedThreads:(id)fp8;
- (id)messageForMessageID:(id)fp8;
- (id)threadForMessageID:(id)fp8;
- (void)writeUpdatedMessageDataToDisk;
- (void)updateFilteredListForMessages:(id)fp8 flags:(id)fp12;
- (void)didOpen;
- (id)setFlagsFromDictionary:(id)fp8 forMessages:(id)fp12;
- (void)setJunkMailLevel:(int)fp8 forMessages:(id)fp12 trainJunkMailDatabase:(BOOL)fp16;
- (BOOL)canCompact;
- (void)doCompact;
- (BOOL)canRebuild;
- (BOOL)allowsIndexing;
- (id)storePath;
- (id)account;
- (id)displayName;
- (BOOL)_shouldChangeComponentMessageFlags;
- (BOOL)isIndexed;
- (void)searchForString:(id)fp8 in:(int)fp12 withOptions:(int)fp16;
- (void)reallySearchForString:(id)fp8 in:(int)fp12 withOptions:(int)fp16 ID:(unsigned int)fp20;
- (void)_indexedSearchForString:(id)fp8 inMailboxes:(id)fp12 ID:(unsigned int)fp16;
- (void)_searchFinished;
- (void)_cancelSearch;
- (BOOL)isSearching;
- (void)_storeIndexUpdateCompleted:(id)fp8;
- (void)performBruteForceSearchWithString:(id)fp8 inMessages:(id)fp12 options:(int)fp16 ID:(unsigned int)fp20;
- (id)filterMessagesForActiveQuery:(id)fp8;
- (id)copySearchRankForMessage:(id)fp8;
- (void)_normalizeSearchRanks;
- (void)updateUserInfoToLatestValues;
- (id)mailboxUid;
- (id)allMailboxUids;
- (id)selectedMailboxUids;
- (void)messageColorsNeedToBeReevaluated;
- (BOOL)isReadOnly;
- (id)stores;
- (int)compareByNumberMessage:(id)fp8 andMessage:(id)fp12 store:(id)fp16 andStore:(id)fp20 sortedAscending:(BOOL)fp24;
- (BOOL)deletedFlagForMessage:(id)fp8;
- (BOOL)_deletedFlagForMessage:(id)fp8 hiddenMessages:(id)fp12 undeletedMessages:(id)fp16;
- (BOOL)_shouldDisplayMessage:(id)fp8 hiddenMessages:(id)fp12 undeletedMessages:(id)fp16;
- (id)_messagesThatShouldBeDisplayed:(id)fp8 hiddenMessages:(id)fp12 undeletedMessages:(id)fp16;
- (void)_componentMessageFlagsChanged:(id)fp8;
- (void)_componentStoreDidOpen:(id)fp8;
- (void)_componentStoreStructureChanged:(id)fp8;
- (void)_componentStoreMessagesWereAdded:(id)fp8;
- (void)_componentStoreMessagesCompacted:(id)fp8;
- (void)_performFilterTask:(id)fp8 seriesID:(unsigned int)fp12;
- (void)_filterTaskCompleted:(id)fp8 seriesID:(unsigned int)fp12;
- (void)structureWillChangeFromOpeningThread:(id)fp8;
- (void)structureWillChangeFromClosingThread:(id)fp8 focusRow:(int)fp12 animate:(BOOL)fp16;
- (void)structureWillChange;
- (id)_backgroundResortUsingSortFunction:(void *)fp8;
- (void)_removeMembersOfOpenThreads:(id)fp8;
- (id)_insertMembersOfOpenThreads:(id)fp8 usingSortFunction:(void *)fp12 context:(struct _MessageSortingInformation)fp16;
- (id)_backgroundRefilterMessages:(id)fp8 stores:(id)fp12;
- (id)_backgroundMergeMessages:(id)fp8;
- (id)_backgroundSortNewFilteredMessages:(id)fp8;
- (void)_mergeMessages:(id)fp8 intoMessages:(id)fp12 newThreads:(id *)fp16 changedThreads:(id *)fp20 usingComparator:(void *)fp24;
- (id)_backgroundFilterOutMessages:(id)fp8 ignoreShowDeletedPreference:(BOOL)fp12;
- (BOOL)isInThreadedMode;
- (void)setIsInThreadedMode:(BOOL)fp8;
- (void)toggleThreadedMode;
- (id)_backgroundResetThreadInfoAndGroupByThread;
- (id)_backgroundGroupMessagesByThread;
- (id)_backgroundUngroupThreads;
- (void)openThreadAtIndex:(int)fp8 animate:(BOOL)fp12;
- (void)openThreadAtIndex:(int)fp8 andSelectMessage:(id)fp12 animate:(BOOL)fp16;
- (id)quietlyOpenThreadAtIndex:(unsigned int)fp8;
- (void)closeThreadAtIndex:(int)fp8 focusRow:(int)fp12 animate:(BOOL)fp16;
- (id)quietlyCloseThreadAtIndex:(unsigned int)fp8;
- (void)openThreadsWithIDs:(id)fp8;
- (void)openAllThreads;
- (void)closeAllThreads;
- (void)_setFilteredMessages:(id)fp8;
- (void)_setFilteredMessages:(id)fp8 changedMessages:(id)fp12 filteredThreads:(id)fp16 changedThreads:(id)fp20 changedFlags:(id)fp24 forSeriesID:(unsigned int)fp28;
- (id)routeMessages:(id)fp8 fromStores:(id)fp12;
- (void)_invalidate;
- (void)_invalidateInBackground;
- (void)_cancelAutosave;
- (void)_setNeedsAutosave;
- (void)addMessagesInSameThreadAsMessage:(id)fp8 toSet:(id)fp12;
- (id)repliesToMessage:(id)fp8;
- (id)parentOfMessage:(id)fp8;
- (BOOL)messageIsPartOfAThread:(id)fp8;
- (id)threadForMessage:(id)fp8;
- (id)threadAtIndex:(unsigned int)fp8;
- (id)filteredThreadForMessage:(id)fp8;
- (id)unfilteredThreadForMessage:(id)fp8;
- (id)filteredThreadsForMessages:(id)fp8;
- (BOOL)_messageIsMemberOfNonJunkThread:(id)fp8;
- (void)_deduceThreadHierarchyForMessages:(id)fp8 firstTime:(BOOL)fp12;
- (void)_clearThreadInfo;
- (void)_resetThreadInfoFromFilteredMessages;
- (void)_updateThreadInfoForMessages:(id)fp8;
- (int)_appendDescriptionOfDictionaryMemoryUsage:(id)fp8 named:(id)fp12 toString:(id)fp16;
- (id)memoryUsageDescription;

@end

@interface FilteredListInfo : NSObject
{
    NSMutableArray *filteredMessages;
    NSArray *changedMessages;
    NSMutableArray *filteredThreads;
    NSArray *changedThreads;
    NSDictionary *changedFlags;
}

+ (id)info;
- (void)dealloc;

@end

@interface MessageThreadingData : NSObject
{
    Message *parent;
    NSMutableSet *replies;
    MessageThread *thread;
}

- (id)description;
- (void)dealloc;

@end

@interface NSMutableSet (Convenience)
- (void)removeObjectsInArray:(id)fp8;
@end

@interface QuickTimeAttachmentView : NSMovieView
{
    NSString *_attachPath;
}

+ (void)initialize;
+ (id)viewForFileWrapper:(id)fp8;
- (id)menuForEvent:(id)fp8;
- (void)dealloc;

@end

@interface AddressPicker : NSWindowController
{
    NSView *placeholderPickerView;
    ABPeoplePickerView *pickerView;
}

+ (void)showOrHideAddressPicker;
+ (BOOL)isAddressPickerVisible;
+ (void)saveDefaults;
+ (void)restoreFromDefaults;
- (void)showOrHideWindow;
- (BOOL)isWindowVisible;
- (void)saveDefaults;
- (void)dealloc;
- (void)awakeFromNib;
- (id)windowNibName;
- (void)putSelectionInTo:(id)fp8;
- (void)putSelectionInCC:(id)fp8;
- (void)putSelectionInBestHeader:(id)fp8;
- (void)putSelectionInHeader:(id)fp8;
- (id)formattedAddressForRecord:(id)fp8;

@end

@interface AddressHistoryController : NSObject
{
    NSTableView *historyTableView;
    NSButton *addToAddressBookButton;
    NSWindow *window;
    NSSearchField *searchField;
    NSMutableArray *historyRecords;
    NSString *sortColumn;
    BOOL sortIsAscending;
    NSImage *sortAscendingImage;
    NSImage *sortDescendingImage;
    NSImage *addressBookPersonImage;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (void)showAddressHistory;
- (void)addToAddressBook:(id)fp8;
- (void)deleteFromHistory:(id)fp8;
- (void)search:(id)fp8;
- (void)cancelSearch:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)openAddressBook:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)tableView:(id)fp8 didClickTableColumn:(id)fp12;
- (void)sortHistory;
- (void)showColumnSortIndicator;
- (void)tableViewColumnDidMove:(id)fp8;
- (void)tableViewColumnDidResize:(id)fp8;
- (void)setUpToolTips;
- (id)view:(id)fp8 stringForToolTip:(int)fp12 point:(struct _NSPoint)fp16 userData:(void *)fp24;

@end

@interface Message (Chat)
+ (id)chatURLForEmails:(id)fp8;
@end

@interface PresenceTracker : NSObject
{
    NSMutableDictionary *personIDToStatus;
    NSMutableDictionary *emailToPerson;
    BOOL isListening;
    NSImage *availableStatusImage;
}

+ (id)sharedInstance;
- (id)availableStatusImage;
- (id)init;
- (void)dealloc;
- (void)startListening;
- (void)stopListening;
- (void)_daemonLaunched:(id)fp8;
- (void)_chatSetupIsComplete:(id)fp8;
- (void)_addEmailToPersonMapping:(id)fp8;
- (void)_rebuildEmailToUID;
- (void)_presenceChanged:(id)fp8;
- (id)presenceOfEmail:(id)fp8;
- (id)addressCardUIDForEmail:(id)fp8;
- (void)_addressBookChanged:(id)fp8;
- (void)_statusImageChanged:(id)fp8;
- (BOOL)_getNewAvailableStatusImage;

@end

@interface NonModalAlert : NSObject
{
    id _representedObject;
    NSPanel *_panel;
    NSTextField *_title;
    NSTextField *_message;
}

+ (void)runNonModalForObject:(id)fp8 error:(id)fp12;
+ (void)dismissNonModalAlertForObject:(id)fp8;
- (void)dealloc;
- (id)initWithError:(id)fp8 representedObject:(id)fp12;
- (void)show;
- (id)representedObject;
- (void)okClicked:(id)fp8;

@end

@interface NSAlert (MFErrorSupport)
+ (id)createAlertForError:(id)fp8 defaultButton:(id)fp12 alternateButton:(id)fp16 otherButton:(id)fp20;
@end

@interface NSObject (NonModalAlertPanel)
- (void)runNonModalAlertWithError:(id)fp8;
- (void)dismissNonModalAlert;
@end

@interface NSTextView (AtomicAddress)
- (void)fixAtomSelectionForSelectionRange:(struct _NSRange)fp8;
- (void)fixJoiningOfSelectedAtoms;
@end

@interface NSArray (AtomicAddress)
- (id)atomicAddressesOfType:(int)fp8;
- (id)attributedStringOfAddressesAttachments:(id *)fp8 type:(int)fp12;
@end

@interface NSAttributedString (AtomicAddress)
+ (id)atomicAddressFromDictionary:(id)fp8;
- (id)unatomicAddress;
- (id)dictionaryRepresentation;
- (id)atomicAddresses;
- (id)allAddresses;
- (id)addressAttachments;
- (id)unatomicAddresses;
- (id)replaceAttachmentsWithAddressesIncludeName:(BOOL)fp8;
- (BOOL)containsAddressAttachments;
- (id)stringWithAtomsExpanded;
- (id)stringOfAddressesWithAtomsExpandedIncludeName:(BOOL)fp8;
- (id)mutableCopyWithNewAttachments:(id *)fp8;
- (struct _NSRange)convertPlainTextRange:(struct _NSRange)fp8;
- (struct _NSRange)convertToPlainTextRange:(struct _NSRange)fp8;
- (void)testSpotlighting;
- (BOOL)knownToHaveNoRecord;
- (id)addressBookRecord;
- (void)displayCommasExceptAtEnd;
- (void)displayCommasForAllAddresses;
@end

@interface NSString (AtomicAddress)
- (id)atomicAddress;
- (id)atomicAddressStringForRepresentedRecord:(id)fp8 type:(int)fp12;
- (id)atomicAddressStringForRepresentedRecord:(id)fp8 type:(int)fp12 showComma:(BOOL)fp16;
- (id)atomicAddressArrayForRepresentedRecord:(id)fp8 type:(int)fp12;
- (id)atomicAddressWithRepresentedRecord:(id)fp8 type:(int)fp12;
- (id)atomicAddressWithRepresentedRecord:(id)fp8 type:(int)fp12 showComma:(BOOL)fp16;
@end

@interface DraggingTextView : NSTextView
{
}

+ (id)sharedAddressingFieldEditorForObject:(id)fp8;
- (void)mouseDown:(id)fp8;
- (id)typingAttributes;
- (void)setSelectedRange:(struct _NSRange)fp8;
- (void)setSelectedRange:(struct _NSRange)fp8 affinity:(int)fp16 stillSelecting:(BOOL)fp20;
- (struct _NSRange)selectionRangeForProposedRange:(struct _NSRange)fp8 granularity:(int)fp16;
- (void)layoutManager:(id)fp8 didCompleteLayoutForTextContainer:(id)fp12 atEnd:(BOOL)fp16;
- (void)delayedLayoutInvalidation:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)readSelectionFromPasteboard:(id)fp8 type:(id)fp12;
- (id)readablePasteboardTypes;
- (id)writablePasteboardTypes;
- (id)dragImageForSelectionWithEvent:(id)fp8 origin:(struct _NSPoint *)fp12;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (BOOL)writeSelectionToPasteboard:(id)fp8 type:(id)fp12;
- (id)acceptableDragTypes;
- (BOOL)dragSelectionWithEvent:(id)fp8 offset:(struct _NSSize)fp12 slideBack:(BOOL)fp20;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (id)searchString;
- (struct _NSRange)selectedSearchRange;
- (void)showSearchResultsRange:(struct _NSRange)fp8;
- (id)menuForEvent:(id)fp8;
- (id)attachmentForPoint:(struct _NSPoint)fp8;
- (id)attachmentForEvent:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;

@end

@interface AddressAttachment : NSTextAttachment
{
    NSString *address;
    NSString *name;
    int type;
    id addressBookRecord;
    BOOL isInitializing;
    BOOL suppressNotifications;
    BOOL isSenderAddress;
    BOOL isOriginalSenderAddress;
    BOOL knownToHaveNoRecord;
    NSFont *preferredFont;
}

+ (void)initialize;
+ (void)getRecordsForAddresses:(id)fp8;
+ (id)attributesForType:(int)fp8;
+ (void)resetAttributes;
+ (BOOL)domainIsExternal:(id)fp8;
+ (id)colorForExternalDomain;
+ (int)addressDisplayMode;
+ (void)setAddressDisplayMode:(int)fp8;
- (id)initWithAddress:(id)fp8 record:(id)fp12 type:(int)fp16;
- (id)initWithAddress:(id)fp8 record:(id)fp12 type:(int)fp16 showComma:(BOOL)fp20;
- (id)initWithFileWrapper:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)adjustFontSizeBy:(int)fp8;
- (id)drawingAttributes;
- (BOOL)isInitializing;
- (void)setAddress:(id)fp8;
- (id)address;
- (id)nonemptyAddress;
- (void)setName:(id)fp8;
- (id)name;
- (id)formattedAddress;
- (id)quotedFormattedAddress;
- (id)nameOrAddressForDisplay;
- (id)addressDomain;
- (void)writeToPasteboard:(id)fp8;
- (id)vCardString;
- (id)vCardRepresentation;
- (id)dictionaryRepresentation;
- (BOOL)hasToolTip;
- (id)toolTip;
- (int)type;
- (void)addressDisplayModeChanged:(id)fp8;
- (void)setAddressBookRecord:(id)fp8;
- (id)addressBookRecord;
- (void)removeAddressBookRecord;
- (void)setKnownToHaveNoRecord:(BOOL)fp8;
- (BOOL)knownToHaveNoRecord;
- (BOOL)isInAddressBook;
- (BOOL)isSenderAddress;
- (void)setIsSenderAddress;
- (BOOL)isOriginalSenderAddress;
- (void)setIsOriginalSenderAddress;
- (void)domainForMatchingDidChange;
- (BOOL)isSelected;
- (void)setIsSelected:(BOOL)fp8;
- (void)setRightSideHasSelectedText:(BOOL)fp8;
- (void)setRightSideHasSelectedAtom:(BOOL)fp8;
- (void)setLeftSideHasSelection:(BOOL)fp8;
- (id)attachmentCell;
- (void)onlinePresenceChanged:(id)fp8;
- (void)antialiasingSettingsChanged:(id)fp8;

@end

@interface AddressAttachmentCell : NSTextAttachmentCell
{
    AddressAttachment *attachment;
    struct _NSRect drawingRect;
    struct _NSRect hotSpot;
    NSMenu *menu;
    unsigned int characterIndex;
    struct _NSSize cellSize;
    BOOL isSpotlighted;
    BOOL shouldTestForSpotlighting;
    BOOL shouldShowComma;
    struct MVClientCacheBlock *imageCache;
    struct MVClientCacheBlock *imageCacheForCommas;
    struct MVClientCacheBlock *imageCacheForSpotlighting;
    NSMutableDictionary *textAttributesRegular;
    NSMutableDictionary *textAttributesWhiteText;
    struct _NSSize cachedStringSize;
    struct isCachedStruct isCached;
    unsigned int isSelected:1;
    unsigned int leftSideHasSelection:1;
    unsigned int rightSideHasSelectedText:1;
    unsigned int rightSideHasSelectedAtom:1;
    unsigned int overrideRightSideSelection:1;
    unsigned int overrideLeftSideSelection:1;
    unsigned int hideLeftSideMargin:1;
    unsigned int subtractLeftSideMarginFromRightSide:1;
}

+ (void)initialize;
+ (int)sizeForCellOfType:(int)fp8 withAddress:(id)fp12;
+ (BOOL)isOnLineAddress:(id)fp8;
- (id)initImageCell:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)addressAttachment;
- (void)setAttachment:(id)fp8;
- (void)dealloc;
- (int)characterIndex;
- (struct _NSRect)drawingRect;
- (struct _NSRect)visibleRect;
- (struct _NSRect)atomBoundsRectForCellFrame:(struct _NSRect)fp8;
- (struct _NSRect)atomBoundsRect;
- (id)dragImage;
- (id)textAttributesWhiteText;
- (id)textAttributesRegular;
- (id)view:(id)fp8 stringForToolTip:(int)fp12 point:(struct _NSPoint)fp16 userData:(void *)fp24;
- (void)resetCursorAndToolTipRect:(struct _NSRect)fp8 inView:(id)fp24;
- (id)menu;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)isOnLine;
- (void)openChat:(id)fp8;
- (void)openNewMessage:(id)fp8;
- (void)addToAddressBook:(id)fp8;
- (void)openInAddressBook:(id)fp8;
- (void)removeFromAddressHistory:(id)fp8;
- (void)changeAddress:(id)fp8;
- (void)copyAddressToClipboard:(id)fp8;
- (BOOL)isSelected;
- (void)setIsSelected:(BOOL)fp8;
- (BOOL)rightSideHasSelectedText;
- (void)setRightSideHasSelectedText:(BOOL)fp8;
- (void)setRightSideHasSelectedAtom:(BOOL)fp8;
- (BOOL)leftSideHasSelection;
- (void)setLeftSideHasSelection:(BOOL)fp8;
- (void)setOverrideRightSideSelection:(BOOL)fp8;
- (void)setOverrideLeftSideSelection:(BOOL)fp8;
- (void)testSpotlighting;
- (void)setShouldShowComma:(BOOL)fp8;
- (void)selectedAddressChanged;
- (void)fontChanged;
- (void)sizeChanged;
- (void)addressBookRecordChanged;
- (void)recacheString;
- (void)cacheStringImage:(id)fp8 whiteText:(BOOL)fp12 withComma:(BOOL)fp16;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (void)_drawAtomPartsWithRect:(struct _NSRect)fp8 cellFrame:(struct _NSRect)fp24;
- (void)_drawAtomWithRect:(struct _NSRect)fp8 cellFrame:(struct _NSRect)fp24;
- (struct _NSSize)cellSize;
- (struct _NSSize)sizeOfString:(id)fp8;
- (struct _NSRect)cellFrameForTextContainer:(id)fp8 proposedLineFragment:(struct _NSRect)fp12 glyphPosition:(struct _NSPoint)fp28 characterIndex:(unsigned int)fp36;
- (struct _NSPoint)cellBaselineOffset;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32 untilMouseUp:(BOOL)fp36;
- (BOOL)wantsToTrackMouse;
- (BOOL)wantsToTrackMouseForEvent:(id)fp8;
- (BOOL)wantsToTrackMouseForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32;
- (BOOL)shouldBeSpotlightedInView:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)delayedMouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)otherAtomBecameSpotlighted:(id)fp8;

@end

@interface SingleMessageViewer : MessageViewer <MVSelectionOwner>
{
    MessageStore *messageStore;
}

+ (id)viewerForMessage:(id)fp8 showAllHeaders:(BOOL)fp12 viewingState:(id)fp16;
+ (void)restoreFromDefaults;
+ (void)saveDefaultsOmittingViewer:(id)fp8;
- (id)initForViewingMessage:(id)fp8 showAllHeaders:(BOOL)fp12 viewingState:(id)fp16;
- (id)initWithSavedDefaults:(id)fp8;
- (void)dealloc;
- (id)messageIDDictionary;
- (void)_setupFromDefaults;
- (void)showAndMakeKey:(BOOL)fp8;
- (void)_restoreViewer;
- (id)_saveDefaults;
- (void)takeOverAsSelectionOwner;
- (void)resignAsSelectionOwner;
- (id)selectedMessages;
- (void)messageFlagsDidChange:(id)fp8;
- (void)_setupToolBar;
- (BOOL)_isViewingMessage:(id)fp8;
- (BOOL)_selectionContainsMessagesWithReadStatusEqualTo:(BOOL)fp8;
- (BOOL)_selectionContainsMessagesWithFlaggedStatusEqualTo:(BOOL)fp8;
- (BOOL)_selectionContainsMessagesWithJunkMailLevelEqualTo:(int)fp8;
- (BOOL)_selectionContainsMessagesWithAttachments;
- (void)deleteMessages:(id)fp8;
- (void)deleteMessagesAllowingMoveToTrash:(BOOL)fp8;
- (void)_replyMessageWithType:(int)fp8;
- (void)forwardMessage:(id)fp8;
- (void)redirectMessage:(id)fp8;
- (BOOL)send:(id)fp8;
- (void)replaceWithEditorForType:(int)fp8;
- (void)_changeFlag:(id)fp8 state:(BOOL)fp12 forMessages:(id)fp16 undoActionName:(id)fp20;
- (void)keyDown:(id)fp8;
- (id)selection;
- (void)selectMessages:(id)fp8;
- (id)currentDisplayedMessage;
- (id)messageStore;
- (BOOL)transferSelectionToMailbox:(id)fp8 deleteOriginals:(BOOL)fp12;

@end

@interface MessageViewingState : NSObject
{
    NSAttributedString *_headerAttributedString;
    NSDictionary *_addressAttachments;
    NSDictionary *_plainAddresses;
    NSSet *_expandedAddressKeys;
    NSAttributedString *_attachmentsDescription;
    NSArray *_headerOrder;
    MimeBody *mimeBody;
    id document;
    MFError *error;
    int headerIndent;
    int headerFontAdjustmentDebt;
    unsigned int preferredAlternative:23;
    unsigned int accountWasOffline:1;
    unsigned int dontCache:1;
    unsigned int showAllHeaders:1;
    unsigned int showDefaultHeaders:1;
    unsigned int isPrinting:1;
    unsigned int viewSource:1;
    unsigned int showControlChars:1;
    unsigned int showAttachments:1;
    unsigned int downloadRemoteURLs:1;
    unsigned int triedToDownloadRemoteURLs:1;
    unsigned int urlificationDone:1;
    unsigned int preferredEncoding;
    ActivityMonitor *monitor;
    NSString *sender;
    id displayer;
}

+ (void)initialize;
- (void)dealloc;
- (id)init;
- (id)mimeBody;
- (id)headerAttributedString;
- (void)setHeaderAttributedString:(id)fp8;
- (id)plainAddresses;
- (void)setPlainAddresses:(id)fp8;
- (id)addressAttachments;
- (void)setAddressAttachments:(id)fp8;
- (id)expandedAddressKeys;
- (void)setExpandedAddressKeys:(id)fp8;
- (id)attachmentsDescription;
- (void)setAttachmentsDescription:(id)fp8;
- (id)headerOrder;
- (void)setHeaderOrder:(id)fp8;

@end

@interface TextMessageDisplay : NSObject <MessageContentDisplay>
{
    NSScrollView *messageScroll;
    MessageTextView *textView;
    MessageHeaderDisplay *headerDisplay;
    MessageBody *messageBody;
    BOOL attachmentsMayBeLoading;
    BOOL needsSetUp;
}

+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
- (void)dealloc;
- (id)findTarget;
- (id)contentView;
- (id)textView;
- (void)awakeFromNib;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16;
- (void)prepareToRemoveView;
- (id)selectedText;
- (void)highlightSearchText:(id)fp8;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (void)displayAttributedString:(id)fp8;
- (id)attachmentContextMenu;
- (id)messageTextView:(id)fp8 willReturnMenu:(id)fp12 forEvent:(id)fp16;
- (id)directoryForAttachment:(id)fp8;
- (void)textView:(id)fp8 clickedOnCell:(id)fp12 inRect:(struct _NSRect)fp16 atIndex:(unsigned int)fp32;
- (void)textView:(id)fp8 doubleClickedOnCell:(id)fp12 inRect:(struct _NSRect)fp16 atIndex:(unsigned int)fp32;
- (void)textView:(id)fp8 draggedCell:(id)fp12 inRect:(struct _NSRect)fp16 event:(id)fp32 atIndex:(unsigned int)fp36;
- (BOOL)textView:(id)fp8 clickedOnLink:(id)fp12 atIndex:(unsigned int)fp16;
- (id)textView:(id)fp8 willWriteSelectionToPasteboard:(id)fp12 type:(id)fp16;
- (id)textView:(id)fp8 dragImageForSelectionWithEvent:(id)fp12 origin:(struct _NSPoint *)fp16;
- (id)dragImageForSelection;
- (void)textViewDidSelectAll:(id)fp8;
- (void)selectAll;
- (void)textView:(id)fp8 setSelectedRange:(struct _NSRange)fp12 affinity:(int)fp20 stillSelecting:(BOOL)fp24;
- (void)headerTextIsChangingSelectionToRange:(struct _NSRange)fp8;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;

@end

@interface FadingMessageDisplay : NSObject <MessageContentDisplay>
{
    NSTimer *_fadeTimer;
    int _fadeStepCounter;
    TextMessageDisplay *_textMessageDisplay;
    NSImageView *_snapshotView;
    MessageTilingView *_originalView;
}

+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
- (void)dealloc;
- (void)fadeOneNotch:(id)fp8;
- (id)contentView;
- (id)textView;
- (id)copySnapshotOfRect:(struct _NSRect)fp8 inView:(id)fp24;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16;
- (void)prepareToRemoveView;
- (id)selectedText;
- (void)highlightSearchText:(id)fp8;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (void)setTextMessageDisplay:(id)fp8;
- (id)findTarget;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;

@end

@interface FindPanel : NSObject
{
    NSButton *findNextButton;
    NSTextField *findTextField;
    NSButton *ignoreCaseButton;
    NSMatrix *replaceAllScopeMatrix;
    NSTextField *replaceTextField;
    NSTextField *statusField;
    NSString *findString;
    BOOL lastFindWasSuccessful;
}

+ (id)sharedInstance;
- (id)init;
- (void)_appDidActivate;
- (void)dealloc;
- (id)findString;
- (void)setFindString:(id)fp8;
- (void)setFindString:(id)fp8 writeToPasteboard:(BOOL)fp12;
- (id)findPanel;
- (void)orderFrontFindPanel:(id)fp8;
- (void)findNextAndOrderFindPanelOut:(id)fp8;
- (void)findNext:(id)fp8;
- (void)findPrevious:(id)fp8;
- (void)ignoreCaseButtonClicked:(id)fp8;
- (void)replace:(id)fp8;
- (void)replaceAndFind:(id)fp8;
- (void)replaceAll:(id)fp8;

@end

@interface NSString (FindPanelSupport)
- (struct _NSRange)findString:(id)fp8 selectedRange:(struct _NSRange)fp12 options:(unsigned int)fp20 wrap:(BOOL)fp24;
@end

@interface NSTextView (FindPanelTarget)
- (void)jumpToSelection:(id)fp8;
- (void)takeFindStringFromSelection:(id)fp8;
- (BOOL)findString:(id)fp8 options:(unsigned int)fp12;
- (BOOL)canReplace;
- (unsigned int)replaceString:(id)fp8 withString:(id)fp12 options:(unsigned int)fp16;
@end

@interface MessageListCell : NSImageCell
{
    NSTextFieldCell *_textCell;
    NSString *_stringValue;
    float _maxHeight;
    float _maxWidth;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)_textCell;
- (void)setFont:(id)fp8;
- (void)setMaxHeight:(float)fp8;
- (float)maxHeight;
- (void)setMaxWidth:(float)fp8;
- (float)maxWidth;
- (struct _NSSize)_imageSizeForCellFrame:(struct _NSRect)fp8;
- (struct _NSPoint)_drawOriginForSize:(struct _NSSize)fp8 inRect:(struct _NSRect)fp16;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setObjectValue:(id)fp8;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;

@end

@interface MessageListHeaderCell : NSTableHeaderCell
{
    MessageListCell *_realCell;
    int _imageAlignment;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setImageAlignment:(int)fp8;

@end

@interface MessageHeaderDisplay : NSObject
{
    MessageHeaderView *headerView;
    MessageContentController *contentController;
    MessageTextContainer *specialContainer;
    NSImageView *senderImageView;
    NSString *unloadedSender;
    float oldHeaderViewWidth;
    BOOL isCalculatingAddressLines;
    BOOL isForPrinting;
    BOOL isViewingSource;
}

+ (id)copyHeadersForMessage:(id)fp8 viewingState:(id)fp12;
+ (void)setUpAttachmentsDescriptionForMessage:(id)fp8 viewingState:(id)fp12;
+ (id)formattedAttachmentsSizeForAttachments:(id)fp8;
+ (id)formattedAttachmentsSizeForMessage:(id)fp8;
+ (int)numberOfAddressesThatFitOnTwoLinesAttachments:(id)fp8 strings:(id)fp12 inTextContainer:(id)fp16 withIndent:(int)fp20 andVerticalLocation:(int)fp24 forPrinting:(BOOL)fp28;
+ (id)linkForMoreAddressesCount:(int)fp8 headerKey:(id)fp12 font:(id)fp16;
+ (id)copyViewingState:(id)fp8;
+ (void)setUpEncryptionAndSignatureImageForMessage:(id)fp8 viewingState:(id)fp12;
+ (id)orderedKeys:(id)fp8 withTableViewOrder:(id)fp12;
+ (id)regularParagraphStyleForTabPosition:(int)fp8;
+ (id)addressParagraphStyleForTabPosition:(int)fp8 withLineBreakMode:(int)fp12 forPrinting:(BOOL)fp16;
+ (void)setTabsWithPosition:(int)fp8 inAttributedString:(id)fp12 withKeys:(id)fp16 addressKeys:(id)fp20 addressAttachments:(id)fp24 forPrinting:(BOOL)fp28;
+ (id)attributedStringOfLength:(int)fp8 usingAttachments:(id)fp12 startingAtIndex:(int)fp16 strings:(id)fp20 newAttachments:(id *)fp24 forPrinting:(BOOL)fp28;
+ (void)rangeOfAddresses:(struct _NSRange *)fp8 rangeOfLink:(struct _NSRange *)fp12 forKey:(id)fp16 inAttributedString:(id)fp20;
- (void)dealloc;
- (void)awakeFromNib;
- (void)setUp;
- (void)display:(id)fp8;
- (void)prepareToRemoveView;
- (void)displayAttributedString:(id)fp8;
- (void)headerViewFrameChanged:(id)fp8;
- (void)recalculateAddressLinesShouldDisplay:(BOOL)fp8;
- (void)showAllAddressesForKey:(id)fp8;
- (id)textView:(id)fp8 willWriteSelectionToPasteboard:(id)fp12 type:(id)fp16;
- (BOOL)textView:(id)fp8 clickedOnLink:(id)fp12 atIndex:(unsigned int)fp16;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (id)selectedText;
- (id)textView:(id)fp8 dragImageForSelectionWithEvent:(id)fp12 origin:(struct _NSPoint *)fp16;
- (id)dragImageForSelection;
- (void)textViewDidSelectAll:(id)fp8;
- (void)selectAll;
- (void)textView:(id)fp8 setSelectedRange:(struct _NSRange)fp12 affinity:(int)fp20 stillSelecting:(BOOL)fp24;
- (void)messageTextIsChangingSelectionToRange:(struct _NSRange)fp8;
- (void)_addressPhotoLoaded:(id)fp8;
- (id)textView;
- (void)textView:(id)fp8 clickedOnCell:(id)fp12 event:(id)fp16 inRect:(struct _NSRect)fp20 atIndex:(unsigned int)fp36;
- (void)textView:(id)fp8 draggedCell:(id)fp12 inRect:(struct _NSRect)fp16 event:(id)fp32 atIndex:(unsigned int)fp36;
- (void)layoutManager:(id)fp8 didCompleteLayoutForTextContainer:(id)fp12 atEnd:(BOOL)fp16;
- (void)setIsForPrinting:(BOOL)fp8;

@end

@interface MessageTilingView : NSView
{
    NSTextView *headerView;
    NSView *bodyView;
    AttachmentsView *attachmentsView;
    NSImageView *senderImageView;
    unsigned int _doneInitializing:1;
    unsigned int _shouldShowSeparator:1;
    unsigned int _tilingSubviews:1;
    unsigned int _bodyViewIsLoaded:1;
    unsigned int _okayToResize:1;
    unsigned int _hasResizedBody:1;
}

- (void)awakeFromNib;
- (void)dealloc;
- (id)attachmentsView;
- (id)senderImageView;
- (id)bodyView;
- (void)setBodyView:(id)fp8;
- (void)showAttachmentsView:(BOOL)fp8;
- (void)showSeparator:(BOOL)fp8;
- (void)showSenderImage:(BOOL)fp8;
- (BOOL)isFlipped;
- (void)subviewFrameChanged:(id)fp8;
- (struct _NSSize)contentSize;
- (void)resizeWithOldSuperviewSize:(struct _NSSize)fp8;
- (void)resizeSubviewsWithOldSize:(struct _NSSize)fp8;
- (void)tile;
- (void)drawRect:(struct _NSRect)fp8;
- (void)setBodyViewIsLoaded:(BOOL)fp8;
- (BOOL)knowsPageRange:(struct _NSRange *)fp8;
- (BOOL)isOpaque;

@end

@interface SenderImageCell : NSImageCell
{
}

- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface NSView (TilingSupport)
- (void)adjustForTilingView:(id)fp8 oldSize:(struct _NSSize)fp12;
- (float)desiredWidth;
@end

@interface ImageCacheManager : NSObject
{
    struct MVCache *imageCaches;
    NSMutableDictionary *clientToCacheAndLocationMapping;
}

+ (id)imageCacheManager;
- (void)dealloc;
- (struct MVClientCacheBlock *)cacheWithWidth:(int)fp8;
- (struct MVClientCacheBlock *)emptyBlock;
- (struct MVClientCacheBlock *)blockWithWidth:(int)fp8;
- (void)releaseCacheBlock:(struct MVClientCacheBlock *)fp8;
- (void)checkEmptyCaches;
- (struct MVCache *)lastCache;

@end

@interface MessageHeaderView : NSTextView
{
    NSMutableArray *trackingRectTags;
    BOOL isTrackingMouse;
}

- (void)awakeFromNib;
- (void)dealloc;
- (void)keyDown:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)trackHeaderAddresses:(id)fp8 replacingPreviousAddresses:(BOOL)fp12;
- (void)addressAtomsWereUpdated:(id)fp8;
- (void)addressAttachmentSizeChanged:(id)fp8;
- (void)addressAppearanceChanged:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)originalSelectAll:(id)fp8;
- (void)setSelectedRange:(struct _NSRange)fp8 affinity:(int)fp16 stillSelecting:(BOOL)fp20;
- (void)setSelectedRange:(struct _NSRange)fp8;
- (struct _NSRange)selectionRangeForProposedRange:(struct _NSRange)fp8 granularity:(int)fp16;
- (id)dragImageForSelectionWithEvent:(id)fp8 origin:(struct _NSPoint *)fp12;
- (id)originalDragImageForSelectionWithEvent:(id)fp8 origin:(struct _NSPoint *)fp12;
- (struct _NSRect)_cellFrameForAttachment:(id)fp8 atCharIndex:(int)fp12;
- (void)resetCursorRects;
- (id)writablePasteboardTypes;
- (BOOL)writeSelectionToPasteboard:(id)fp8 type:(id)fp12;
- (id)menuForEvent:(id)fp8;
- (id)attachmentForPoint:(struct _NSPoint)fp8;
- (id)attachmentForEvent:(id)fp8;
- (id)accessibilityAttributeValue:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;

@end

@interface AttachmentsView : NSView
{
    NSButton *disclosureButton;
    NSTextField *descriptionField;
    NSButton *saveButton;
    MessageTextView *attachmentsTextView;
    NSImage *paperclip;
    struct _NSPoint paperclipPoint;
    NSString *attachmentsDirectory;
    int headerIndent;
    struct _NSRect rectToAvoid;
    NSArray *attachments;
}

+ (id)newAttachmentsView;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)awakeFromNib;
- (void)dealloc;
- (BOOL)isFlipped;
- (void)display:(id)fp8;
- (void)prepareToRemoveView;
- (void)showAttachmentsArea:(BOOL)fp8 viewingState:(id)fp12;
- (void)positionSubviewsShowingAttachmentsTextView:(BOOL)fp8;
- (void)dontDrawInSenderImage;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isOpaque;
- (id)attachmentContextMenu;
- (void)textView:(id)fp8 doubleClickedOnCell:(id)fp12 inRect:(struct _NSRect)fp16 atIndex:(unsigned int)fp32;
- (void)textView:(id)fp8 draggedCell:(id)fp12 inRect:(struct _NSRect)fp16 event:(id)fp32 atIndex:(unsigned int)fp36;
- (id)directoryForAttachment:(id)fp8;
- (void)subviewFrameChanged:(id)fp8;
- (void)mouseDown:(id)fp8;
- (id)dragImageLowerLeft:(struct _NSPoint *)fp8;

@end

@interface AutosizingButton : NSButton
{
}

- (void)_setupAlternateImage;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)setTitle:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface DisclosureButtonCell : NSButtonCell
{
    NSImage *onStateHighlightImage;
    NSImage *offStateHighlightImage;
    NSImage *intermediateImage;
    int stage;
    BOOL shouldDraw;
    BOOL shouldOpenUpward;
}

- (id)initImageCell:(id)fp8;
- (void)setShouldDrawButton:(BOOL)fp8;
- (void)setShouldOpenUpward:(BOOL)fp8;
- (void)dealloc;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface MailCopyCommand : NSCloneCommand
{
    id _originalScriptCommandDefinition;
}

- (id)initWithCommandDescription:(id)fp8;
- (void)dealloc;
- (id)performDefaultImplementation;

@end

@interface MailMoveCommand : NSMoveCommand
{
    id _originalScriptCommandDefinition;
}

+ (void)_performBackgroundCommand:(id)fp8 copyMessages:(id)fp12 fromStores:(id)fp16 toMailboxUid:(id)fp20 shouldDelete:(BOOL)fp24;
- (id)initWithCommandDescription:(id)fp8;
- (void)dealloc;
- (id)performDefaultImplementation;

@end

@interface DefaultApplicationPopUpButton : NSPopUpButton
{
    NSURL *_appURL;
    int _index;
    NSArray *_schemes;
}

- (id)mainScheme;
- (void)setHandler:(id)fp8 forScheme:(id)fp12;
- (id)imageForURL:(id)fp8;
- (int)addItemToPopup:(id)fp8;
- (void)populateSchemeHandlerPopupWithURL:(id)fp8;
- (id)copyDefaultURLForScheme:(id)fp8;
- (void)selectDefaultMailClientAtIndex:(int)fp8;
- (void)selectItemInPopup:(id)fp8;
- (void)setNewApplication;
- (void)selectNewAppSelected:(id)fp8;
- (void)sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)configurePopUpForURLSchemes:(id)fp8 usingExampleURLString:(id)fp12;

@end

@interface WebMessageDisplay : WebMessageController <MessageContentDisplay>
{
}

+ (void)initialize;
+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
- (void)documentResized;
- (id)contentView;
- (id)textView;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16;
- (void)prepareToRemoveView;
- (void)highlightSearchText:(id)fp8;
- (id)selectedText;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (id)findTarget;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;

@end

@interface WebHTMLView (MailExtras)
- (void)takeFindStringFromSelection:(id)fp8;
- (BOOL)findString:(id)fp8 options:(unsigned int)fp12;
- (BOOL)autoscroll:(id)fp8;
@end

@interface MessageWebView : WebView
{
}

- (id)initWithFrame:(struct _NSRect)fp8 frameName:(id)fp24 groupName:(id)fp28;
- (void)keyDown:(id)fp8;
- (void)adjustForTilingView:(id)fp8 oldSize:(struct _NSSize)fp12;
- (void)viewWillMoveToSuperview:(id)fp8;

@end

@interface ApplescriptEmailImporter : EmailImporter
{
    NSMutableArray *_mailboxArray;
}

- (id)explanatoryText;
- (id)prepareForImport;
- (id)statusLine;
- (void)readMailbox:(id)fp8 intoFileHandle:(id)fp12;
- (void)importFinished;
- (id)scriptName;
- (id)messageSourceForMessage:(id)fp8;
- (void)processMessageViaApplescript:(int)fp8 fileHandle:(id)fp12 currentMailbox:(id)fp16;
- (id)dataForMessageString:(id)fp8;
- (BOOL)topLevelMailboxes;
- (id)subMailboxes:(id)fp8;
- (void)prepareImportArray;
- (void)dealloc;

@end

@interface EmailerEmailImporter : ApplescriptEmailImporter
{
}

+ (id)name;
- (id)preProcessSourceData:(id)fp8;
- (id)scriptName;
- (id)messageSourceForMessage:(id)fp8;
- (id)creatorCode;

@end

@interface EmailImporter : Importer
{
    NSString *_sourceFolderPath;
    NSString *_destinationFolderPath;
    NSString *_attachmentBeingSearchedFor;
    NSString *_lastDirectoryFound;
    NSString *_temporaryImportFolderPath;
    char *_lineDelimiter;
    char *_fromSpaceSeparator;
    NSData *_newline;
    NSData *_greaterThanSign;
    NSData *_fromSpace;
}

- (id)init;
- (void)performImport;
- (void)revealMailbox:(id)fp8;
- (void)importFinished;
- (id)importFinishedText;
- (id)statusLine;
- (void)cleanup;
- (void)readMailbox:(id)fp8 intoFileHandle:(id)fp12;
- (void)processUserSelection;
- (void)importMailbox:(id)fp8;
- (id)preProcessSourceData:(id)fp8;
- (char *)lineDelimiter;
- (id)regexForAttachmentName:(id)fp8;
- (id)destinationFolderPath;
- (id)destinationFolderName;
- (void)setLineDelimiter:(char *)fp8;
- (char *)fromSpaceSeparator;
- (void)setFromSpaceSeparator:(char *)fp8;
- (id)sourceFolder;
- (void)setSourceFolder:(id)fp8;
- (void)appendMessageData:(id)fp8 toFileHandle:(id)fp12;
- (void)writeLinesOfData:(id)fp8 toFileHandle:(id)fp12;
- (void)updateSubjectStringForMessageHeaders:(id)fp8;
- (void)convertChar:(BOOL)fp8 toChar:(BOOL)fp12 inBytes:(char *)fp16 length:(int)fp20;
- (void)removeTemporaryImportFolder;
- (id)temporaryImportFolderPath;
- (id)searchForValidItemInsideDirectory:(id)fp8 validitySelector:(SEL)fp12 searchDepth:(int)fp16;
- (id)regenerateMessageData:(id)fp8 isHTML:(BOOL)fp12 isRich:(BOOL)fp16;
- (id)createAttachmentText:(id)fp8 isHTML:(BOOL)fp12;
- (id)locateAttachments:(id)fp8 inFolder:(id)fp12;
- (id)copyAttachmentsToMailFolder:(id)fp8;
- (id)_newline;
- (id)_greaterThanSign;
- (id)_fromSpace;
- (void)dealloc;

@end

@interface EntourageEmailImporter : ApplescriptEmailImporter
{
}

+ (id)name;
- (id)creatorCode;

@end

@interface EudoraEmailImporter : FilesystemEmailImporter
{
}

+ (id)name;
- (id)explanatoryText;
- (char *)fromString;
- (BOOL)isValidMailbox:(id)fp8;
- (id)preProcessSourceData:(id)fp8;
- (struct _NSRange)_rangeOfDataContainedByTag:(char *)fp8 endTag:(char *)fp12 inData:(id)fp16;
- (void)_stripTag:(char *)fp8 fromData:(id)fp12;
- (id)_attachmentsInEudoraMessage:(id)fp8;
- (BOOL)_isAttachmentBeingSearchedFor:(id)fp8;

@end

@interface FilesystemEmailImporter : EmailImporter
{
    char *fromSpaceDelimiter;
}

- (id)prepareForImport;
- (void)processUserSelection;
- (void)readMailbox:(id)fp8 intoFileHandle:(id)fp12;
- (id)pathExtension;
- (char *)fromString;
- (BOOL)isValidMailbox:(id)fp8;
- (void)sniffLineDelimiterFromData:(id)fp8;
- (void)verifyFromSpaceHeaderForScanner:(id)fp8 dataLength:(int)fp12;

@end

@interface ImportController : NSObject
{
    NSWindow *_importWindow;
    NSTabView *_tabView;
    NSTextField *_importHeaderText;
    NSTextField *_statusLine;
    NSTextField *_explanatoryText;
    NSTextField *_importFinished;
    NSButton *_forwardButton;
    NSButton *_cancelButton;
    NSButton *_backButton;
    NSMatrix *_importClients;
    NSMatrix *_importTypes;
    NSTableView *_tableView;
    NSProgressIndicator *_progressBar;
    NSProgressIndicator *_progressWheel;
    NSTextField *_textFieldAbove;
    NSTextField *_textFieldBelow;
    NSArray *_clients;
    NSDictionary *_client;
    BOOL _importHasStarted;
    int currentTab;
    id _importer;
    NSMutableArray *_importers;
    NSMutableArray *_startingImporters;
    double _currentTime;
    double _referenceTime;
    double _interval;
}

+ (id)sharedImportController;
+ (void)setSharedImportController:(id)fp8;
- (void)awakeFromNib;
- (void)show:(id)fp8;
- (void)importClientSelected:(id)fp8;
- (void)forwardClicked:(id)fp8;
- (void)createNewImporter;
- (void)runImporter;
- (void)presentAlertSheetWithString:(id)fp8;
- (void)moveToTab:(int)fp8;
- (void)backClicked:(id)fp8;
- (void)cancelClicked:(id)fp8;
- (BOOL)windowShouldClose:(id)fp8;
- (void)importFinished;
- (void)askForMailboxLocation;
- (void)openPanelSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)setStatusLine:(id)fp8;
- (void)clearStatusLine;
- (void)updateTextField:(id)fp8 withValue:(id)fp12;
- (void)setTextFieldAbove:(id)fp8;
- (void)setTextFieldBelow:(id)fp8;
- (void)setExplanatoryText:(id)fp8;
- (void)reloadTableView;
- (void)initializeProgressIndicator;
- (void)_updateProgressIndicatorByValue:(id)fp8;
- (void)updateProgressIndicatorWithItem:(id)fp8;
- (void)updateProgressIndicatorByValue:(float)fp8;
- (BOOL)shouldUpdateTextFields;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableView:(id)fp8 didClickTableColumn:(id)fp12;
- (void)cleanup;
- (void)dealloc;

@end

@interface Importer : NSObject
{
    ImportController *_delegate;
    NSMutableArray *_importArray;
    NSString *_applicationString;
    NSArray *_importFields;
    int _errorNumber;
    BOOL _importCanceled;
}

+ (id)name;
- (id)init;
- (id)name;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (id)importArray;
- (void)clearImportArray;
- (id)importArrayEnumerator;
- (void)addItemToImportArray:(id)fp8;
- (int)countOfEnabledItems;
- (BOOL)importCanceled;
- (void)setImportCanceled:(BOOL)fp8;
- (id)importFields;
- (void)setImportFields:(id)fp8;
- (void)sortArray:(id)fp8;
- (id)explanatoryText;
- (id)statusLine;
- (id)importFinishedText;
- (id)creatorCode;
- (void)cleanup;
- (id)prepareForImport;
- (void)performImport;
- (void)importFinished;
- (void)_runApplescript:(id)fp8 andReturnArray:(id)fp12;
- (id)runApplescript:(id)fp8;
- (id)arrayFromDescriptor:(id)fp8;
- (BOOL)setApplicationString;

@end

@interface MailEmailImporter : FilesystemEmailImporter
{
}

+ (id)name;
- (id)explanatoryText;
- (id)pathExtension;
- (BOOL)isValidMailbox:(id)fp8;
- (void)importMailbox:(id)fp8;

@end

@interface MboxEmailImporter : FilesystemEmailImporter
{
}

+ (id)name;
- (id)explanatoryText;
- (char *)fromString;

@end

@interface NetscapeEmailImporter : FilesystemEmailImporter
{
}

+ (id)name;
- (id)explanatoryText;
- (id)pathExtension;
- (char *)fromString;

@end

@interface OEEmailImporter : ApplescriptEmailImporter
{
}

+ (id)name;
- (id)creatorCode;

@end

@interface ImportItem : NSObject
{
    BOOL _isEnabled;
    NSString *_displayName;
    float _progressValue;
    NSString *_fullPath;
    NSString *_relativePath;
    int _itemCount;
    id _identifier;
    int _subfolderCount;
    id _importFields;
}

- (BOOL)isEnabled;
- (void)setIsEnabled:(BOOL)fp8;
- (id)displayName;
- (void)setDisplayName:(id)fp8;
- (float)progressValue;
- (void)setProgressValue:(float)fp8;
- (id)fullPath;
- (void)setFullPath:(id)fp8;
- (id)relativePath;
- (void)setRelativePath:(id)fp8;
- (int)itemCount;
- (void)setItemCount:(int)fp8;
- (id)identifier;
- (void)setIdentifier:(id)fp8;
- (int)subfolderCount;
- (void)setSubfolderCount:(int)fp8;
- (id)importFields;
- (void)setImportFields:(id)fp8;

@end

@interface GeneralPreferences : NSPreferencesModule
{
    NSPopUpButton *fetchFrequencyPopup;
    SoundPopUpButton *newMailSoundPopup;
    NSButton *playMailSoundsCheckbox;
    NSString *soundFile;
    DefaultApplicationPopUpButton *defaultMailClientPopUp;
    NSButton *indexDecryptedMessagesButton;
}

- (id)titleForIdentifier:(id)fp8;
- (void)initializeFromDefaults;
- (void)fetchFrequencyChanged:(id)fp8;
- (void)indexDecryptedMessagesButtonClicked:(id)fp8;
- (void)newMailSoundDidChange:(id)fp8;
- (id)titleForSoundFile:(id)fp8;
- (void)playSoundsClicked:(id)fp8;

@end

@interface MailApp (ApplescriptGeneralPreferences)
- (BOOL)playOtherMailSounds;
- (void)setPlayOtherMailSounds:(BOOL)fp8;
- (id)newMailSoundPath;
- (void)setNewMailSoundPath:(id)fp8;
- (id)newMailSound;
- (void)setNewMailSound:(id)fp8;
- (BOOL)indexDecryptedMessages;
- (void)setIndexDecryptedMessages:(BOOL)fp8;
@end

@interface JunkPreferences : NSPreferencesModule
{
    id _textLabel1;
    id _textLabel2;
    id _advancedButton;
    id _resetButton;
    id _junkMailMode;
    id _junkMailOnOffSwitch;
    id _junkMailWhitelist;
    id _useJunkMailHeaderFlags;
}

- (id)titleForIdentifier:(id)fp8;
- (id)imageForPreferenceNamed:(id)fp8;
- (void)setAllEnabled:(BOOL)fp8;
- (void)initializeFromDefaults;
- (void)showJunkMailInfoPanel:(id)fp8;
- (void)junkMailToggled:(id)fp8;
- (void)whitelistChanged:(id)fp8;
- (void)setJunkMailBehavior:(int)fp8;
- (void)changeJunkMailBehavior:(id)fp8;
- (void)resetJunkMailMap:(id)fp8;
- (void)showCustomJunkMailSettings:(id)fp8;
- (void)useJunkMailHeaderFlagsToggled:(id)fp8;

@end

@interface AddressLayoutManager : NSLayoutManager
{
    BOOL isDrawingBackground;
}

- (void)drawBackgroundForGlyphRange:(struct _NSRange)fp8 atPoint:(struct _NSPoint)fp16;
- (struct _NSRect *)rectArrayForCharacterRange:(struct _NSRange)fp8 withinSelectedCharacterRange:(struct _NSRange)fp16 inTextContainer:(id)fp24 rectCount:(unsigned int *)fp28;

@end

@interface ExchangeAccountDetails : IMAPAccountDetails
{
}

+ (id)accountDetailsNibName;
- (Class)accountClass;

@end

@interface RolloverButtonCell : MessageListCell
{
    id _target;
    SEL _action;
}

- (void)setTarget:(id)fp8;
- (void)setAction:(SEL)fp8;
- (id)target;
- (SEL)action;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)_sendActionFrom:(id)fp8;

@end

@interface TableHeaderView : NSTableHeaderView
{
    BOOL _noSeparatorLines;
}

+ (id)updateHeaderViewForTableView:(id)fp8;
- (BOOL)drawsSeparatorLines;
- (void)setDrawsSeparatorLines:(BOOL)fp8;
- (BOOL)_drawingEndSeparator;

@end

@interface ThreadDisplay : NSObject <MessageContentDisplay>
{
    NSView *contentView;
    NSTextField *subjectField;
    NSTextField *originatorField;
    NSTextField *countsField;
    ASExtendedTableView *summaryTable;
    MessageThread *_thread;
    NSMutableArray *_messages;
    NSMutableDictionary *_attributes;
    float _deltaY;
    unsigned int _currentRow:16;
    unsigned int _enterCount:16;
    struct __CFSet *_trackingRectTags;
}

+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
- (void)dealloc;
- (id)contentView;
- (id)textView;
- (void)_resetTrackingRectsForTableView:(id)fp8;
- (void)_adjustViewHeightsIncludingRoundedView:(BOOL)fp8;
- (void)_adjustColumnsBasedOnTableManager:(id)fp8;
- (void)_reloadMessages;
- (void)_mallStructureChanged:(id)fp8;
- (void)_messageFlagsChanged:(id)fp8;
- (void)_tableSuperviewFrameChanged:(id)fp8;
- (void)_tableViewScrolled:(id)fp8;
- (void)_datesNeedRedisplay;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16;
- (void)prepareToRemoveView;
- (void)highlightSearchText:(id)fp8;
- (id)selectedText;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (id)findTarget;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)tableView:(id)fp8 shouldSelectRow:(int)fp12;
- (void)_updateCurrentRow:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;

@end

@interface RoundedView : NSView
{
    NSColor *_backgroundColor;
    NSColor *_borderColor;
}

- (BOOL)isFlipped;
- (void)dealloc;
- (void)drawRect:(struct _NSRect)fp8;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)fp8;
- (id)borderColor;
- (void)setBorderColor:(id)fp8;

@end

@interface WebMessageController : NSObject
{
    WebMessageDocument *_document;
    MessageWebView *_webView;
    NSView *_mainFrameDocumentView;
}

+ (void)setupViewingPrefs:(id)fp8;
+ (void)initialize;
+ (id)viewForDocument:(id)fp8;
- (id)initWithDocument:(id)fp8;
- (void)setWebView:(id)fp8;
- (id)webView;
- (void)documentResized;
- (void)_setMainFrameDocumentView:(id)fp8;
- (BOOL)hasFinishedLoading;
- (void)stopLoading;
- (void)dealloc;
- (BOOL)_isInternalURL:(id)fp8;
- (void)webView:(id)fp8 decidePolicyForNavigationAction:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;
- (void)webView:(id)fp8 decidePolicyForNewWindowAction:(id)fp12 request:(id)fp16 newFrameName:(id)fp20 decisionListener:(id)fp24;
- (id)webView:(id)fp8 identifierForInitialRequest:(id)fp12 fromDataSource:(id)fp16;
- (id)webView:(id)fp8 resource:(id)fp12 willSendRequest:(id)fp16 redirectResponse:(id)fp20 fromDataSource:(id)fp24;
- (void)webView:(id)fp8 didStartProvisionalLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didCommitLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didFailProvisionalLoadWithError:(id)fp12 forFrame:(id)fp16;
- (id)webView:(id)fp8 contextMenuItemsForElement:(id)fp12 defaultMenuItems:(id)fp16;
- (void)download:(id)fp8 decideDestinationWithSuggestedFilename:(id)fp12;
- (void)adjustFontSizeBy:(int)fp8;
- (void)refreshWithViewingState:(id)fp8;
- (id)mainFrameDocumentView;

@end

@interface MessageTextView (WebAttachmentSupport)
- (void)adjustPageHeightNew:(float *)fp8 top:(float)fp12 bottom:(float)fp16 limit:(float)fp20;
@end

@interface NSTextView (WebAttachmentSupport)
- (id)webControllers;
- (float)desiredWidth;
@end

@interface CertificatePanelController : NSObject
{
    NSPanel *panel;
    SFCertificateView *certificateView;
    NSTextField *titleField;
    NSTextField *messageField;
    NSButton *rememberChanges;
    NSScrollView *scrollView;
    struct _NSRect lastScrollViewFrame;
    struct _NSRect lastPanelFrame;
    struct _NSSize minSizeWithDetail;
    struct _NSSize minSizeWithoutDetail;
}

- (void)orderOutPanel:(id)fp8;
- (void)toggleCertificateView:(id)fp8;
- (id)_findButtonInViews:(id)fp8 withAction:(SEL)fp12;
- (BOOL)runModalForError:(id)fp8 certificate:(struct OpaqueSecCertificateRef *)fp12 rememberDecision:(char *)fp16;

@end

@interface EncryptionErrorPanelController : NSObject
{
    NSPanel *panel;
    SFCertificateView *certificateView;
    NSTextField *titleField;
    NSTextField *messageField;
    NSScrollView *scrollView;
}

- (void)endSheet:(id)fp8;
- (void)sheetEnded:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)runModalForError:(id)fp8 certificate:(struct OpaqueSecCertificateRef *)fp12 modalForWindow:(id)fp16;

@end

@interface ImagePopUpButtonCell : NSPopUpButtonCell
{
    NSImage *image;
    NSImage *alternateImage;
}

- (void)dealloc;
- (float)_extraWidthForCellHeight:(float)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawBorderAndBackgroundWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setImage:(id)fp8;
- (id)image;
- (void)setAlternateImage:(id)fp8;
- (id)alternateImage;

@end

@interface TransferOperation : NSObject
{
    MessageStore *sourceStore;
    MailboxUid *destinationMailboxUid;
    NSMutableArray *sourceMessages;
    NSMutableArray *destinationMessageIDs;
}

- (void)dealloc;
- (id)initWithSourceStore:(id)fp8 destinationMailboxUid:(id)fp12;

@end

@interface MessageTransfer : NSObject
{
    id _delegate;
    NSMutableArray *_operations;
    BOOL _deleteOriginals;
}

+ (void)initialize;
+ (void)_undo:(id)fp8;
+ (void)_redo:(id)fp8;
- (void)dealloc;
- (id)initWithMessages:(id)fp8 targetMailboxUid:(id)fp12;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (BOOL)deleteOriginals;
- (void)setDeleteOriginals:(BOOL)fp8;
- (void)beginTransfer;
- (void)_completedTransferWithError:(id)fp8;
- (void)_undo;
- (void)_synchronouslyPerformTransfer;

@end

@interface NSTextStorage (AttachmentAttrFixCategory)
- (void)fixAttributesInRange:(struct _NSRange)fp8;
@end

~/Desktop> 
